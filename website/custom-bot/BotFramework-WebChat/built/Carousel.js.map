{"version":3,"file":"Carousel.js","sourceRoot":"","sources":["../src/Carousel.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAE/B,2CAA8C;AAE9C,qCAAoC;AAEpC,mCAAqC;AAUrC;IAA8B,oCAAsC;IAIhE,kBAAY,KAAoB;eAC5B,kBAAM,KAAK,CAAC;IAChB,CAAC;IAEO,qCAAkB,GAA1B;QACI,iFAAiF;QACjF,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC;QAEvE,6EAA6E;QAC7E,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QAE3B,qCAAqC;QACrC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC;YAChC,2FAA2F;YAC3F,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC;YAChD,wDAAwD;YACxD,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC;QACvC,CAAC;IACL,CAAC;IAED,oCAAiB,GAAjB;QACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAED,qCAAkB,GAAlB;QACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAED,yBAAM,GAAN;QAAA,iBAYC;QAXG,MAAM,CAAC,CACH,6BAAK,SAAS,EAAC,aAAa,EAAC,GAAG,EAAG,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,IAAI,GAAG,GAAG,EAAf,CAAe;YACrD,oBAAC,iBAAO,IAAC,GAAG,EAAG,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,EAC5C,eAAe,EAAC,sEAAsE,EACtF,eAAe,EAAC,uEAAuE,EACvF,UAAU,EAAC,MAAM;gBAEjB,oBAAC,mBAAmB,uBAAO,IAAI,CAAC,KAAgC,EAAI,CAC9D,CACP,CACV,CAAA;IACL,CAAC;IACL,eAAC;AAAD,CAAC,AA7CD,CAA8B,KAAK,CAAC,aAAa,GA6ChD;AA7CY,4BAAQ;AAsDrB;IAAkC,+CAAgD;IAAlF;;IAiBA,CAAC;IAhBG,oCAAM,GAAN;QACI,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAC7C,IAAM,eAAuC,EAArC,4BAAW,EAAE,2CAAwB,CAAC;QAC9C,MAAM,CAAC,CACH,gCAAM,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,UAAC,UAAU,EAAE,KAAK;YAC/C,OAAA,4BAAI,GAAG,EAAG,KAAK,EAAG,SAAS,EAAC,kBAAkB;gBAC1C,oBAAC,2BAAc,IACX,UAAU,EAAG,UAAU,EACvB,MAAM,EAAG,KAAK,CAAC,MAAM,EACrB,YAAY,EAAG,KAAK,CAAC,YAAY,EACjC,WAAW,EAAG,KAAK,CAAC,WAAW,GACjC,CACD;QAPL,CAOK,CACR,CAAO,CACX,CAAC;IACN,CAAC;IACL,0BAAC;AAAD,CAAC,AAjBD,CAAkC,KAAK,CAAC,aAAa,GAiBpD","sourcesContent":["import * as React from 'react';\nimport { Attachment } from 'botframework-directlinejs';\nimport { AttachmentView } from './Attachment';\nimport { FormatState, SizeState } from './Store';\nimport { HScroll } from './HScroll';\nimport { IDoCardAction } from './Chat';\nimport * as konsole from './Konsole';\n\nexport interface CarouselProps {\n    format: FormatState,\n    size: SizeState,\n    attachments: Attachment[],\n    onCardAction: IDoCardAction,\n    onImageLoad: () => void\n}\n\nexport class Carousel extends React.PureComponent<CarouselProps, {}> {\n    private root: HTMLDivElement;\n    private hscroll: HScroll;\n\n    constructor(props: CarouselProps) {\n        super(props);\n    }\n\n    private updateContentWidth() {\n        //after the attachments have been rendered, we can now measure their actual width\n        const width = this.props.size.width - this.props.format.carouselMargin;\n\n        //important: remove any hard styling so that we can measure the natural width\n        this.root.style.width = '';\n\n        //now measure the natural offsetWidth\n        if (this.root.offsetWidth > width) {\n            // the content width is bigger than the space allotted, so we'll clip it to force scrolling\n            this.root.style.width = width.toString() + \"px\";\n            // since we're scrolling, we need to show scroll buttons\n            this.hscroll.updateScrollButtons();\n        }\n    }\n\n    componentDidMount() {\n        this.updateContentWidth();\n    }\n\n    componentDidUpdate() {\n        this.updateContentWidth();\n    }\n\n    render() {\n        return (\n            <div className=\"wc-carousel\" ref={ div => this.root = div }>\n                <HScroll ref={ hscroll => this.hscroll = hscroll }\n                    prevSvgPathData=\"M 16.5 22 L 19 19.5 L 13.5 14 L 19 8.5 L 16.5 6 L 8.5 14 L 16.5 22 Z\"\n                    nextSvgPathData=\"M 12.5 22 L 10 19.5 L 15.5 14 L 10 8.5 L 12.5 6 L 20.5 14 L 12.5 22 Z\"\n                    scrollUnit=\"item\"\n                >\n                    <CarouselAttachments { ... this.props as CarouselAttachmentProps }/>\n                </HScroll>\n            </div >\n        )\n    }\n}\n\nexport interface CarouselAttachmentProps {\n    format: FormatState,\n    attachments: Attachment[],\n    onCardAction: IDoCardAction,\n    onImageLoad: () => void\n}\n\nclass CarouselAttachments extends React.PureComponent<CarouselAttachmentProps, {}> {\n    render() {\n        konsole.log(\"rendering CarouselAttachments\");\n        const { attachments, ... props } = this.props;\n        return (\n            <ul>{ this.props.attachments.map((attachment, index) =>\n                <li key={ index } className=\"wc-carousel-item\">\n                    <AttachmentView\n                        attachment={ attachment }\n                        format={ props.format }\n                        onCardAction={ props.onCardAction }\n                        onImageLoad={ props.onImageLoad }\n                    />\n                </li>\n            ) }</ul>\n        );\n    }\n}\n"]}