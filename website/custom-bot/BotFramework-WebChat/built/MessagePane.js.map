{"version":3,"file":"MessagePane.js","sourceRoot":"","sources":["../src/MessagePane.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Activity, CardAction, User, Message } from 'botframework-directlinejs';\nimport { ChatState } from './Store';\nimport { connect } from 'react-redux';\nimport { HScroll } from './HScroll';\nimport { classList, doCardAction, IDoCardAction } from './Chat';\nimport * as konsole from './Konsole';\nimport { ChatActions, sendMessage } from './Store';\nimport { activityWithSuggestedActions } from './activityWithSuggestedActions';\n\nexport interface MessagePaneProps {\n    activityWithSuggestedActions: Message,\n\n    takeSuggestedAction: (message: Message) => any,\n\n    children: React.ReactNode,\n    doCardAction: IDoCardAction\n}\n\nconst MessagePaneView = (props: MessagePaneProps) =>\n    <div className={ classList('wc-message-pane', props.activityWithSuggestedActions && 'show-actions' ) }>\n        { props.children }\n        <div className=\"wc-suggested-actions\">\n            <SuggestedActions { ... props }/>\n        </div>\n    </div>;\n\nclass SuggestedActions extends React.Component<MessagePaneProps, {}> {\n    constructor(props: MessagePaneProps) {\n        super(props);\n    }\n\n    actionClick(e: React.MouseEvent<HTMLButtonElement>, cardAction: CardAction) {\n\n        //\"stale\" actions may be displayed (see shouldComponentUpdate), do not respond to click events if there aren't actual actions\n        if (!this.props.activityWithSuggestedActions) return;\n\n        this.props.takeSuggestedAction(this.props.activityWithSuggestedActions);\n        this.props.doCardAction(cardAction.type, cardAction.value);\n        e.stopPropagation();\n    }\n\n    shouldComponentUpdate(nextProps: MessagePaneProps) {\n        //update only when there are actions. We want the old actions to remain displayed as it animates down.\n        return !!nextProps.activityWithSuggestedActions;\n    }\n\n    render() {\n        if (!this.props.activityWithSuggestedActions) return null;\n\n        return (\n            <HScroll\n                prevSvgPathData=\"M 16.5 22 L 19 19.5 L 13.5 14 L 19 8.5 L 16.5 6 L 8.5 14 L 16.5 22 Z\"\n                nextSvgPathData=\"M 12.5 22 L 10 19.5 L 15.5 14 L 10 8.5 L 12.5 6 L 20.5 14 L 12.5 22 Z\"\n                scrollUnit=\"page\"\n            >\n                <ul>{ this.props.activityWithSuggestedActions.suggestedActions.actions.map((action, index) =>\n                    <li key={ index }>\n                        <button type=\"button\" onClick={ e => this.actionClick(e, action) } title={ action.title }>\n                            { action.title }\n                        </button>\n                    </li>\n                ) }</ul>\n            </HScroll>\n        );\n    }\n\n}\n\nexport const MessagePane = connect(\n    (state: ChatState) => ({\n        // passed down to MessagePaneView\n        activityWithSuggestedActions: activityWithSuggestedActions(state.history.activities),\n        // only used to create helper functions below\n        botConnection: state.connection.botConnection,\n        user: state.connection.user,\n        locale: state.format.locale\n    }), {\n        takeSuggestedAction: (message: Message) => ({ type: 'Take_SuggestedAction', message } as ChatActions),\n        // only used to create helper functions below\n        sendMessage\n    }, (stateProps: any, dispatchProps: any, ownProps: any): MessagePaneProps => ({\n        // from stateProps\n        activityWithSuggestedActions: stateProps.activityWithSuggestedActions,\n        // from dispatchProps\n        takeSuggestedAction: dispatchProps.takeSuggestedAction,\n        // from ownProps\n        children: ownProps.children,\n        // helper functions\n        doCardAction: doCardAction(stateProps.botConnection, stateProps.user, stateProps.locale, dispatchProps.sendMessage),\n    })\n)(MessagePaneView);\n"]}