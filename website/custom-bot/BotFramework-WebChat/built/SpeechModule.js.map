{"version":3,"file":"SpeechModule.js","sourceRoot":"","sources":["../src/SpeechModule.ts"],"names":[],"mappings":"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","sourcesContent":["import jspeech from 'jspeech';\n\nexport type Action = () => void\n\nexport type Func<T, TResult> = (item: T) => TResult;\n\ninterface EventEmitter {\n    addEventListener(name: string, listener: (event: Event) => void): void\n    removeEventListener(name: string, listener: (event: Event) => void): void\n}\n\nfunction prefixFallback(type: string, prefixes = ['moz', 'ms', 'webkit']): any {\n    return ['', ...prefixes].reduce((found, prefix) => found || (<any>window)[prefix + type], null);\n}\n\nfunction waitEvent(emitter: EventEmitter, name: string): Promise<Event> {\n    return new Promise((resolve, reject) => {\n        const detach = () => {\n            emitter.removeEventListener(name, rejectListener);\n            emitter.removeEventListener(name, resolveListener);\n        };\n\n        const rejectListener = (event: Event) => {\n            detach();\n            reject(event);\n        };\n\n        const resolveListener = (event: Event) => {\n            detach();\n            resolve(event);\n        };\n\n        emitter.addEventListener(name, resolveListener);\n        emitter.addEventListener('error', rejectListener);\n    });\n}\n\nexport module Speech {\n    export interface ISpeechRecognizer {\n        locale: string;\n        isStreamingToService: boolean;\n        referenceGrammarId: string; // unique identifier to send to the speech implementation to bias SR to this scenario\n\n        onIntermediateResult: Func<string, void>;\n        onFinalResult: Func<string, void>;\n        onAudioStreamingToService: Action;\n        onRecognitionFailed: Action;\n\n        warmup(): void;\n        setGrammars(grammars?: string[]): void;\n        startRecognizing(): Promise<void>;\n        stopRecognizing(): Promise<void>;\n        speechIsAvailable(): boolean;\n    }\n\n    export interface ISpeechSynthesizer {\n        speak(text: string, lang: string, onSpeakingStarted: Action, onspeakingFinished: Action): void;\n        stopSpeaking(): void;\n    }\n\n    export class SpeechRecognizer {\n        private static instance: ISpeechRecognizer = null;\n\n        public static setSpeechRecognizer(recognizer: ISpeechRecognizer) {\n            SpeechRecognizer.instance = recognizer;\n        }\n\n        public static async startRecognizing(\n            locale: string = 'en-US',\n            grammars?: string[],\n            onIntermediateResult: Func<string, void> = null,\n            onFinalResult: Func<string, void> = null,\n            onAudioStreamStarted: Action = null,\n            onRecognitionFailed: Action = null\n        ) {\n            if (!SpeechRecognizer.speechIsAvailable()) {\n                return;\n            }\n\n            if (locale && SpeechRecognizer.instance.locale !== locale) {\n                await SpeechRecognizer.instance.stopRecognizing();\n                SpeechRecognizer.instance.locale = locale; // to do this could invalidate warmup.\n            }\n\n            SpeechRecognizer.instance.setGrammars(grammars);\n\n            if (SpeechRecognizer.alreadyRecognizing()) {\n                await SpeechRecognizer.stopRecognizing();\n            }\n\n            SpeechRecognizer.instance.onIntermediateResult = onIntermediateResult;\n            SpeechRecognizer.instance.onFinalResult = onFinalResult;\n            SpeechRecognizer.instance.onAudioStreamingToService = onAudioStreamStarted;\n            SpeechRecognizer.instance.onRecognitionFailed = onRecognitionFailed;\n\n            await SpeechRecognizer.instance.startRecognizing();\n        }\n\n        public static async stopRecognizing() {\n            if (!SpeechRecognizer.speechIsAvailable()) {\n                return;\n            }\n\n            await SpeechRecognizer.instance.stopRecognizing();\n        }\n\n        public static warmup() {\n            if (!SpeechRecognizer.speechIsAvailable()) {\n                return;\n            }\n\n            SpeechRecognizer.instance.warmup();\n        }\n\n        public static speechIsAvailable() {\n            return SpeechRecognizer.instance != null && SpeechRecognizer.instance.speechIsAvailable() ;\n        }\n\n        private static alreadyRecognizing() {\n            return SpeechRecognizer.instance ? SpeechRecognizer.instance.isStreamingToService : false;\n        }\n    }\n\n    export class SpeechSynthesizer {\n        private static instance: ISpeechSynthesizer = null;\n\n        public static setSpeechSynthesizer(speechSynthesizer: ISpeechSynthesizer) {\n            SpeechSynthesizer.instance = speechSynthesizer;\n        }\n\n        public static speak(text: string, lang: string, onSpeakingStarted: Action = null, onSpeakingFinished: Action = null) {\n            if (SpeechSynthesizer.instance == null)\n                return;\n\n            SpeechSynthesizer.instance.speak(text, lang, onSpeakingStarted, onSpeakingFinished);\n        }\n\n        public static stopSpeaking() {\n            if (SpeechSynthesizer.instance == null)\n                return;\n\n            SpeechSynthesizer.instance.stopSpeaking();\n        }\n    }\n\n    export class BrowserSpeechRecognizer implements ISpeechRecognizer {\n        public locale: string = null;\n        public isStreamingToService: boolean = false;\n        public referenceGrammarId: string;\n\n        public onIntermediateResult: Func<string, void> = null;\n        public onFinalResult: Func<string, void> = null;\n        public onAudioStreamingToService: Action = null;\n        public onRecognitionFailed: Action = null;\n\n        private recognizer: any = null;\n\n        constructor() {\n            if(!(<any>window).webkitSpeechRecognition) {\n                console.error(\"This browser does not support speech recognition\");\n                return;\n            }\n\n            this.recognizer = new (<any>window).webkitSpeechRecognition();\n            this.recognizer.lang = 'en-US';\n            this.recognizer.interimResults = true;\n\n            this.recognizer.onaudiostart = () => {\n                if (this.onAudioStreamingToService) {\n                    this.onAudioStreamingToService();\n                }\n            };\n\n            this.recognizer.onresult = (srevent: any) => {\n                if (srevent.results == null || srevent.length == 0) {\n                    return;\n                }\n\n                const result = srevent.results[0];\n                if (result.isFinal === true && this.onFinalResult != null) {\n                    this.onFinalResult(result[0].transcript);\n                } else if (result.isFinal === false && this.onIntermediateResult != null) {\n                    let text = \"\";\n                    for (let i = 0; i < srevent.results.length; ++i) {\n                        text += srevent.results[i][0].transcript;\n                    }\n                    this.onIntermediateResult(text);\n                }\n            }\n\n            this.recognizer.onerror = (err: any) => {\n                if (this.onRecognitionFailed) {\n                    this.onRecognitionFailed();\n                }\n                throw err;\n            };\n\n            this.recognizer.onend = () => {\n                this.isStreamingToService = false;\n            };\n        }\n\n        public speechIsAvailable() {\n            return this.recognizer != null;\n        }\n\n        public warmup() {\n\n        }\n\n        public startRecognizing() {\n            this.isStreamingToService = true;\n            this.recognizer.start();\n\n            return waitEvent(this.recognizer, 'start').then(() => {});\n        }\n\n        public stopRecognizing() {\n            if (this.isStreamingToService) {\n                this.recognizer.stop();\n\n                return waitEvent(this.recognizer, 'end').then(() => {});\n            } else {\n                return Promise.resolve();\n            }\n        }\n\n        public setGrammars(grammars: string[] = []) {\n            const list = new (prefixFallback('SpeechGrammarList'));\n\n            if (!list) {\n                if (grammars.length) {\n                    console.warn('This browser does not support speech grammar list');\n                }\n\n                return;\n            } else if (!grammars.length) {\n                return;\n            }\n\n            const grammar = jspeech('listenfor');\n\n            grammar.public.rule('hint', grammars.join(' | '));\n\n            list.addFromString(grammar.stringify());\n            this.recognizer.grammars = list;\n        }\n    }\n\n    export class BrowserSpeechSynthesizer implements ISpeechSynthesizer {\n        private lastOperation: SpeechSynthesisUtterance = null;\n        private audioElement: HTMLAudioElement = null;\n        private speakRequests: SpeakRequest[] = [];\n\n        public speak(text: string, lang: string, onSpeakingStarted: Action = null, onSpeakingFinished: Action = null) {\n            if (!('SpeechSynthesisUtterance' in window) || !text)\n                return;\n\n            if (this.audioElement === null) {\n                const audio = document.createElement('audio');\n                audio.id = 'player';\n                audio.autoplay = true;\n\n                this.audioElement = audio;\n            }\n\n            const chunks = new Array<any>();\n            if (text[0] === '<') {\n                if (text.indexOf('<speak') != 0)\n                    text = '<speak>\\n' + text + '\\n</speak>\\n';\n                const parser = new DOMParser();\n                const dom = parser.parseFromString(text, 'text/xml');\n                const nodes = dom.documentElement.childNodes;\n                this.processNodes(nodes, chunks);\n            }\n            else {\n                chunks.push(text);\n            }\n\n            const onSpeakingFinishedWrapper = () => {\n                if (onSpeakingFinished !== null)\n                    onSpeakingFinished();\n\n                // remove this from the queue since it's done:\n                if (this.speakRequests.length) {\n                    this.speakRequests[0].completed();\n                    this.speakRequests.splice(0, 1);\n                }\n\n                // If there are other speak operations in the queue, process them\n                if (this.speakRequests.length) {\n                    this.playNextTTS(this.speakRequests[0], 0);\n                }\n            }\n\n            const request = new SpeakRequest(chunks, lang, (speakOp) => { this.lastOperation = speakOp }, onSpeakingStarted, onSpeakingFinishedWrapper);\n\n            if (this.speakRequests.length === 0) {\n                this.speakRequests = [request];\n                this.playNextTTS(this.speakRequests[0], 0);\n            }\n            else {\n                this.speakRequests.push(request);\n            }\n        }\n\n        public stopSpeaking() {\n            if (('SpeechSynthesisUtterance' in window) === false)\n                return;\n\n            if (this.speakRequests.length) {\n                if (this.audioElement)\n                    this.audioElement.pause();\n\n                this.speakRequests.forEach(req => {\n                    req.abandon();\n                });\n\n                this.speakRequests = [];\n                const ss = window.speechSynthesis;\n                if (ss.speaking || ss.pending) {\n                    if (this.lastOperation)\n                        this.lastOperation.onend = null;\n                    ss.cancel();\n                }\n            }\n        };\n\n        private playNextTTS(requestContainer: SpeakRequest, iCurrent: number) {\n            // lang : string, onSpeakQueued: Func<SpeechSynthesisUtterance, void>, onSpeakStarted : Action, onFinishedSpeaking : Action\n\n            const moveToNext = () => {\n                this.playNextTTS(requestContainer, iCurrent + 1);\n            };\n\n            if (iCurrent < requestContainer.speakChunks.length) {\n                const current = requestContainer.speakChunks[iCurrent];\n                if (typeof current === 'number') {\n                    setTimeout(moveToNext, current);\n                } else {\n                    if (current.indexOf('http') === 0) {\n                        const audio = this.audioElement; // document.getElementById('player');\n                        audio.src = current;\n                        audio.onended = moveToNext;\n                        audio.onerror = moveToNext;\n                        audio.play();\n                    } else {\n                        const msg = new SpeechSynthesisUtterance();\n                        // msg.voiceURI = 'native';\n                        // msg.volume = 1; // 0 to 1\n                        // msg.rate = 1; // 0.1 to 10\n                        // msg.pitch = 2; //0 to 2\n                        msg.text = current;\n                        msg.lang = requestContainer.lang;\n                        msg.onstart = iCurrent === 0 ? requestContainer.onSpeakingStarted : null\n                        msg.onend = moveToNext;\n                        msg.onerror = moveToNext;\n\n                        if (requestContainer.onSpeakQueued)\n                            requestContainer.onSpeakQueued(msg);\n\n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            } else {\n                if (requestContainer.onSpeakingFinished)\n                    requestContainer.onSpeakingFinished();\n            }\n        }\n\n        // process SSML markup into an array of either\n        // * utterenance\n        // * number which is delay in msg\n        // * url which is an audio file\n        private processNodes(nodes: NodeList, output: any[]): void {\n            for (let i = 0; i < nodes.length; i++) {\n                const node = nodes[i];\n                switch (node.nodeName) {\n                    case 'p':\n                        this.processNodes(node.childNodes, output);\n                        output.push(250);\n                        break;\n                    case 'break':\n                        if (node.attributes.getNamedItem('strength')) {\n                            const strength = node.attributes.getNamedItem('strength').nodeValue;\n                            if (strength === 'weak') {\n                                // output.push(50);\n                            } else if (strength === 'medium') {\n                                output.push(50);\n                            } else if (strength === 'strong') {\n                                output.push(100);\n                            } else if (strength === 'x-strong') {\n                                output.push(250);\n                            }\n                        } else if (node.attributes.getNamedItem('time')) {\n                            output.push(JSON.parse(node.attributes.getNamedItem('time').value));\n                        }\n                        break;\n                    case 'audio':\n                        if (node.attributes.getNamedItem('src')) {\n                            output.push(node.attributes.getNamedItem('src').value);\n                        }\n                        break;\n                    case 'say-as':\n                    case 'prosody':  // ToDo: handle via msg.rate\n                    case 'emphasis': // ToDo: can probably emulate via prosody + pitch\n                    case 'w':\n                    case 'phoneme': //\n                    case 'voice':\n                        this.processNodes(node.childNodes, output);\n                        break;\n                    default:\n                        // Todo: coalesce consecutive non numeric / non html entries.\n                        output.push(node.textContent);\n                        break;\n                }\n            }\n        }\n    }\n\n    class SpeakRequest {\n        private _onSpeakQueued: Func<SpeechSynthesisUtterance, void> = null;\n        private _onSpeakingStarted: Action = null;\n        private _onSpeakingFinished: Action = null;\n        private _speakChunks: any[] = [];\n        private _lang: string = null;\n\n        public constructor(speakChunks: any[],\n            lang: string,\n            onSpeakQueued: Func<SpeechSynthesisUtterance, void> = null,\n            onSpeakingStarted: Action = null,\n            onSpeakingFinished: Action = null) {\n            this._onSpeakQueued = onSpeakQueued;\n            this._onSpeakingStarted = onSpeakingStarted;\n            this._onSpeakingFinished = onSpeakingFinished;\n            this._speakChunks = speakChunks\n            this._lang = lang;\n        }\n\n        public abandon() {\n            this._speakChunks = [];\n        }\n\n        public completed() {\n            this._speakChunks = [];\n        }\n\n        get onSpeakQueued(): Func<SpeechSynthesisUtterance, void> { return this._onSpeakQueued; }\n        get onSpeakingStarted(): Action { return this._onSpeakingStarted; }\n        get onSpeakingFinished(): Action { return this._onSpeakingFinished; }\n        get speakChunks(): any[] { return this._speakChunks; }\n        get lang(): string { return this._lang; }\n    }\n}\n"]}