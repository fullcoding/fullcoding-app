{"version":3,"sources":["webpack:///adaptivecards.min.js","webpack:///webpack/bootstrap 64e86f64d425f759044c","webpack:///./src/enums.ts","webpack:///./src/utils.ts","webpack:///./src/host-config.ts","webpack:///./src/adaptivecards.ts","webpack:///./src/card-elements.ts","webpack:///./src/text-formatters.ts"],"names":["AdaptiveCards","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","Size","TextSize","Spacing","TextWeight","TextColor","HorizontalAlignment","VerticalAlignment","ActionAlignment","ImageStyle","ShowCardActionMode","Orientation","BackgroundImageMode","ContainerStyle","ValidationError","ContainerFitStatus","getValueOrDefault","obj","defaultValue","isNullOrEmpty","undefined","appendChild","node","child","getEnumValueOrDefault","targetEnum","key","parseInt","toLowerCase","parseHostConfigEnum","renderSeparation","separationDefinition","orientation","spacing","lineThickness","separator","document","createElement","Enums","Horizontal","style","marginTop","paddingTop","borderTop","stringToCssColor","lineColor","height","marginLeft","paddingLeft","borderLeft","width","overflow","color","regEx","matches","exec","a","truncate","element","maxHeight","lineHeight","fits","scrollHeight","fullText","innerHTML","truncateAt","idx","substring","breakableIndices","findBreakableIndices","lo","hi","length","bestBreakIdx","mid","Math","floor","findNextCharacter","html","results","push","currIdx","getFitStatus","containerEnd","start","offsetTop","clientHeight","FullyInContainer","Overflowing","FullyOutOfContainer","ContentTypes","applicationJson","applicationXWwwFormUrlencoded","StringWithSubstitutions","this","_isProcessed","_original","_processed","substituteInputValues","inputs","contentType","matchedInput","id","valueForReplace","JSON","stringify","slice","encodeURIComponent","replace","set","__extends","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","create","Utils","TextColorDefinition","default","subtle","AdaptiveCardConfig","allowCustomStyle","ImageSetConfig","imageSize","Medium","maxImageHeight","toJSON","FactTextDefinition","size","Default","isSubtle","weight","wrap","warp","FactTitleDefinition","_super","_this","maxWidth","Bolder","FactSetConfig","title","ShowCardActionConfig","actionMode","Inline","inlineTopMargin","Emphasis","ActionsConfig","maxActions","buttonSpacing","showCard","preExpandSingleShowCardAction","actionsOrientation","actionAlignment","Left","ContainerStyleDefinition","foregroundColors","dark","light","accent","good","warning","attention","parse","getTextColorDefinitionOrDefault","backgroundColor","BuiltInContainerStyleDefinition","apply","arguments","ContainerStyleSet","_allStyles","customStyleArray","isArray","_i","customStyleArray_1","customStyle","styleName","keys","forEach","isBuiltIn","result","emphasis","customStyles","getStyleByName","HostConfig","choiceSetInputValueSeparator","supportsInteractivity","fontFamily","small","medium","large","extraLarge","padding","fontSizes","fontWeights","lighter","bolder","imageSizes","containerStyles","actions","adaptiveCard","imageSet","factSet","String","getEffectiveSpacing","Small","Large","ExtraLarge","Padding","__export","utils_1","invokeSetCollection","action","collection","isActionAllowed","forbiddenActionTypes","getJsonTypeName","createActionInstance","json","actionType","AdaptiveCard","actionTypeRegistry","createInstance","raiseParseError","error","UnknownActionType","message","raiseAnchorClickedEvent","anchor","card","getRootElement","onAnchorClickedHandler","onAnchorClicked","raiseExecuteActionEvent","parent","onExecuteActionHandler","onExecuteAction","prepare","getAllInputs","raiseInlineCardExpandedEvent","isExpanded","onInlineCardExpandedHandler","onInlineCardExpanded","raiseElementVisibilityChangedEvent","shouldUpdateLayout","rootElement","updateLayout","onElementVisibilityChangedHandler","onElementVisibilityChanged","raiseParseElementEvent","onParseElementHandler","onParseElement","onParseError","TextFormatters","SpacingDefinition","top","right","bottom","left","PaddingDefinition","None","toSpacingDefinition","hostConfig","CardElement","_lang","_hostConfig","_internalPadding","_parent","_renderedElement","_separatorElement","_isVisible","_truncatedDueToOverflow","_defaultRenderedElementDisplayMode","_padding","horizontalAlignment","internalRenderSeparator","separatorOrientation","updateRenderedElementVisibility","display","hideElementDueToOverflow","visibility","showElementHiddenDueToOverflow","handleOverflow","isVisible","isHiddenDueToOverflow","handled","truncateOverflow","resetOverflow","sizeChanged","undoOverflowTruncation","internalGetNonZeroPadding","processTop","processRight","processBottom","processLeft","internalPadding","isAtTheVeryTop","isAtTheVeryRight","isAtTheVeryBottom","isAtTheVeryLeft","adjustRenderedElementSize","renderedElement","flex","showBottomSpacer","requestingElement","hideBottomSpacer","allowCustomPadding","defaultPadding","getPadding","setPadding","useAutomaticContainerBleeding","setParent","getNonZeroPadding","getForbiddenElementTypes","getForbiddenActionTypes","speak","jsonSeparation","Deprecated","jsonHeight","validate","render","internalRender","boxSizing","processChildren","isRendered","offsetHeight","isFirstElement","isLastElement","isLeftMostElement","isRightMostElement","canContentBleed","getParentContainer","currentElement","Container","getElementById","getActionById","lang","Error","defaultHostConfig","useAdvancedCardBottomTruncation","TextBlock","useMarkdown","text","Center","textAlign","Right","fontSize","_computedLineHeight","colorDefinition","parentContainer","styleDefinition","actualTextColor","Accent","Dark","Light","Good","Warning","Attention","fontWeight","Lighter","toString","formattedText","formatText","processMarkdown","firstElementChild","HTMLElement","textOverflow","lastElementChild","marginBottom","anchors","getElementsByTagName","classList","add","target","onclick","e","preventDefault","wordWrap","maxLines","whiteSpace","useAdvancedTextBlockTruncation","_originalInnerHtml","sizeString","weightString","renderSpeech","restoreOriginalContent","truncateIfSupported","children","isTextOnly","tagName","Fact","FactSet","facts","borderWidth","borderSpacing","borderStyle","borderCollapse","trElement","tdElement","verticalAlign","textBlock","jsonFacts","fact","speech","Image","Auto","pixelWidth","pixelHeight","altText","url","alignItems","selectAction","tabIndex","setAttribute","onkeypress","keyCode","execute","cancelBubble","justifyContent","imageElement","minWidth","Stretch","Person","borderRadius","backgroundPosition","backgroundRepeat","src","alt","styleString","selectActionJson","_selectAction","ImageSet","_images","flexWrap","renderedImage","margin","marginRight","jsonImages","image","addImage","Input","PropertyCantBeNull","TextInput","isMultiline","_textareaElement","className","placeholder","maxLength","_inputElement","type","ToggleInput","valueOn","valueOff","_checkboxInputElement","checked","label","useMarkdownInRadioButtonAndCheckbox","labelElement","Choice","ChoiceSetInput","choices","isMultiSelect","defaultValues","split","_toggleInputs","checkboxInput","indexOf","compoundInput","isCompact","_selectElement","option","selected","disabled","hidden","radioInput","CollectionCantBeEmpty","concat","choiceArray","choice","NumberInput","_numberInputElement","min","max","DateInput","_dateInputElement","TimeInput","_timeInputElement","ActionButtonState","ActionButton","_element","_state","Normal","onClick","_action","click","updateCssStyle","ShowCardAction","Expanded","Subdued","_text","innerText","Action","_actionCollection","setCollection","actionCollection","setStatus","status","statusCard","InlineAdaptiveCard","showStatusCard","hideStatusCard","SubmitAction","_isPrepared","_originalData","_processedData","data","OpenUrlAction","HttpHeader","_value","newValue","HttpAction","_url","_body","_headers","headers","method","body","jsonHeaders","httpHeader","ActionCollection","owner","_actionButtons","_expandedAction","_renderedActionCount","_statusCard","_actionCard","items","onHideActionCardPane","onShowActionCardPane","_owner","refreshContainer","_actionCardContainer","paddingRight","hideActionCard","showActionCard","suppressStyle","renderedCard","actionClicked","actionButton","Popup","state","TooManyActions","InteractivityNotAllowed","ActionTypeNotAllowed","buttonStrip","flexDirection","ab","spacer","buttonStripContainer","addAction","clear","ActionSet","itemsCollectionPropertyName","jsonOrientation","jsonActions","BackgroundImage","mode","verticalAlignment","Top","backgroundImage","Repeat","RepeatHorizontally","RepeatVertically","backgroundSize","backgroundPositionX","backgroundPositionY","Bottom","_items","_style","verticalContentAlignment","isElementAllowed","forbiddenElementTypes","isInteractive","applyPadding","paddingBottom","physicalPadding","hasBackground","physicalMargin","useAutoPadding","effectivePadding","effectiveMargin","assign","separatorElement","minHeight","renderedElementCount","boundary","handleElement","cardElement","elt","maxHeight_1","_a","item","hasExplicitStyle","defaultStyle","InvalidPropertyValue","jsonBackgroundImage","elementType","elementTypeRegistry","addItem","UnknownElementType","isStandalone","Column","_computedWeight","Vertical","jsonWidth","invalidWidth","sizeAsNumber","isNaN","ColumnSet","_columns","totalWeight","renderedColumnCount","computedWeight","renderedColumn","jsonColumns","column","addColumn","weightedColumns","stretchedColumns","Hint","Version","major","minor","_isValid","_major","_minor","versionString","_versionString","ContainerWithActions","renderedActions","TypeRegistry","reset","findTypeRegistration","typeName","registerType","registrationInfo","unregisterType","splice","ElementTypeRegistry","ActionTypeRegistry","_cardTypeName","version","isVersionSupported","bypassVersionCheck","currentVersion","MissingCardType","isValid","UnsupportedCardVersion","langId","fallbackText","window","removeAttribute","formatters","DateFormatter","TimeFormatter","format","AbstractTextFormatter","regularExpression","_regularExpression","input","internalFormat","date","Date","toLocaleDateString","day","weekday","month","year","toLocaleTimeString","hour","minute"],"mappings":"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","file":"adaptivecards.min.js","sourcesContent":["var AdaptiveCards =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Size;\r\n(function (Size) {\r\n    Size[Size[\"Auto\"] = 0] = \"Auto\";\r\n    Size[Size[\"Stretch\"] = 1] = \"Stretch\";\r\n    Size[Size[\"Small\"] = 2] = \"Small\";\r\n    Size[Size[\"Medium\"] = 3] = \"Medium\";\r\n    Size[Size[\"Large\"] = 4] = \"Large\";\r\n})(Size = exports.Size || (exports.Size = {}));\r\nvar TextSize;\r\n(function (TextSize) {\r\n    TextSize[TextSize[\"Small\"] = 0] = \"Small\";\r\n    TextSize[TextSize[\"Default\"] = 1] = \"Default\";\r\n    TextSize[TextSize[\"Medium\"] = 2] = \"Medium\";\r\n    TextSize[TextSize[\"Large\"] = 3] = \"Large\";\r\n    TextSize[TextSize[\"ExtraLarge\"] = 4] = \"ExtraLarge\";\r\n})(TextSize = exports.TextSize || (exports.TextSize = {}));\r\nvar Spacing;\r\n(function (Spacing) {\r\n    Spacing[Spacing[\"None\"] = 0] = \"None\";\r\n    Spacing[Spacing[\"Small\"] = 1] = \"Small\";\r\n    Spacing[Spacing[\"Default\"] = 2] = \"Default\";\r\n    Spacing[Spacing[\"Medium\"] = 3] = \"Medium\";\r\n    Spacing[Spacing[\"Large\"] = 4] = \"Large\";\r\n    Spacing[Spacing[\"ExtraLarge\"] = 5] = \"ExtraLarge\";\r\n    Spacing[Spacing[\"Padding\"] = 6] = \"Padding\";\r\n})(Spacing = exports.Spacing || (exports.Spacing = {}));\r\nvar TextWeight;\r\n(function (TextWeight) {\r\n    TextWeight[TextWeight[\"Lighter\"] = 0] = \"Lighter\";\r\n    TextWeight[TextWeight[\"Default\"] = 1] = \"Default\";\r\n    TextWeight[TextWeight[\"Bolder\"] = 2] = \"Bolder\";\r\n})(TextWeight = exports.TextWeight || (exports.TextWeight = {}));\r\nvar TextColor;\r\n(function (TextColor) {\r\n    TextColor[TextColor[\"Default\"] = 0] = \"Default\";\r\n    TextColor[TextColor[\"Dark\"] = 1] = \"Dark\";\r\n    TextColor[TextColor[\"Light\"] = 2] = \"Light\";\r\n    TextColor[TextColor[\"Accent\"] = 3] = \"Accent\";\r\n    TextColor[TextColor[\"Good\"] = 4] = \"Good\";\r\n    TextColor[TextColor[\"Warning\"] = 5] = \"Warning\";\r\n    TextColor[TextColor[\"Attention\"] = 6] = \"Attention\";\r\n})(TextColor = exports.TextColor || (exports.TextColor = {}));\r\nvar HorizontalAlignment;\r\n(function (HorizontalAlignment) {\r\n    HorizontalAlignment[HorizontalAlignment[\"Left\"] = 0] = \"Left\";\r\n    HorizontalAlignment[HorizontalAlignment[\"Center\"] = 1] = \"Center\";\r\n    HorizontalAlignment[HorizontalAlignment[\"Right\"] = 2] = \"Right\";\r\n})(HorizontalAlignment = exports.HorizontalAlignment || (exports.HorizontalAlignment = {}));\r\nvar VerticalAlignment;\r\n(function (VerticalAlignment) {\r\n    VerticalAlignment[VerticalAlignment[\"Top\"] = 0] = \"Top\";\r\n    VerticalAlignment[VerticalAlignment[\"Center\"] = 1] = \"Center\";\r\n    VerticalAlignment[VerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\r\n})(VerticalAlignment = exports.VerticalAlignment || (exports.VerticalAlignment = {}));\r\nvar ActionAlignment;\r\n(function (ActionAlignment) {\r\n    ActionAlignment[ActionAlignment[\"Left\"] = 0] = \"Left\";\r\n    ActionAlignment[ActionAlignment[\"Center\"] = 1] = \"Center\";\r\n    ActionAlignment[ActionAlignment[\"Right\"] = 2] = \"Right\";\r\n    ActionAlignment[ActionAlignment[\"Stretch\"] = 3] = \"Stretch\";\r\n})(ActionAlignment = exports.ActionAlignment || (exports.ActionAlignment = {}));\r\nvar ImageStyle;\r\n(function (ImageStyle) {\r\n    ImageStyle[ImageStyle[\"Default\"] = 0] = \"Default\";\r\n    ImageStyle[ImageStyle[\"Person\"] = 1] = \"Person\";\r\n})(ImageStyle = exports.ImageStyle || (exports.ImageStyle = {}));\r\nvar ShowCardActionMode;\r\n(function (ShowCardActionMode) {\r\n    ShowCardActionMode[ShowCardActionMode[\"Inline\"] = 0] = \"Inline\";\r\n    ShowCardActionMode[ShowCardActionMode[\"Popup\"] = 1] = \"Popup\";\r\n})(ShowCardActionMode = exports.ShowCardActionMode || (exports.ShowCardActionMode = {}));\r\nvar Orientation;\r\n(function (Orientation) {\r\n    Orientation[Orientation[\"Horizontal\"] = 0] = \"Horizontal\";\r\n    Orientation[Orientation[\"Vertical\"] = 1] = \"Vertical\";\r\n})(Orientation = exports.Orientation || (exports.Orientation = {}));\r\nvar BackgroundImageMode;\r\n(function (BackgroundImageMode) {\r\n    BackgroundImageMode[BackgroundImageMode[\"Stretch\"] = 0] = \"Stretch\";\r\n    BackgroundImageMode[BackgroundImageMode[\"RepeatHorizontally\"] = 1] = \"RepeatHorizontally\";\r\n    BackgroundImageMode[BackgroundImageMode[\"RepeatVertically\"] = 2] = \"RepeatVertically\";\r\n    BackgroundImageMode[BackgroundImageMode[\"Repeat\"] = 3] = \"Repeat\";\r\n})(BackgroundImageMode = exports.BackgroundImageMode || (exports.BackgroundImageMode = {}));\r\nvar ContainerStyle;\r\n(function (ContainerStyle) {\r\n    ContainerStyle[\"Default\"] = \"default\";\r\n    ContainerStyle[\"Emphasis\"] = \"emphasis\";\r\n})(ContainerStyle = exports.ContainerStyle || (exports.ContainerStyle = {}));\r\nvar ValidationError;\r\n(function (ValidationError) {\r\n    ValidationError[ValidationError[\"Hint\"] = 0] = \"Hint\";\r\n    ValidationError[ValidationError[\"ActionTypeNotAllowed\"] = 1] = \"ActionTypeNotAllowed\";\r\n    ValidationError[ValidationError[\"CollectionCantBeEmpty\"] = 2] = \"CollectionCantBeEmpty\";\r\n    ValidationError[ValidationError[\"Deprecated\"] = 3] = \"Deprecated\";\r\n    ValidationError[ValidationError[\"ElementTypeNotAllowed\"] = 4] = \"ElementTypeNotAllowed\";\r\n    ValidationError[ValidationError[\"InteractivityNotAllowed\"] = 5] = \"InteractivityNotAllowed\";\r\n    ValidationError[ValidationError[\"InvalidPropertyValue\"] = 6] = \"InvalidPropertyValue\";\r\n    ValidationError[ValidationError[\"MissingCardType\"] = 7] = \"MissingCardType\";\r\n    ValidationError[ValidationError[\"PropertyCantBeNull\"] = 8] = \"PropertyCantBeNull\";\r\n    ValidationError[ValidationError[\"TooManyActions\"] = 9] = \"TooManyActions\";\r\n    ValidationError[ValidationError[\"UnknownActionType\"] = 10] = \"UnknownActionType\";\r\n    ValidationError[ValidationError[\"UnknownElementType\"] = 11] = \"UnknownElementType\";\r\n    ValidationError[ValidationError[\"UnsupportedCardVersion\"] = 12] = \"UnsupportedCardVersion\";\r\n})(ValidationError = exports.ValidationError || (exports.ValidationError = {}));\r\nvar ContainerFitStatus;\r\n(function (ContainerFitStatus) {\r\n    ContainerFitStatus[ContainerFitStatus[\"FullyInContainer\"] = 0] = \"FullyInContainer\";\r\n    ContainerFitStatus[ContainerFitStatus[\"Overflowing\"] = 1] = \"Overflowing\";\r\n    ContainerFitStatus[ContainerFitStatus[\"FullyOutOfContainer\"] = 2] = \"FullyOutOfContainer\";\r\n})(ContainerFitStatus = exports.ContainerFitStatus || (exports.ContainerFitStatus = {}));\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Enums = __webpack_require__(0);\r\nexports.ContentTypes = {\r\n    applicationJson: \"application/json\",\r\n    applicationXWwwFormUrlencoded: \"application/x-www-form-urlencoded\"\r\n};\r\nfunction getValueOrDefault(obj, defaultValue) {\r\n    return obj ? obj : defaultValue;\r\n}\r\nexports.getValueOrDefault = getValueOrDefault;\r\nfunction isNullOrEmpty(value) {\r\n    return value === undefined || value === null || value === \"\";\r\n}\r\nexports.isNullOrEmpty = isNullOrEmpty;\r\nfunction appendChild(node, child) {\r\n    if (child != null && child != undefined) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\nexports.appendChild = appendChild;\r\nfunction getEnumValueOrDefault(targetEnum, name, defaultValue) {\r\n    if (isNullOrEmpty(name)) {\r\n        return defaultValue;\r\n    }\r\n    for (var key in targetEnum) {\r\n        var isValueProperty = parseInt(key, 10) >= 0;\r\n        if (isValueProperty) {\r\n            var value = targetEnum[key];\r\n            if (value && typeof value === \"string\") {\r\n                if (value.toLowerCase() === name.toLowerCase()) {\r\n                    return parseInt(key, 10);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return defaultValue;\r\n}\r\nexports.getEnumValueOrDefault = getEnumValueOrDefault;\r\nfunction parseHostConfigEnum(targetEnum, value, defaultValue) {\r\n    if (typeof value === \"string\") {\r\n        return getEnumValueOrDefault(targetEnum, value, defaultValue);\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return getValueOrDefault(value, defaultValue);\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n}\r\nexports.parseHostConfigEnum = parseHostConfigEnum;\r\nfunction renderSeparation(separationDefinition, orientation) {\r\n    if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\r\n        var separator = document.createElement(\"div\");\r\n        if (orientation == Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderTop = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderLeft = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        separator.style.overflow = \"hidden\";\r\n        return separator;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nexports.renderSeparation = renderSeparation;\r\nfunction stringToCssColor(color) {\r\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n    var matches = regEx.exec(color);\r\n    if (matches && matches[4]) {\r\n        var a = parseInt(matches[1], 16) / 255;\r\n        var r = parseInt(matches[2], 16);\r\n        var g = parseInt(matches[3], 16);\r\n        var b = parseInt(matches[4], 16);\r\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\nexports.stringToCssColor = stringToCssColor;\r\nvar StringWithSubstitutions = /** @class */ (function () {\r\n    function StringWithSubstitutions() {\r\n        this._isProcessed = false;\r\n        this._original = null;\r\n        this._processed = null;\r\n    }\r\n    StringWithSubstitutions.prototype.substituteInputValues = function (inputs, contentType) {\r\n        this._processed = this._original;\r\n        var regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n        var matches;\r\n        while ((matches = regEx.exec(this._original)) != null) {\r\n            var matchedInput = null;\r\n            for (var i = 0; i < inputs.length; i++) {\r\n                if (inputs[i].id.toLowerCase() == matches[1].toLowerCase()) {\r\n                    matchedInput = inputs[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (matchedInput) {\r\n                var valueForReplace = \"\";\r\n                if (matchedInput.value) {\r\n                    valueForReplace = matchedInput.value;\r\n                }\r\n                if (contentType === exports.ContentTypes.applicationJson) {\r\n                    valueForReplace = JSON.stringify(valueForReplace);\r\n                    valueForReplace = valueForReplace.slice(1, -1);\r\n                }\r\n                else if (contentType === exports.ContentTypes.applicationXWwwFormUrlencoded) {\r\n                    valueForReplace = encodeURIComponent(valueForReplace);\r\n                }\r\n                this._processed = this._processed.replace(matches[0], valueForReplace);\r\n            }\r\n        }\r\n        ;\r\n        this._isProcessed = true;\r\n    };\r\n    StringWithSubstitutions.prototype.get = function () {\r\n        if (!this._isProcessed) {\r\n            return this._original;\r\n        }\r\n        else {\r\n            return this._processed;\r\n        }\r\n    };\r\n    StringWithSubstitutions.prototype.set = function (value) {\r\n        this._original = value;\r\n        this._isProcessed = false;\r\n    };\r\n    return StringWithSubstitutions;\r\n}());\r\nexports.StringWithSubstitutions = StringWithSubstitutions;\r\nfunction truncate(element, maxHeight, lineHeight) {\r\n    var fits = function () {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n    if (fits())\r\n        return;\r\n    var fullText = element.innerHTML;\r\n    var truncateAt = function (idx) {\r\n        element.innerHTML = fullText.substring(0, idx) + '...';\r\n    };\r\n    var breakableIndices = findBreakableIndices(fullText);\r\n    var lo = 0;\r\n    var hi = breakableIndices.length;\r\n    var bestBreakIdx = 0;\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        var mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(breakableIndices[mid]);\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        }\r\n        else {\r\n            hi = mid;\r\n        }\r\n    }\r\n    truncateAt(bestBreakIdx);\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        var idx = findNextCharacter(fullText, bestBreakIdx);\r\n        while (idx < fullText.length) {\r\n            truncateAt(idx);\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        truncateAt(bestBreakIdx);\r\n    }\r\n}\r\nexports.truncate = truncate;\r\nfunction findBreakableIndices(html) {\r\n    var results = [];\r\n    var idx = findNextCharacter(html, -1);\r\n    while (idx < html.length) {\r\n        if (html[idx] == ' ') {\r\n            results.push(idx);\r\n        }\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n    return results;\r\n}\r\nfunction findNextCharacter(html, currIdx) {\r\n    currIdx += 1;\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] == '<') {\r\n        while (currIdx < html.length && html[currIdx++] != '>')\r\n            ;\r\n    }\r\n    return currIdx;\r\n}\r\nfunction getFitStatus(element, containerEnd) {\r\n    var start = element.offsetTop;\r\n    var end = start + element.clientHeight;\r\n    if (end <= containerEnd) {\r\n        return Enums.ContainerFitStatus.FullyInContainer;\r\n    }\r\n    else if (start < containerEnd) {\r\n        return Enums.ContainerFitStatus.Overflowing;\r\n    }\r\n    else {\r\n        return Enums.ContainerFitStatus.FullyOutOfContainer;\r\n    }\r\n}\r\nexports.getFitStatus = getFitStatus;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Enums = __webpack_require__(0);\r\nvar Utils = __webpack_require__(1);\r\nvar TextColorDefinition = /** @class */ (function () {\r\n    function TextColorDefinition(obj) {\r\n        this.default = \"#000000\";\r\n        this.subtle = \"#666666\";\r\n        if (obj) {\r\n            this.default = obj[\"default\"] || this.default;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n    return TextColorDefinition;\r\n}());\r\nexports.TextColorDefinition = TextColorDefinition;\r\nvar AdaptiveCardConfig = /** @class */ (function () {\r\n    function AdaptiveCardConfig(obj) {\r\n        this.allowCustomStyle = false;\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n    return AdaptiveCardConfig;\r\n}());\r\nexports.AdaptiveCardConfig = AdaptiveCardConfig;\r\nvar ImageSetConfig = /** @class */ (function () {\r\n    function ImageSetConfig(obj) {\r\n        this.imageSize = Enums.Size.Medium;\r\n        this.maxImageHeight = 100;\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.getValueOrDefault(obj[\"maxImageHeight\"], 100);\r\n        }\r\n    }\r\n    ImageSetConfig.prototype.toJSON = function () {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        };\r\n    };\r\n    return ImageSetConfig;\r\n}());\r\nexports.ImageSetConfig = ImageSetConfig;\r\nvar FactTextDefinition = /** @class */ (function () {\r\n    function FactTextDefinition(obj) {\r\n        this.size = Enums.TextSize.Default;\r\n        this.color = Enums.TextColor.Default;\r\n        this.isSubtle = false;\r\n        this.weight = Enums.TextWeight.Default;\r\n        this.wrap = true;\r\n        if (obj) {\r\n            this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\r\n            this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\r\n            this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\r\n            this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Default);\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n    ;\r\n    FactTextDefinition.prototype.toJSON = function () {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight],\r\n            warp: this.wrap\r\n        };\r\n    };\r\n    return FactTextDefinition;\r\n}());\r\nexports.FactTextDefinition = FactTextDefinition;\r\nvar FactTitleDefinition = /** @class */ (function (_super) {\r\n    __extends(FactTitleDefinition, _super);\r\n    function FactTitleDefinition(obj) {\r\n        var _this = _super.call(this, obj) || this;\r\n        _this.maxWidth = 150;\r\n        _this.weight = Enums.TextWeight.Bolder;\r\n        if (obj) {\r\n            _this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : _this.maxWidth;\r\n        }\r\n        return _this;\r\n    }\r\n    return FactTitleDefinition;\r\n}(FactTextDefinition));\r\nexports.FactTitleDefinition = FactTitleDefinition;\r\nvar FactSetConfig = /** @class */ (function () {\r\n    function FactSetConfig(obj) {\r\n        this.title = new FactTitleDefinition();\r\n        this.value = new FactTextDefinition();\r\n        this.spacing = 10;\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n    return FactSetConfig;\r\n}());\r\nexports.FactSetConfig = FactSetConfig;\r\nvar ShowCardActionConfig = /** @class */ (function () {\r\n    function ShowCardActionConfig(obj) {\r\n        this.actionMode = Enums.ShowCardActionMode.Inline;\r\n        this.inlineTopMargin = 16;\r\n        this.style = Enums.ContainerStyle.Emphasis;\r\n        if (obj) {\r\n            this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\r\n            this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style = obj[\"style\"] && typeof obj[\"style\"] === \"string\" ? obj[\"style\"] : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n    ShowCardActionConfig.prototype.toJSON = function () {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: this.style\r\n        };\r\n    };\r\n    return ShowCardActionConfig;\r\n}());\r\nexports.ShowCardActionConfig = ShowCardActionConfig;\r\nvar ActionsConfig = /** @class */ (function () {\r\n    function ActionsConfig(obj) {\r\n        this.maxActions = 5;\r\n        this.spacing = Enums.Spacing.Default;\r\n        this.buttonSpacing = 20;\r\n        this.showCard = new ShowCardActionConfig();\r\n        this.preExpandSingleShowCardAction = false;\r\n        this.actionsOrientation = Enums.Orientation.Horizontal;\r\n        this.actionAlignment = Enums.ActionAlignment.Left;\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\r\n            this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.getValueOrDefault(obj[\"preExpandSingleShowCardAction\"], false);\r\n            this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\r\n            this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\r\n        }\r\n    }\r\n    ActionsConfig.prototype.toJSON = function () {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        };\r\n    };\r\n    return ActionsConfig;\r\n}());\r\nexports.ActionsConfig = ActionsConfig;\r\nvar ContainerStyleDefinition = /** @class */ (function () {\r\n    function ContainerStyleDefinition(obj) {\r\n        this.foregroundColors = {\r\n            default: new TextColorDefinition(),\r\n            dark: new TextColorDefinition(),\r\n            light: new TextColorDefinition(),\r\n            accent: new TextColorDefinition(),\r\n            good: new TextColorDefinition(),\r\n            warning: new TextColorDefinition(),\r\n            attention: new TextColorDefinition()\r\n        };\r\n        this.parse(obj);\r\n    }\r\n    ContainerStyleDefinition.prototype.getTextColorDefinitionOrDefault = function (obj, defaultValue) {\r\n        return new TextColorDefinition(obj ? obj : defaultValue);\r\n    };\r\n    ContainerStyleDefinition.prototype.parse = function (obj) {\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n            if (obj.foregroundColors) {\r\n                this.foregroundColors.default = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"default\"], { default: \"#333333\", subtle: \"#EE333333\" });\r\n                this.foregroundColors.dark = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"dark\"], { default: \"#000000\", subtle: \"#66000000\" });\r\n                this.foregroundColors.light = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"light\"], { default: \"#FFFFFF\", subtle: \"#33000000\" });\r\n                this.foregroundColors.accent = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"accent\"], { default: \"#2E89FC\", subtle: \"#882E89FC\" });\r\n                this.foregroundColors.good = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"good\"], { default: \"#54A254\", subtle: \"#DD54A254\" });\r\n                this.foregroundColors.warning = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"warning\"], { default: \"#E69500\", subtle: \"#DDE69500\" });\r\n                this.foregroundColors.attention = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"attention\"], { default: \"#CC3300\", subtle: \"#DDCC3300\" });\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ContainerStyleDefinition.prototype, \"isBuiltIn\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContainerStyleDefinition;\r\n}());\r\nexports.ContainerStyleDefinition = ContainerStyleDefinition;\r\nvar BuiltInContainerStyleDefinition = /** @class */ (function (_super) {\r\n    __extends(BuiltInContainerStyleDefinition, _super);\r\n    function BuiltInContainerStyleDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BuiltInContainerStyleDefinition.prototype, \"isBuiltIn\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return BuiltInContainerStyleDefinition;\r\n}(ContainerStyleDefinition));\r\nvar ContainerStyleSet = /** @class */ (function () {\r\n    function ContainerStyleSet(obj) {\r\n        this._allStyles = {};\r\n        this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\r\n        if (obj) {\r\n            this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\r\n            this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]);\r\n            var customStyleArray = obj[\"customStyles\"];\r\n            if (customStyleArray && Array.isArray(customStyleArray)) {\r\n                for (var _i = 0, customStyleArray_1 = customStyleArray; _i < customStyleArray_1.length; _i++) {\r\n                    var customStyle = customStyleArray_1[_i];\r\n                    if (customStyle) {\r\n                        var styleName = customStyle[\"name\"];\r\n                        if (styleName && typeof styleName === \"string\") {\r\n                            if (this._allStyles.hasOwnProperty(styleName)) {\r\n                                this._allStyles[styleName].parse(customStyle[\"style\"]);\r\n                            }\r\n                            else {\r\n                                this._allStyles[styleName] = new ContainerStyleDefinition(customStyle[\"style\"]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ContainerStyleSet.prototype.toJSON = function () {\r\n        var _this = this;\r\n        var customStyleArray = [];\r\n        Object.keys(this._allStyles).forEach(function (key) {\r\n            if (!_this._allStyles[key].isBuiltIn) {\r\n                customStyleArray.push({\r\n                    name: key,\r\n                    style: _this._allStyles[key]\r\n                });\r\n            }\r\n        });\r\n        var result = {\r\n            default: this.default,\r\n            emphasis: this.emphasis\r\n        };\r\n        if (customStyleArray.length > 0) {\r\n            result.customStyles = customStyleArray;\r\n        }\r\n        return result;\r\n    };\r\n    ContainerStyleSet.prototype.getStyleByName = function (name, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = null; }\r\n        return this._allStyles.hasOwnProperty(name) ? this._allStyles[name] : defaultValue;\r\n    };\r\n    Object.defineProperty(ContainerStyleSet.prototype, \"default\", {\r\n        get: function () {\r\n            return this._allStyles[Enums.ContainerStyle.Default];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContainerStyleSet.prototype, \"emphasis\", {\r\n        get: function () {\r\n            return this._allStyles[Enums.ContainerStyle.Emphasis];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContainerStyleSet;\r\n}());\r\nexports.ContainerStyleSet = ContainerStyleSet;\r\nvar HostConfig = /** @class */ (function () {\r\n    function HostConfig(obj) {\r\n        this.choiceSetInputValueSeparator = \",\";\r\n        this.supportsInteractivity = true;\r\n        this.fontFamily = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n        this.spacing = {\r\n            small: 3,\r\n            default: 8,\r\n            medium: 20,\r\n            large: 30,\r\n            extraLarge: 40,\r\n            padding: 15\r\n        };\r\n        this.separator = {\r\n            lineThickness: 1,\r\n            lineColor: \"#EEEEEE\"\r\n        };\r\n        this.fontSizes = {\r\n            small: 12,\r\n            default: 14,\r\n            medium: 17,\r\n            large: 21,\r\n            extraLarge: 26\r\n        };\r\n        this.fontWeights = {\r\n            lighter: 200,\r\n            default: 400,\r\n            bolder: 600\r\n        };\r\n        this.imageSizes = {\r\n            small: 40,\r\n            medium: 80,\r\n            large: 160\r\n        };\r\n        this.containerStyles = new ContainerStyleSet();\r\n        this.actions = new ActionsConfig();\r\n        this.adaptiveCard = new AdaptiveCardConfig();\r\n        this.imageSet = new ImageSetConfig();\r\n        this.factSet = new FactSetConfig();\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj);\r\n            }\r\n            this.choiceSetInputValueSeparator = (obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\") ? obj[\"choiceSetInputValueSeparator\"] : this.choiceSetInputValueSeparator;\r\n            this.supportsInteractivity = (obj && typeof obj[\"supportsInteractivity\"] === \"boolean\") ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\r\n            this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n            this.fontSizes = {\r\n                small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\r\n                default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\r\n                medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\r\n                large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\r\n                extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\r\n            };\r\n            this.fontWeights = {\r\n                lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\r\n                default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\r\n                bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\r\n            };\r\n            this.imageSizes = {\r\n                small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\r\n                medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\r\n                large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large,\r\n            };\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\r\n                default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\r\n                medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\r\n                large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\r\n                extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\r\n                padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\r\n            };\r\n            this.separator = {\r\n                lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\r\n                lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\r\n            };\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"]);\r\n        }\r\n    }\r\n    HostConfig.prototype.getEffectiveSpacing = function (spacing) {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n    return HostConfig;\r\n}());\r\nexports.HostConfig = HostConfig;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(4);\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(__webpack_require__(5));\r\n__export(__webpack_require__(0));\r\n__export(__webpack_require__(2));\r\nvar utils_1 = __webpack_require__(1);\r\nexports.getEnumValueOrDefault = utils_1.getEnumValueOrDefault;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Enums = __webpack_require__(0);\r\nvar Utils = __webpack_require__(1);\r\nvar HostConfig = __webpack_require__(2);\r\nvar TextFormatters = __webpack_require__(6);\r\nfunction invokeSetCollection(action, collection) {\r\n    if (action) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        action[\"setCollection\"](collection);\r\n    }\r\n}\r\nfunction isActionAllowed(action, forbiddenActionTypes) {\r\n    if (forbiddenActionTypes) {\r\n        for (var i = 0; i < forbiddenActionTypes.length; i++) {\r\n            if (action.getJsonTypeName() === forbiddenActionTypes[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction createActionInstance(json) {\r\n    var actionType = json[\"type\"];\r\n    var result = AdaptiveCard.actionTypeRegistry.createInstance(actionType);\r\n    if (result) {\r\n        result.parse(json);\r\n    }\r\n    else {\r\n        raiseParseError({\r\n            error: Enums.ValidationError.UnknownActionType,\r\n            message: \"Unknown action type: \" + actionType\r\n        });\r\n    }\r\n    return result;\r\n}\r\nexports.createActionInstance = createActionInstance;\r\nvar SpacingDefinition = /** @class */ (function () {\r\n    function SpacingDefinition(top, right, bottom, left) {\r\n        if (top === void 0) { top = 0; }\r\n        if (right === void 0) { right = 0; }\r\n        if (bottom === void 0) { bottom = 0; }\r\n        if (left === void 0) { left = 0; }\r\n        this.left = 0;\r\n        this.top = 0;\r\n        this.right = 0;\r\n        this.bottom = 0;\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n    }\r\n    return SpacingDefinition;\r\n}());\r\nexports.SpacingDefinition = SpacingDefinition;\r\nvar PaddingDefinition = /** @class */ (function () {\r\n    function PaddingDefinition(top, right, bottom, left) {\r\n        if (top === void 0) { top = Enums.Spacing.None; }\r\n        if (right === void 0) { right = Enums.Spacing.None; }\r\n        if (bottom === void 0) { bottom = Enums.Spacing.None; }\r\n        if (left === void 0) { left = Enums.Spacing.None; }\r\n        this.top = Enums.Spacing.None;\r\n        this.right = Enums.Spacing.None;\r\n        this.bottom = Enums.Spacing.None;\r\n        this.left = Enums.Spacing.None;\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n    }\r\n    PaddingDefinition.prototype.toSpacingDefinition = function (hostConfig) {\r\n        return new SpacingDefinition(hostConfig.getEffectiveSpacing(this.top), hostConfig.getEffectiveSpacing(this.right), hostConfig.getEffectiveSpacing(this.bottom), hostConfig.getEffectiveSpacing(this.left));\r\n    };\r\n    return PaddingDefinition;\r\n}());\r\nexports.PaddingDefinition = PaddingDefinition;\r\nvar CardElement = /** @class */ (function () {\r\n    function CardElement() {\r\n        this._lang = undefined;\r\n        this._hostConfig = null;\r\n        this._internalPadding = null;\r\n        this._parent = null;\r\n        this._renderedElement = null;\r\n        this._separatorElement = null;\r\n        this._isVisible = true;\r\n        this._truncatedDueToOverflow = false;\r\n        this._defaultRenderedElementDisplayMode = null;\r\n        this._padding = null;\r\n        this.horizontalAlignment = null;\r\n        this.spacing = Enums.Spacing.Default;\r\n        this.separator = false;\r\n        this.height = \"auto\";\r\n    }\r\n    CardElement.prototype.internalRenderSeparator = function () {\r\n        return Utils.renderSeparation({\r\n            spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\r\n            lineThickness: this.separator ? this.hostConfig.separator.lineThickness : null,\r\n            lineColor: this.separator ? this.hostConfig.separator.lineColor : null\r\n        }, this.separatorOrientation);\r\n    };\r\n    CardElement.prototype.updateRenderedElementVisibility = function () {\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.display = this._isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n        }\r\n        if (this._separatorElement) {\r\n            this._separatorElement.style.display = this._isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n        }\r\n    };\r\n    CardElement.prototype.hideElementDueToOverflow = function () {\r\n        if (this._renderedElement && this._isVisible) {\r\n            this._renderedElement.style.visibility = 'hidden';\r\n            this._isVisible = false;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    };\r\n    CardElement.prototype.showElementHiddenDueToOverflow = function () {\r\n        if (this._renderedElement && !this._isVisible) {\r\n            this._renderedElement.style.visibility = null;\r\n            this._isVisible = true;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    };\r\n    // Marked private to emulate internal access\r\n    CardElement.prototype.handleOverflow = function (maxHeight) {\r\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\r\n            var handled = this.truncateOverflow(maxHeight);\r\n            // Even if we were unable to truncate the element to fit this time,\r\n            // it still could have been previously truncated\r\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\r\n            if (!handled) {\r\n                this.hideElementDueToOverflow();\r\n            }\r\n            else if (handled && !this._isVisible) {\r\n                this.showElementHiddenDueToOverflow();\r\n            }\r\n        }\r\n    };\r\n    // Marked private to emulate internal access\r\n    CardElement.prototype.resetOverflow = function () {\r\n        var sizeChanged = false;\r\n        if (this._truncatedDueToOverflow) {\r\n            this.undoOverflowTruncation();\r\n            this._truncatedDueToOverflow = false;\r\n            sizeChanged = true;\r\n        }\r\n        if (this.isHiddenDueToOverflow) {\r\n            this.showElementHiddenDueToOverflow();\r\n        }\r\n        return sizeChanged;\r\n    };\r\n    CardElement.prototype.internalGetNonZeroPadding = function (padding, processTop, processRight, processBottom, processLeft) {\r\n        if (processTop === void 0) { processTop = true; }\r\n        if (processRight === void 0) { processRight = true; }\r\n        if (processBottom === void 0) { processBottom = true; }\r\n        if (processLeft === void 0) { processLeft = true; }\r\n        if (processTop) {\r\n            if (padding.top == Enums.Spacing.None) {\r\n                padding.top = this.internalPadding.top;\r\n            }\r\n        }\r\n        if (processRight) {\r\n            if (padding.right == Enums.Spacing.None) {\r\n                padding.right = this.internalPadding.right;\r\n            }\r\n        }\r\n        if (processBottom) {\r\n            if (padding.bottom == Enums.Spacing.None) {\r\n                padding.bottom = this.internalPadding.bottom;\r\n            }\r\n        }\r\n        if (processLeft) {\r\n            if (padding.left == Enums.Spacing.None) {\r\n                padding.left = this.internalPadding.left;\r\n            }\r\n        }\r\n        if (this.parent) {\r\n            this.parent.internalGetNonZeroPadding(padding, processTop && this.isAtTheVeryTop(), processRight && this.isAtTheVeryRight(), processBottom && this.isAtTheVeryBottom(), processLeft && this.isAtTheVeryLeft());\r\n        }\r\n    };\r\n    CardElement.prototype.adjustRenderedElementSize = function (renderedElement) {\r\n        if (this.height === \"auto\") {\r\n            renderedElement.style.flex = \"0 0 auto\";\r\n        }\r\n        else {\r\n            renderedElement.style.flex = \"1 1 100%\";\r\n        }\r\n    };\r\n    CardElement.prototype.showBottomSpacer = function (requestingElement) {\r\n        if (this.parent) {\r\n            this.parent.showBottomSpacer(requestingElement);\r\n        }\r\n    };\r\n    CardElement.prototype.hideBottomSpacer = function (requestingElement) {\r\n        if (this.parent) {\r\n            this.parent.hideBottomSpacer(requestingElement);\r\n        }\r\n    };\r\n    /*\r\n     * Called when this element overflows the bottom of the card.\r\n     * maxHeight will be the amount of space still available on the card (0 if\r\n     * the element is fully off the card).\r\n     */\r\n    CardElement.prototype.truncateOverflow = function (maxHeight) {\r\n        // Child implementations should return true if the element handled\r\n        // the truncation request such that its content fits within maxHeight,\r\n        // false if the element should fall back to being hidden\r\n        return false;\r\n    };\r\n    /*\r\n     * This should reverse any changes performed in truncateOverflow().\r\n     */\r\n    CardElement.prototype.undoOverflowTruncation = function () { };\r\n    Object.defineProperty(CardElement.prototype, \"useDefaultSizing\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"allowCustomPadding\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"defaultPadding\", {\r\n        get: function () {\r\n            return new PaddingDefinition();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"internalPadding\", {\r\n        get: function () {\r\n            if (this._padding) {\r\n                return this._padding;\r\n            }\r\n            else {\r\n                return (this._internalPadding && this.allowCustomPadding) ? this._internalPadding : this.defaultPadding;\r\n            }\r\n        },\r\n        set: function (value) {\r\n            this._internalPadding = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"separatorOrientation\", {\r\n        get: function () {\r\n            return Enums.Orientation.Horizontal;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CardElement.prototype.getPadding = function () {\r\n        return this._padding;\r\n    };\r\n    CardElement.prototype.setPadding = function (value) {\r\n        this._padding = value;\r\n        if (this._padding) {\r\n            AdaptiveCard.useAutomaticContainerBleeding = false;\r\n        }\r\n    };\r\n    CardElement.prototype.setParent = function (value) {\r\n        this._parent = value;\r\n    };\r\n    CardElement.prototype.getNonZeroPadding = function () {\r\n        var padding = new PaddingDefinition();\r\n        this.internalGetNonZeroPadding(padding);\r\n        return padding;\r\n    };\r\n    CardElement.prototype.getForbiddenElementTypes = function () {\r\n        return null;\r\n    };\r\n    CardElement.prototype.getForbiddenActionTypes = function () {\r\n        return null;\r\n    };\r\n    CardElement.prototype.parse = function (json) {\r\n        raiseParseElementEvent(this, json);\r\n        this.id = json[\"id\"];\r\n        this.speak = json[\"speak\"];\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], null);\r\n        this.spacing = Utils.getEnumValueOrDefault(Enums.Spacing, json[\"spacing\"], Enums.Spacing.Default);\r\n        this.separator = json[\"separator\"];\r\n        var jsonSeparation = json[\"separation\"];\r\n        if (jsonSeparation !== undefined) {\r\n            if (jsonSeparation === \"none\") {\r\n                this.spacing = Enums.Spacing.None;\r\n                this.separator = false;\r\n            }\r\n            else if (jsonSeparation === \"strong\") {\r\n                this.spacing = Enums.Spacing.Large;\r\n                this.separator = true;\r\n            }\r\n            else if (jsonSeparation === \"default\") {\r\n                this.spacing = Enums.Spacing.Default;\r\n                this.separator = false;\r\n            }\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The \\\"separation\\\" property is deprecated and will be removed. Use the \\\"spacing\\\" and \\\"separator\\\" properties instead.\"\r\n            });\r\n        }\r\n        var jsonHeight = json[\"height\"];\r\n        if (jsonHeight === \"auto\" || jsonHeight === \"stretch\") {\r\n            this.height = jsonHeight;\r\n        }\r\n    };\r\n    CardElement.prototype.validate = function () {\r\n        return [];\r\n    };\r\n    CardElement.prototype.render = function () {\r\n        this._renderedElement = this.internalRender();\r\n        this._separatorElement = this.internalRenderSeparator();\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.boxSizing = \"border-box\";\r\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display;\r\n            this.adjustRenderedElementSize(this._renderedElement);\r\n            this.updateLayout(false);\r\n            this.updateRenderedElementVisibility();\r\n        }\r\n        return this._renderedElement;\r\n    };\r\n    CardElement.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        // Does nothing in base implementation\r\n    };\r\n    CardElement.prototype.isRendered = function () {\r\n        return this._renderedElement && this._renderedElement.offsetHeight > 0;\r\n    };\r\n    CardElement.prototype.isAtTheVeryTop = function () {\r\n        return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\r\n    };\r\n    CardElement.prototype.isFirstElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isAtTheVeryBottom = function () {\r\n        return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\r\n    };\r\n    CardElement.prototype.isLastElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isAtTheVeryLeft = function () {\r\n        return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\r\n    };\r\n    CardElement.prototype.isLeftMostElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isAtTheVeryRight = function () {\r\n        return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\r\n    };\r\n    CardElement.prototype.isRightMostElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isHiddenDueToOverflow = function () {\r\n        return this._renderedElement && this._renderedElement.style.visibility == 'hidden';\r\n    };\r\n    CardElement.prototype.canContentBleed = function () {\r\n        return this.parent ? this.parent.canContentBleed() : true;\r\n    };\r\n    CardElement.prototype.getRootElement = function () {\r\n        var rootElement = this;\r\n        while (rootElement.parent) {\r\n            rootElement = rootElement.parent;\r\n        }\r\n        return rootElement;\r\n    };\r\n    CardElement.prototype.getParentContainer = function () {\r\n        var currentElement = this.parent;\r\n        while (currentElement) {\r\n            if (currentElement instanceof Container) {\r\n                return currentElement;\r\n            }\r\n            currentElement = currentElement.parent;\r\n        }\r\n        return null;\r\n    };\r\n    CardElement.prototype.getAllInputs = function () {\r\n        return [];\r\n    };\r\n    CardElement.prototype.getElementById = function (id) {\r\n        return this.id === id ? this : null;\r\n    };\r\n    CardElement.prototype.getActionById = function (id) {\r\n        return null;\r\n    };\r\n    Object.defineProperty(CardElement.prototype, \"lang\", {\r\n        get: function () {\r\n            if (this._lang) {\r\n                return this._lang;\r\n            }\r\n            else {\r\n                if (this.parent) {\r\n                    return this.parent.lang;\r\n                }\r\n                else {\r\n                    return undefined;\r\n                }\r\n            }\r\n        },\r\n        set: function (value) {\r\n            if (value && value != \"\") {\r\n                var regEx = /^[a-z]{2,3}$/ig;\r\n                var matches = regEx.exec(value);\r\n                if (!matches) {\r\n                    throw new Error(\"Invalid language identifier: \" + value);\r\n                }\r\n            }\r\n            this._lang = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"hostConfig\", {\r\n        get: function () {\r\n            if (this._hostConfig) {\r\n                return this._hostConfig;\r\n            }\r\n            else {\r\n                if (this.parent) {\r\n                    return this.parent.hostConfig;\r\n                }\r\n                else {\r\n                    return defaultHostConfig;\r\n                }\r\n            }\r\n        },\r\n        set: function (value) {\r\n            this._hostConfig = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"isInteractive\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"isStandalone\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"parent\", {\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"isVisible\", {\r\n        get: function () {\r\n            return this._isVisible;\r\n        },\r\n        set: function (value) {\r\n            // If the element is going to be hidden, reset any changes that were due\r\n            // to overflow truncation (this ensures that if the element is later\r\n            // un-hidden it has the right content)\r\n            if (AdaptiveCard.useAdvancedCardBottomTruncation && !value) {\r\n                this.undoOverflowTruncation();\r\n            }\r\n            if (this._isVisible != value) {\r\n                this._isVisible = value;\r\n                this.updateRenderedElementVisibility();\r\n                if (this._renderedElement) {\r\n                    raiseElementVisibilityChangedEvent(this);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"renderedElement\", {\r\n        get: function () {\r\n            return this._renderedElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"separatorElement\", {\r\n        get: function () {\r\n            return this._separatorElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CardElement;\r\n}());\r\nexports.CardElement = CardElement;\r\nvar TextBlock = /** @class */ (function (_super) {\r\n    __extends(TextBlock, _super);\r\n    function TextBlock() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.size = Enums.TextSize.Default;\r\n        _this.weight = Enums.TextWeight.Default;\r\n        _this.color = Enums.TextColor.Default;\r\n        _this.isSubtle = false;\r\n        _this.wrap = false;\r\n        _this.useMarkdown = true;\r\n        return _this;\r\n    }\r\n    TextBlock.prototype.internalRender = function () {\r\n        var _this = this;\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            var element = document.createElement(\"div\");\r\n            element.style.overflow = \"hidden\";\r\n            if (this.hostConfig.fontFamily) {\r\n                element.style.fontFamily = this.hostConfig.fontFamily;\r\n            }\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.textAlign = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.textAlign = \"right\";\r\n                    break;\r\n                default:\r\n                    element.style.textAlign = \"left\";\r\n                    break;\r\n            }\r\n            var cssStyle = \"text \";\r\n            var fontSize;\r\n            switch (this.size) {\r\n                case Enums.TextSize.Small:\r\n                    fontSize = this.hostConfig.fontSizes.small;\r\n                    break;\r\n                case Enums.TextSize.Medium:\r\n                    fontSize = this.hostConfig.fontSizes.medium;\r\n                    break;\r\n                case Enums.TextSize.Large:\r\n                    fontSize = this.hostConfig.fontSizes.large;\r\n                    break;\r\n                case Enums.TextSize.ExtraLarge:\r\n                    fontSize = this.hostConfig.fontSizes.extraLarge;\r\n                    break;\r\n                default:\r\n                    fontSize = this.hostConfig.fontSizes.default;\r\n                    break;\r\n            }\r\n            // Looks like 1.33 is the magic number to compute line-height\r\n            // from font size.\r\n            this._computedLineHeight = fontSize * 1.33;\r\n            element.style.fontSize = fontSize + \"px\";\r\n            element.style.lineHeight = this._computedLineHeight + \"px\";\r\n            var parentContainer = this.getParentContainer();\r\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(parentContainer ? parentContainer.style : Enums.ContainerStyle.Default, this.hostConfig.containerStyles.default);\r\n            var actualTextColor = this.color ? this.color : Enums.TextColor.Default;\r\n            var colorDefinition;\r\n            switch (actualTextColor) {\r\n                case Enums.TextColor.Accent:\r\n                    colorDefinition = styleDefinition.foregroundColors.accent;\r\n                    break;\r\n                case Enums.TextColor.Dark:\r\n                    colorDefinition = styleDefinition.foregroundColors.dark;\r\n                    break;\r\n                case Enums.TextColor.Light:\r\n                    colorDefinition = styleDefinition.foregroundColors.light;\r\n                    break;\r\n                case Enums.TextColor.Good:\r\n                    colorDefinition = styleDefinition.foregroundColors.good;\r\n                    break;\r\n                case Enums.TextColor.Warning:\r\n                    colorDefinition = styleDefinition.foregroundColors.warning;\r\n                    break;\r\n                case Enums.TextColor.Attention:\r\n                    colorDefinition = styleDefinition.foregroundColors.attention;\r\n                    break;\r\n                default:\r\n                    colorDefinition = styleDefinition.foregroundColors.default;\r\n                    break;\r\n            }\r\n            element.style.color = Utils.stringToCssColor(this.isSubtle ? colorDefinition.subtle : colorDefinition.default);\r\n            var fontWeight;\r\n            switch (this.weight) {\r\n                case Enums.TextWeight.Lighter:\r\n                    fontWeight = this.hostConfig.fontWeights.lighter;\r\n                    break;\r\n                case Enums.TextWeight.Bolder:\r\n                    fontWeight = this.hostConfig.fontWeights.bolder;\r\n                    break;\r\n                default:\r\n                    fontWeight = this.hostConfig.fontWeights.default;\r\n                    break;\r\n            }\r\n            element.style.fontWeight = fontWeight.toString();\r\n            var formattedText = TextFormatters.formatText(this.lang, this.text);\r\n            element.innerHTML = this.useMarkdown ? AdaptiveCard.processMarkdown(formattedText) : formattedText;\r\n            if (element.firstElementChild instanceof HTMLElement) {\r\n                var firstElementChild = element.firstElementChild;\r\n                firstElementChild.style.marginTop = \"0px\";\r\n                firstElementChild.style.width = \"100%\";\r\n                if (!this.wrap) {\r\n                    firstElementChild.style.overflow = \"hidden\";\r\n                    firstElementChild.style.textOverflow = \"ellipsis\";\r\n                }\r\n            }\r\n            if (element.lastElementChild instanceof HTMLElement) {\r\n                element.lastElementChild.style.marginBottom = \"0px\";\r\n            }\r\n            var anchors = element.getElementsByTagName(\"a\");\r\n            for (var i = 0; i < anchors.length; i++) {\r\n                var anchor = anchors[i];\r\n                anchor.classList.add(\"ac-anchor\");\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = function (e) {\r\n                    if (raiseAnchorClickedEvent(_this, e.target)) {\r\n                        e.preventDefault();\r\n                    }\r\n                };\r\n            }\r\n            if (this.wrap) {\r\n                element.style.wordWrap = \"break-word\";\r\n                if (this.maxLines > 0) {\r\n                    element.style.maxHeight = (this._computedLineHeight * this.maxLines) + \"px\";\r\n                    element.style.overflow = \"hidden\";\r\n                }\r\n            }\r\n            else {\r\n                element.style.whiteSpace = \"nowrap\";\r\n                element.style.textOverflow = \"ellipsis\";\r\n            }\r\n            if (AdaptiveCard.useAdvancedTextBlockTruncation\r\n                || AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                this._originalInnerHtml = element.innerHTML;\r\n            }\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    TextBlock.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.text = json[\"text\"];\r\n        var sizeString = json[\"size\"];\r\n        if (sizeString && typeof sizeString === \"string\" && sizeString.toLowerCase() === \"normal\") {\r\n            this.size = Enums.TextSize.Default;\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The TextBlock.size value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n            });\r\n        }\r\n        else {\r\n            this.size = Utils.getEnumValueOrDefault(Enums.TextSize, sizeString, this.size);\r\n        }\r\n        var weightString = json[\"weight\"];\r\n        if (weightString && typeof weightString === \"string\" && weightString.toLowerCase() === \"normal\") {\r\n            this.weight = Enums.TextWeight.Default;\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The TextBlock.weight value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n            });\r\n        }\r\n        else {\r\n            this.weight = Utils.getEnumValueOrDefault(Enums.TextWeight, weightString, this.weight);\r\n        }\r\n        this.color = Utils.getEnumValueOrDefault(Enums.TextColor, json[\"color\"], this.color);\r\n        this.isSubtle = json[\"isSubtle\"];\r\n        this.wrap = json[\"wrap\"] === undefined ? false : json[\"wrap\"];\r\n        this.maxLines = json[\"maxLines\"];\r\n    };\r\n    TextBlock.prototype.getJsonTypeName = function () {\r\n        return \"TextBlock\";\r\n    };\r\n    TextBlock.prototype.renderSpeech = function () {\r\n        if (this.speak != null)\r\n            return this.speak + '\\n';\r\n        if (this.text)\r\n            return '<s>' + this.text + '</s>\\n';\r\n        return null;\r\n    };\r\n    TextBlock.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = false; }\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines && this.isRendered()) {\r\n            // Reset the element's innerHTML in case the available room for\r\n            // content has increased\r\n            this.restoreOriginalContent();\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    };\r\n    TextBlock.prototype.truncateOverflow = function (maxHeight) {\r\n        if (maxHeight >= this._computedLineHeight) {\r\n            return this.truncateIfSupported(maxHeight);\r\n        }\r\n        return false;\r\n    };\r\n    TextBlock.prototype.undoOverflowTruncation = function () {\r\n        this.restoreOriginalContent();\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines) {\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    };\r\n    TextBlock.prototype.restoreOriginalContent = function () {\r\n        var maxHeight = this.maxLines\r\n            ? (this._computedLineHeight * this.maxLines) + 'px'\r\n            : null;\r\n        this.renderedElement.style.maxHeight = maxHeight;\r\n        this.renderedElement.innerHTML = this._originalInnerHtml;\r\n    };\r\n    TextBlock.prototype.truncateIfSupported = function (maxHeight) {\r\n        // For now, only truncate TextBlocks that contain just a single\r\n        // paragraph -- since the maxLines calculation doesn't take into\r\n        // account Markdown lists\r\n        var children = this.renderedElement.children;\r\n        var isTextOnly = !children.length;\r\n        var truncationSupported = isTextOnly || children.length == 1\r\n            && children[0].tagName.toLowerCase() == 'p';\r\n        if (truncationSupported) {\r\n            var element = isTextOnly\r\n                ? this.renderedElement\r\n                : children[0];\r\n            Utils.truncate(element, maxHeight, this._computedLineHeight);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return TextBlock;\r\n}(CardElement));\r\nexports.TextBlock = TextBlock;\r\nvar Fact = /** @class */ (function () {\r\n    function Fact() {\r\n    }\r\n    Fact.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n        return '<s>' + this.name + ' ' + this.value + '</s>\\n';\r\n    };\r\n    return Fact;\r\n}());\r\nexports.Fact = Fact;\r\nvar FactSet = /** @class */ (function (_super) {\r\n    __extends(FactSet, _super);\r\n    function FactSet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.facts = [];\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FactSet.prototype, \"useDefaultSizing\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FactSet.prototype.internalRender = function () {\r\n        var element = null;\r\n        if (this.facts.length > 0) {\r\n            element = document.createElement(\"table\");\r\n            element.style.borderWidth = \"0px\";\r\n            element.style.borderSpacing = \"0px\";\r\n            element.style.borderStyle = \"none\";\r\n            element.style.borderCollapse = \"collapse\";\r\n            element.style.display = \"block\";\r\n            element.style.overflow = \"hidden\";\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                var trElement = document.createElement(\"tr\");\r\n                if (i > 0) {\r\n                    trElement.style.marginTop = this.hostConfig.factSet.spacing + \"px\";\r\n                }\r\n                var tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                if (this.hostConfig.factSet.title.maxWidth) {\r\n                    tdElement.style.maxWidth = this.hostConfig.factSet.title.maxWidth + \"px\";\r\n                }\r\n                tdElement.style.verticalAlign = \"top\";\r\n                var textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = this.facts[i].name;\r\n                textBlock.size = this.hostConfig.factSet.title.size;\r\n                textBlock.color = this.hostConfig.factSet.title.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.title.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.title.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.title.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0px 0px 0px 10px\";\r\n                tdElement.style.verticalAlign = \"top\";\r\n                textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = this.facts[i].value;\r\n                textBlock.size = this.hostConfig.factSet.value.size;\r\n                textBlock.color = this.hostConfig.factSet.value.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.value.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.value.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.value.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                Utils.appendChild(element, trElement);\r\n            }\r\n        }\r\n        return element;\r\n    };\r\n    FactSet.prototype.getJsonTypeName = function () {\r\n        return \"FactSet\";\r\n    };\r\n    FactSet.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        if (json[\"facts\"] != null) {\r\n            var jsonFacts = json[\"facts\"];\r\n            this.facts = [];\r\n            for (var i = 0; i < jsonFacts.length; i++) {\r\n                var fact = new Fact();\r\n                fact.name = jsonFacts[i][\"title\"];\r\n                fact.value = jsonFacts[i][\"value\"];\r\n                fact.speak = jsonFacts[i][\"speak\"];\r\n                this.facts.push(fact);\r\n            }\r\n        }\r\n    };\r\n    FactSet.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n        // render each fact\r\n        var speak = null;\r\n        if (this.facts.length > 0) {\r\n            speak = '';\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                var speech = this.facts[i].renderSpeech();\r\n                if (speech) {\r\n                    speak += speech;\r\n                }\r\n            }\r\n        }\r\n        return '<p>' + speak + '\\n</p>\\n';\r\n    };\r\n    return FactSet;\r\n}(CardElement));\r\nexports.FactSet = FactSet;\r\nvar Image = /** @class */ (function (_super) {\r\n    __extends(Image, _super);\r\n    function Image() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.style = Enums.ImageStyle.Default;\r\n        _this.size = Enums.Size.Auto;\r\n        _this.pixelWidth = null;\r\n        _this.pixelHeight = null;\r\n        _this.altText = \"\";\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Image.prototype, \"useDefaultSizing\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Image.prototype.internalRender = function () {\r\n        var _this = this;\r\n        var element = null;\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            element = document.createElement(\"div\");\r\n            element.classList.add(\"ac-image\");\r\n            element.style.display = \"flex\";\r\n            element.style.alignItems = \"flex-start\";\r\n            if (this.selectAction != null && this.hostConfig.supportsInteractivity) {\r\n                element.tabIndex = 0;\r\n                element.setAttribute(\"role\", \"button\");\r\n                element.setAttribute(\"aria-label\", this.selectAction.title);\r\n                element.classList.add(\"ac-selectable\");\r\n            }\r\n            element.onkeypress = function (e) {\r\n                if (_this.selectAction) {\r\n                    if (e.keyCode == 13 || e.keyCode == 32) {\r\n                        _this.selectAction.execute();\r\n                    }\r\n                }\r\n            };\r\n            element.onclick = function (e) {\r\n                if (_this.selectAction) {\r\n                    _this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            };\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n            var imageElement = document.createElement(\"img\");\r\n            imageElement.style.maxHeight = \"100%\";\r\n            imageElement.style.minWidth = \"0\";\r\n            if (this.pixelWidth || this.pixelHeight) {\r\n                if (this.pixelWidth) {\r\n                    imageElement.style.width = this.pixelWidth + \"px\";\r\n                }\r\n                if (this.pixelHeight) {\r\n                    imageElement.style.height = this.pixelHeight + \"px\";\r\n                }\r\n            }\r\n            else {\r\n                switch (this.size) {\r\n                    case Enums.Size.Stretch:\r\n                        imageElement.style.width = \"100%\";\r\n                        break;\r\n                    case Enums.Size.Auto:\r\n                        imageElement.style.maxWidth = \"100%\";\r\n                        break;\r\n                    case Enums.Size.Small:\r\n                        imageElement.style.width = this.hostConfig.imageSizes.small + \"px\";\r\n                        break;\r\n                    case Enums.Size.Large:\r\n                        imageElement.style.width = this.hostConfig.imageSizes.large + \"px\";\r\n                        break;\r\n                    case Enums.Size.Medium:\r\n                        imageElement.style.width = this.hostConfig.imageSizes.medium + \"px\";\r\n                        break;\r\n                }\r\n            }\r\n            if (this.style === Enums.ImageStyle.Person) {\r\n                imageElement.style.borderRadius = \"50%\";\r\n                imageElement.style.backgroundPosition = \"50% 50%\";\r\n                imageElement.style.backgroundRepeat = \"no-repeat\";\r\n            }\r\n            if (!Utils.isNullOrEmpty(this.backgroundColor)) {\r\n                imageElement.style.backgroundColor = Utils.stringToCssColor(this.backgroundColor);\r\n            }\r\n            imageElement.src = this.url;\r\n            imageElement.alt = this.altText;\r\n            element.appendChild(imageElement);\r\n        }\r\n        return element;\r\n    };\r\n    Image.prototype.getJsonTypeName = function () {\r\n        return \"Image\";\r\n    };\r\n    Image.prototype.getActionById = function (id) {\r\n        var result = _super.prototype.getActionById.call(this, id);\r\n        if (!result && this.selectAction) {\r\n            result = this.selectAction.getActionById(id);\r\n        }\r\n        return result;\r\n    };\r\n    Image.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.url = json[\"url\"];\r\n        var styleString = json[\"style\"];\r\n        if (styleString && typeof styleString === \"string\" && styleString.toLowerCase() === \"normal\") {\r\n            this.style = Enums.ImageStyle.Default;\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The Image.style value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n            });\r\n        }\r\n        else {\r\n            this.style = Utils.getEnumValueOrDefault(Enums.ImageStyle, styleString, this.style);\r\n        }\r\n        this.size = Utils.getEnumValueOrDefault(Enums.Size, json[\"size\"], this.size);\r\n        this.altText = json[\"altText\"];\r\n        var selectActionJson = json[\"selectAction\"];\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson);\r\n        }\r\n        if (json[\"pixelWidth\"] && typeof json[\"pixelWidth\"] === \"number\") {\r\n            this.pixelWidth = json[\"pixelWidth\"];\r\n        }\r\n        if (json[\"pixelHeight\"] && typeof json[\"pixelHeight\"] === \"number\") {\r\n            this.pixelHeight = json[\"pixelHeight\"];\r\n        }\r\n    };\r\n    Image.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n        return null;\r\n    };\r\n    Object.defineProperty(Image.prototype, \"selectAction\", {\r\n        get: function () {\r\n            return this._selectAction;\r\n        },\r\n        set: function (value) {\r\n            this._selectAction = value;\r\n            if (this._selectAction) {\r\n                this._selectAction.setParent(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Image;\r\n}(CardElement));\r\nexports.Image = Image;\r\nvar ImageSet = /** @class */ (function (_super) {\r\n    __extends(ImageSet, _super);\r\n    function ImageSet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._images = [];\r\n        _this.imageSize = Enums.Size.Medium;\r\n        return _this;\r\n    }\r\n    ImageSet.prototype.internalRender = function () {\r\n        var element = null;\r\n        if (this._images.length > 0) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.flexWrap = \"wrap\";\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                var renderedImage = this._images[i].render();\r\n                renderedImage.style.display = \"inline-flex\";\r\n                renderedImage.style.margin = \"0px\";\r\n                renderedImage.style.marginRight = \"10px\";\r\n                renderedImage.style.maxHeight = this.hostConfig.imageSet.maxImageHeight + \"px\";\r\n                Utils.appendChild(element, renderedImage);\r\n            }\r\n        }\r\n        return element;\r\n    };\r\n    ImageSet.prototype.getJsonTypeName = function () {\r\n        return \"ImageSet\";\r\n    };\r\n    ImageSet.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        //this.imageSize = Utils.getValueOrDefault<Enums.Size>(json[\"imageSize\"], Enums.Size.medium);\r\n        this.imageSize = Utils.getEnumValueOrDefault(Enums.Size, json[\"imageSize\"], Enums.Size.Medium);\r\n        if (json[\"images\"] != null) {\r\n            var jsonImages = json[\"images\"];\r\n            this._images = [];\r\n            for (var i = 0; i < jsonImages.length; i++) {\r\n                var image = new Image();\r\n                image.parse(jsonImages[i]);\r\n                image.size = this.imageSize;\r\n                this.addImage(image);\r\n            }\r\n        }\r\n    };\r\n    ImageSet.prototype.addImage = function (image) {\r\n        if (!image.parent) {\r\n            this._images.push(image);\r\n            image.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This image already belongs to another ImageSet\");\r\n        }\r\n    };\r\n    ImageSet.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        var speak = null;\r\n        if (this._images.length > 0) {\r\n            speak = '';\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                speak += this._images[i].renderSpeech();\r\n            }\r\n        }\r\n        return speak;\r\n    };\r\n    return ImageSet;\r\n}(CardElement));\r\nexports.ImageSet = ImageSet;\r\nvar Input = /** @class */ (function (_super) {\r\n    __extends(Input, _super);\r\n    function Input() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Input.prototype.validate = function () {\r\n        if (!this.id) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All inputs must have a unique Id\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    Input.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.id = json[\"id\"];\r\n        this.defaultValue = json[\"value\"];\r\n    };\r\n    Input.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        if (this.title) {\r\n            return '<s>' + this.title + '</s>\\n';\r\n        }\r\n        return null;\r\n    };\r\n    Input.prototype.getAllInputs = function () {\r\n        return [this];\r\n    };\r\n    Object.defineProperty(Input.prototype, \"isInteractive\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Input;\r\n}(CardElement));\r\nexports.Input = Input;\r\nvar TextInput = /** @class */ (function (_super) {\r\n    __extends(TextInput, _super);\r\n    function TextInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextInput.prototype.internalRender = function () {\r\n        if (this.isMultiline) {\r\n            this._textareaElement = document.createElement(\"textarea\");\r\n            this._textareaElement.className = \"ac-input ac-textInput ac-multiline\";\r\n            this._textareaElement.style.width = \"100%\";\r\n            this._textareaElement.tabIndex = 0;\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._textareaElement.placeholder = this.placeholder;\r\n                this._textareaElement.setAttribute(\"aria-label\", this.placeholder);\r\n            }\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._textareaElement.value = this.defaultValue;\r\n            }\r\n            if (this.maxLength > 0) {\r\n                this._textareaElement.maxLength = this.maxLength;\r\n            }\r\n            return this._textareaElement;\r\n        }\r\n        else {\r\n            this._inputElement = document.createElement(\"input\");\r\n            this._inputElement.type = \"text\";\r\n            this._inputElement.className = \"ac-input ac-textInput\";\r\n            this._inputElement.style.width = \"100%\";\r\n            this._inputElement.tabIndex = 0;\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._inputElement.placeholder = this.placeholder;\r\n                this._inputElement.setAttribute(\"aria-label\", this.placeholder);\r\n            }\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._inputElement.value = this.defaultValue;\r\n            }\r\n            if (this.maxLength > 0) {\r\n                this._inputElement.maxLength = this.maxLength;\r\n            }\r\n            return this._inputElement;\r\n        }\r\n    };\r\n    TextInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Text\";\r\n    };\r\n    TextInput.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.maxLength = json[\"maxLength\"];\r\n        this.isMultiline = json[\"isMultiline\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n    };\r\n    Object.defineProperty(TextInput.prototype, \"value\", {\r\n        get: function () {\r\n            if (this.isMultiline) {\r\n                return this._textareaElement ? this._textareaElement.value : null;\r\n            }\r\n            else {\r\n                return this._inputElement ? this._inputElement.value : null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return TextInput;\r\n}(Input));\r\nexports.TextInput = TextInput;\r\nvar ToggleInput = /** @class */ (function (_super) {\r\n    __extends(ToggleInput, _super);\r\n    function ToggleInput() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.valueOn = \"true\";\r\n        _this.valueOff = \"false\";\r\n        return _this;\r\n    }\r\n    ToggleInput.prototype.internalRender = function () {\r\n        var element = document.createElement(\"div\");\r\n        element.className = \"ac-input\";\r\n        element.style.width = \"100%\";\r\n        element.style.display = \"flex\";\r\n        this._checkboxInputElement = document.createElement(\"input\");\r\n        this._checkboxInputElement.type = \"checkbox\";\r\n        this._checkboxInputElement.style.display = \"inline-block\";\r\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\r\n        this._checkboxInputElement.style.margin = \"0\";\r\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\r\n        this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\r\n        this._checkboxInputElement.tabIndex = 0;\r\n        if (this.defaultValue == this.valueOn) {\r\n            this._checkboxInputElement.checked = true;\r\n        }\r\n        var label = new TextBlock();\r\n        label.hostConfig = this.hostConfig;\r\n        label.text = this.title;\r\n        label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n        var labelElement = label.render();\r\n        labelElement.style.display = \"inline-block\";\r\n        labelElement.style.marginLeft = \"6px\";\r\n        labelElement.style.verticalAlign = \"middle\";\r\n        var compoundInput = document.createElement(\"div\");\r\n        Utils.appendChild(element, this._checkboxInputElement);\r\n        Utils.appendChild(element, labelElement);\r\n        return element;\r\n    };\r\n    ToggleInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Toggle\";\r\n    };\r\n    ToggleInput.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.title = json[\"title\"];\r\n        this.valueOn = Utils.getValueOrDefault(json[\"valueOn\"], this.valueOn);\r\n        this.valueOff = Utils.getValueOrDefault(json[\"valueOff\"], this.valueOff);\r\n    };\r\n    Object.defineProperty(ToggleInput.prototype, \"value\", {\r\n        get: function () {\r\n            if (this._checkboxInputElement) {\r\n                return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ToggleInput;\r\n}(Input));\r\nexports.ToggleInput = ToggleInput;\r\nvar Choice = /** @class */ (function () {\r\n    function Choice() {\r\n    }\r\n    return Choice;\r\n}());\r\nexports.Choice = Choice;\r\nvar ChoiceSetInput = /** @class */ (function (_super) {\r\n    __extends(ChoiceSetInput, _super);\r\n    function ChoiceSetInput() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.choices = [];\r\n        return _this;\r\n    }\r\n    ChoiceSetInput.prototype.internalRender = function () {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                // Render as a combo box\r\n                this._selectElement = document.createElement(\"select\");\r\n                this._selectElement.className = \"ac-input ac-multichoiceInput\";\r\n                this._selectElement.style.width = \"100%\";\r\n                var option = document.createElement(\"option\");\r\n                option.selected = true;\r\n                option.disabled = true;\r\n                option.hidden = true;\r\n                if (this.placeholder) {\r\n                    option.text = this.placeholder;\r\n                }\r\n                Utils.appendChild(this._selectElement, option);\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var option = document.createElement(\"option\");\r\n                    option.value = this.choices[i].value;\r\n                    option.text = this.choices[i].title;\r\n                    option.setAttribute(\"aria-label\", this.choices[i].title);\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        option.selected = true;\r\n                    }\r\n                    Utils.appendChild(this._selectElement, option);\r\n                }\r\n                return this._selectElement;\r\n            }\r\n            else {\r\n                // Render as a series of radio buttons\r\n                var element = document.createElement(\"div\");\r\n                element.className = \"ac-input\";\r\n                element.style.width = \"100%\";\r\n                this._toggleInputs = [];\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var radioInput = document.createElement(\"input\");\r\n                    radioInput.type = \"radio\";\r\n                    radioInput.style.margin = \"0\";\r\n                    radioInput.style.display = \"inline-block\";\r\n                    radioInput.style.verticalAlign = \"middle\";\r\n                    radioInput.name = this.id;\r\n                    radioInput.value = this.choices[i].value;\r\n                    radioInput.style.flex = \"0 0 auto\";\r\n                    radioInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        radioInput.checked = true;\r\n                    }\r\n                    this._toggleInputs.push(radioInput);\r\n                    var label = new TextBlock();\r\n                    label.hostConfig = this.hostConfig;\r\n                    label.text = this.choices[i].title;\r\n                    label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                    var labelElement = label.render();\r\n                    labelElement.style.display = \"inline-block\";\r\n                    labelElement.style.marginLeft = \"6px\";\r\n                    labelElement.style.verticalAlign = \"middle\";\r\n                    var compoundInput = document.createElement(\"div\");\r\n                    compoundInput.style.display = \"flex\";\r\n                    Utils.appendChild(compoundInput, radioInput);\r\n                    Utils.appendChild(compoundInput, labelElement);\r\n                    Utils.appendChild(element, compoundInput);\r\n                }\r\n                return element;\r\n            }\r\n        }\r\n        else {\r\n            // Render as a list of toggle inputs\r\n            var defaultValues = this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : null;\r\n            var element = document.createElement(\"div\");\r\n            element.className = \"ac-input\";\r\n            element.style.width = \"100%\";\r\n            this._toggleInputs = [];\r\n            for (var i = 0; i < this.choices.length; i++) {\r\n                var checkboxInput = document.createElement(\"input\");\r\n                checkboxInput.type = \"checkbox\";\r\n                checkboxInput.style.margin = \"0\";\r\n                checkboxInput.style.display = \"inline-block\";\r\n                checkboxInput.style.verticalAlign = \"middle\";\r\n                checkboxInput.value = this.choices[i].value;\r\n                checkboxInput.style.flex = \"0 0 auto\";\r\n                checkboxInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n                if (defaultValues) {\r\n                    if (defaultValues.indexOf(this.choices[i].value) >= 0) {\r\n                        checkboxInput.checked = true;\r\n                    }\r\n                }\r\n                this._toggleInputs.push(checkboxInput);\r\n                var label = new TextBlock();\r\n                label.hostConfig = this.hostConfig;\r\n                label.text = this.choices[i].title;\r\n                label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                var labelElement = label.render();\r\n                labelElement.style.display = \"inline-block\";\r\n                labelElement.style.marginLeft = \"6px\";\r\n                labelElement.style.verticalAlign = \"middle\";\r\n                var compoundInput = document.createElement(\"div\");\r\n                compoundInput.style.display = \"flex\";\r\n                Utils.appendChild(compoundInput, checkboxInput);\r\n                Utils.appendChild(compoundInput, labelElement);\r\n                Utils.appendChild(element, compoundInput);\r\n            }\r\n            return element;\r\n        }\r\n    };\r\n    ChoiceSetInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.ChoiceSet\";\r\n    };\r\n    ChoiceSetInput.prototype.validate = function () {\r\n        var result = [];\r\n        if (this.choices.length == 0) {\r\n            result = [{ error: Enums.ValidationError.CollectionCantBeEmpty, message: \"An Input.ChoiceSet must have at least one choice defined.\" }];\r\n        }\r\n        for (var i = 0; i < this.choices.length; i++) {\r\n            if (!this.choices[i].title || !this.choices[i].value) {\r\n                result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All choices in an Input.ChoiceSet must have their title and value properties set.\" }]);\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ChoiceSetInput.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.isCompact = !(json[\"style\"] === \"expanded\");\r\n        this.isMultiSelect = json[\"isMultiSelect\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n        if (json[\"choices\"] != undefined) {\r\n            var choiceArray = json[\"choices\"];\r\n            this.choices = [];\r\n            for (var i = 0; i < choiceArray.length; i++) {\r\n                var choice = new Choice();\r\n                choice.title = choiceArray[i][\"title\"];\r\n                choice.value = choiceArray[i][\"value\"];\r\n                this.choices.push(choice);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ChoiceSetInput.prototype, \"value\", {\r\n        get: function () {\r\n            if (!this.isMultiSelect) {\r\n                if (this.isCompact) {\r\n                    return this._selectElement ? this._selectElement.value : null;\r\n                }\r\n                else {\r\n                    if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                        return null;\r\n                    }\r\n                    for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                        if (this._toggleInputs[i].checked) {\r\n                            return this._toggleInputs[i].value;\r\n                        }\r\n                    }\r\n                    return null;\r\n                }\r\n            }\r\n            else {\r\n                if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                    return null;\r\n                }\r\n                var result = \"\";\r\n                for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                    if (this._toggleInputs[i].checked) {\r\n                        if (result != \"\") {\r\n                            result += this.hostConfig.choiceSetInputValueSeparator;\r\n                        }\r\n                        result += this._toggleInputs[i].value;\r\n                    }\r\n                }\r\n                return result == \"\" ? null : result;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ChoiceSetInput;\r\n}(Input));\r\nexports.ChoiceSetInput = ChoiceSetInput;\r\nvar NumberInput = /** @class */ (function (_super) {\r\n    __extends(NumberInput, _super);\r\n    function NumberInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    NumberInput.prototype.internalRender = function () {\r\n        this._numberInputElement = document.createElement(\"input\");\r\n        this._numberInputElement.setAttribute(\"type\", \"number\");\r\n        this._numberInputElement.className = \"ac-input ac-numberInput\";\r\n        this._numberInputElement.setAttribute(\"min\", this.min);\r\n        this._numberInputElement.setAttribute(\"max\", this.max);\r\n        this._numberInputElement.style.width = \"100%\";\r\n        this._numberInputElement.tabIndex = 0;\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._numberInputElement.value = this.defaultValue;\r\n        }\r\n        if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n            this._numberInputElement.placeholder = this.placeholder;\r\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n        return this._numberInputElement;\r\n    };\r\n    NumberInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Number\";\r\n    };\r\n    NumberInput.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.placeholder = json[\"placeholder\"];\r\n        this.min = json[\"min\"];\r\n        this.max = json[\"max\"];\r\n    };\r\n    Object.defineProperty(NumberInput.prototype, \"value\", {\r\n        get: function () {\r\n            return this._numberInputElement ? this._numberInputElement.value : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return NumberInput;\r\n}(Input));\r\nexports.NumberInput = NumberInput;\r\nvar DateInput = /** @class */ (function (_super) {\r\n    __extends(DateInput, _super);\r\n    function DateInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DateInput.prototype.internalRender = function () {\r\n        this._dateInputElement = document.createElement(\"input\");\r\n        this._dateInputElement.setAttribute(\"type\", \"date\");\r\n        this._dateInputElement.className = \"ac-input ac-dateInput\";\r\n        this._dateInputElement.style.width = \"100%\";\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._dateInputElement.value = this.defaultValue;\r\n        }\r\n        return this._dateInputElement;\r\n    };\r\n    DateInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Date\";\r\n    };\r\n    Object.defineProperty(DateInput.prototype, \"value\", {\r\n        get: function () {\r\n            return this._dateInputElement ? this._dateInputElement.value : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DateInput;\r\n}(Input));\r\nexports.DateInput = DateInput;\r\nvar TimeInput = /** @class */ (function (_super) {\r\n    __extends(TimeInput, _super);\r\n    function TimeInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeInput.prototype.internalRender = function () {\r\n        this._timeInputElement = document.createElement(\"input\");\r\n        this._timeInputElement.setAttribute(\"type\", \"time\");\r\n        this._timeInputElement.className = \"ac-input ac-timeInput\";\r\n        this._timeInputElement.style.width = \"100%\";\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._timeInputElement.value = this.defaultValue;\r\n        }\r\n        return this._timeInputElement;\r\n    };\r\n    TimeInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Time\";\r\n    };\r\n    Object.defineProperty(TimeInput.prototype, \"value\", {\r\n        get: function () {\r\n            return this._timeInputElement ? this._timeInputElement.value : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return TimeInput;\r\n}(Input));\r\nexports.TimeInput = TimeInput;\r\nvar ActionButtonState;\r\n(function (ActionButtonState) {\r\n    ActionButtonState[ActionButtonState[\"Normal\"] = 0] = \"Normal\";\r\n    ActionButtonState[ActionButtonState[\"Expanded\"] = 1] = \"Expanded\";\r\n    ActionButtonState[ActionButtonState[\"Subdued\"] = 2] = \"Subdued\";\r\n})(ActionButtonState || (ActionButtonState = {}));\r\nvar ActionButton = /** @class */ (function () {\r\n    function ActionButton(action) {\r\n        var _this = this;\r\n        this._element = null;\r\n        this._state = ActionButtonState.Normal;\r\n        this.onClick = null;\r\n        this._action = action;\r\n        this._element = document.createElement(\"button\");\r\n        this._element.type = \"button\";\r\n        this._element.style.overflow = \"hidden\";\r\n        this._element.style.whiteSpace = \"nowrap\";\r\n        this._element.style.textOverflow = \"ellipsis\";\r\n        this._element.onclick = function (e) { _this.click(); };\r\n        this.updateCssStyle();\r\n    }\r\n    ActionButton.prototype.click = function () {\r\n        if (this.onClick != null) {\r\n            this.onClick(this);\r\n        }\r\n    };\r\n    ActionButton.prototype.updateCssStyle = function () {\r\n        this._element.className = \"ac-pushButton\";\r\n        if (this._action instanceof ShowCardAction) {\r\n            this._element.classList.add(\"expandable\");\r\n        }\r\n        switch (this._state) {\r\n            case ActionButtonState.Expanded:\r\n                this._element.classList.add(\"expanded\");\r\n                break;\r\n            case ActionButtonState.Subdued:\r\n                this._element.classList.add(\"subdued\");\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(ActionButton.prototype, \"action\", {\r\n        get: function () {\r\n            return this._action;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ActionButton.prototype, \"text\", {\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (value) {\r\n            this._text = value;\r\n            this._element.innerText = this._text;\r\n            this._element.setAttribute(\"aria-label\", this._text);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ActionButton.prototype, \"element\", {\r\n        get: function () {\r\n            return this._element;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ActionButton.prototype, \"state\", {\r\n        get: function () {\r\n            return this._state;\r\n        },\r\n        set: function (value) {\r\n            this._state = value;\r\n            this.updateCssStyle();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ActionButton;\r\n}());\r\nvar Action = /** @class */ (function () {\r\n    function Action() {\r\n        this._parent = null;\r\n        this._actionCollection = null; // hold the reference to its action collection\r\n    }\r\n    Action.prototype.setParent = function (value) {\r\n        this._parent = value;\r\n    };\r\n    Action.prototype.execute = function () {\r\n        raiseExecuteActionEvent(this);\r\n    };\r\n    Action.prototype.setCollection = function (actionCollection) {\r\n        this._actionCollection = actionCollection;\r\n    };\r\n    // Expand the action card pane with a inline status card\r\n    // Null status will clear the status bar\r\n    Action.prototype.setStatus = function (status) {\r\n        if (this._actionCollection == null) {\r\n            return;\r\n        }\r\n        if (status) {\r\n            var statusCard = new InlineAdaptiveCard();\r\n            statusCard.parse(status);\r\n            this._actionCollection.showStatusCard(statusCard);\r\n        }\r\n        else {\r\n            this._actionCollection.hideStatusCard();\r\n        }\r\n    };\r\n    Action.prototype.validate = function () {\r\n        return [];\r\n    };\r\n    Action.prototype.prepare = function (inputs) {\r\n        // Do nothing in base implementation\r\n    };\r\n    ;\r\n    Action.prototype.parse = function (json) {\r\n        this.id = json[\"id\"];\r\n        this.title = json[\"title\"];\r\n    };\r\n    Action.prototype.getAllInputs = function () {\r\n        return [];\r\n    };\r\n    Action.prototype.getActionById = function (id) {\r\n        if (this.id == id) {\r\n            return this;\r\n        }\r\n    };\r\n    Object.defineProperty(Action.prototype, \"parent\", {\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Action;\r\n}());\r\nexports.Action = Action;\r\nvar SubmitAction = /** @class */ (function (_super) {\r\n    __extends(SubmitAction, _super);\r\n    function SubmitAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._isPrepared = false;\r\n        return _this;\r\n    }\r\n    SubmitAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.Submit\";\r\n    };\r\n    SubmitAction.prototype.prepare = function (inputs) {\r\n        if (this._originalData) {\r\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\r\n        }\r\n        else {\r\n            this._processedData = {};\r\n        }\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            var inputValue = inputs[i].value;\r\n            if (inputValue != null) {\r\n                this._processedData[inputs[i].id] = inputs[i].value;\r\n            }\r\n        }\r\n        this._isPrepared = true;\r\n    };\r\n    SubmitAction.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.data = json[\"data\"];\r\n    };\r\n    Object.defineProperty(SubmitAction.prototype, \"data\", {\r\n        get: function () {\r\n            return this._isPrepared ? this._processedData : this._originalData;\r\n        },\r\n        set: function (value) {\r\n            this._originalData = value;\r\n            this._isPrepared = false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SubmitAction;\r\n}(Action));\r\nexports.SubmitAction = SubmitAction;\r\nvar OpenUrlAction = /** @class */ (function (_super) {\r\n    __extends(OpenUrlAction, _super);\r\n    function OpenUrlAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    OpenUrlAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.OpenUrl\";\r\n    };\r\n    OpenUrlAction.prototype.validate = function () {\r\n        if (!this.url) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.OpenUrl must have its url property set.\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    OpenUrlAction.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.url = json[\"url\"];\r\n    };\r\n    return OpenUrlAction;\r\n}(Action));\r\nexports.OpenUrlAction = OpenUrlAction;\r\nvar HttpHeader = /** @class */ (function () {\r\n    function HttpHeader() {\r\n        this._value = new Utils.StringWithSubstitutions();\r\n    }\r\n    HttpHeader.prototype.prepare = function (inputs) {\r\n        this._value.substituteInputValues(inputs, Utils.ContentTypes.applicationXWwwFormUrlencoded);\r\n    };\r\n    Object.defineProperty(HttpHeader.prototype, \"value\", {\r\n        get: function () {\r\n            return this._value.get();\r\n        },\r\n        set: function (newValue) {\r\n            this._value.set(newValue);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return HttpHeader;\r\n}());\r\nexports.HttpHeader = HttpHeader;\r\nvar HttpAction = /** @class */ (function (_super) {\r\n    __extends(HttpAction, _super);\r\n    function HttpAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._url = new Utils.StringWithSubstitutions();\r\n        _this._body = new Utils.StringWithSubstitutions();\r\n        _this._headers = [];\r\n        return _this;\r\n    }\r\n    HttpAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.Http\";\r\n    };\r\n    HttpAction.prototype.validate = function () {\r\n        var result = [];\r\n        if (!this.url) {\r\n            result = [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.Http must have its url property set.\" }];\r\n        }\r\n        if (this.headers.length > 0) {\r\n            for (var i = 0; i < this.headers.length; i++) {\r\n                if (!this.headers[i].name || !this.headers[i].value) {\r\n                    result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All headers of an Action.Http must have their name and value properties set.\" }]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    HttpAction.prototype.prepare = function (inputs) {\r\n        this._url.substituteInputValues(inputs, Utils.ContentTypes.applicationXWwwFormUrlencoded);\r\n        var contentType = Utils.ContentTypes.applicationJson;\r\n        for (var i = 0; i < this._headers.length; i++) {\r\n            this._headers[i].prepare(inputs);\r\n            if (this._headers[i].name && this._headers[i].name.toLowerCase() == \"content-type\") {\r\n                contentType = this._headers[i].value;\r\n            }\r\n        }\r\n        this._body.substituteInputValues(inputs, contentType);\r\n    };\r\n    ;\r\n    HttpAction.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.url = json[\"url\"];\r\n        this.method = json[\"method\"];\r\n        this.body = json[\"body\"];\r\n        if (json[\"headers\"] != null) {\r\n            var jsonHeaders = json[\"headers\"];\r\n            this._headers = [];\r\n            for (var i = 0; i < jsonHeaders.length; i++) {\r\n                var httpHeader = new HttpHeader();\r\n                httpHeader.name = jsonHeaders[i][\"name\"];\r\n                httpHeader.value = jsonHeaders[i][\"value\"];\r\n                this.headers.push(httpHeader);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(HttpAction.prototype, \"url\", {\r\n        get: function () {\r\n            return this._url.get();\r\n        },\r\n        set: function (value) {\r\n            this._url.set(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpAction.prototype, \"body\", {\r\n        get: function () {\r\n            return this._body.get();\r\n        },\r\n        set: function (value) {\r\n            this._body.set(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpAction.prototype, \"headers\", {\r\n        get: function () {\r\n            return this._headers;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return HttpAction;\r\n}(Action));\r\nexports.HttpAction = HttpAction;\r\nvar ShowCardAction = /** @class */ (function (_super) {\r\n    __extends(ShowCardAction, _super);\r\n    function ShowCardAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.card = new InlineAdaptiveCard();\r\n        return _this;\r\n    }\r\n    ShowCardAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.ShowCard\";\r\n    };\r\n    ShowCardAction.prototype.validate = function () {\r\n        return this.card.validate();\r\n    };\r\n    ShowCardAction.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.card.parse(json[\"card\"]);\r\n    };\r\n    ShowCardAction.prototype.setParent = function (value) {\r\n        _super.prototype.setParent.call(this, value);\r\n        this.card.setParent(value);\r\n    };\r\n    ShowCardAction.prototype.getAllInputs = function () {\r\n        return this.card.getAllInputs();\r\n    };\r\n    ShowCardAction.prototype.getActionById = function (id) {\r\n        var result = _super.prototype.getActionById.call(this, id);\r\n        if (!result) {\r\n            result = this.card.getActionById(id);\r\n        }\r\n        return result;\r\n    };\r\n    return ShowCardAction;\r\n}(Action));\r\nexports.ShowCardAction = ShowCardAction;\r\nvar ActionCollection = /** @class */ (function () {\r\n    function ActionCollection(owner) {\r\n        this._actionButtons = [];\r\n        this._expandedAction = null;\r\n        this._renderedActionCount = 0;\r\n        this._statusCard = null;\r\n        this._actionCard = null;\r\n        this.items = [];\r\n        this.onHideActionCardPane = null;\r\n        this.onShowActionCardPane = null;\r\n        this._owner = owner;\r\n    }\r\n    ActionCollection.prototype.showStatusCard = function (status) {\r\n        status.setParent(this._owner);\r\n        this._statusCard = status.render();\r\n        this.refreshContainer();\r\n    };\r\n    ActionCollection.prototype.hideStatusCard = function () {\r\n        this._statusCard = null;\r\n        this.refreshContainer();\r\n    };\r\n    ActionCollection.prototype.refreshContainer = function () {\r\n        this._actionCardContainer.innerHTML = \"\";\r\n        if (this._actionCard === null && this._statusCard === null) {\r\n            this._actionCardContainer.style.padding = \"0px\";\r\n            this._actionCardContainer.style.marginTop = \"0px\";\r\n            if (this.onHideActionCardPane) {\r\n                this.onHideActionCardPane();\r\n            }\r\n            return;\r\n        }\r\n        if (this.onShowActionCardPane) {\r\n            this.onShowActionCardPane(null);\r\n        }\r\n        this._actionCardContainer.style.marginTop = this._renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\r\n        var padding = this._owner.getNonZeroPadding().toSpacingDefinition(this._owner.hostConfig);\r\n        if (this._actionCard !== null) {\r\n            this._actionCard.style.paddingLeft = padding.left + \"px\";\r\n            this._actionCard.style.paddingRight = padding.right + \"px\";\r\n            this._actionCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._actionCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\r\n        }\r\n        if (this._statusCard !== null) {\r\n            this._statusCard.style.paddingLeft = padding.left + \"px\";\r\n            this._statusCard.style.paddingRight = padding.right + \"px\";\r\n            this._statusCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._statusCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n            Utils.appendChild(this._actionCardContainer, this._statusCard);\r\n        }\r\n    };\r\n    ActionCollection.prototype.hideActionCard = function () {\r\n        if (this._expandedAction) {\r\n            raiseInlineCardExpandedEvent(this._expandedAction, false);\r\n        }\r\n        this._expandedAction = null;\r\n        this._actionCard = null;\r\n        this.refreshContainer();\r\n    };\r\n    ActionCollection.prototype.showActionCard = function (action, suppressStyle) {\r\n        if (suppressStyle === void 0) { suppressStyle = false; }\r\n        if (action.card == null) {\r\n            return;\r\n        }\r\n        action.card.suppressStyle = suppressStyle;\r\n        var renderedCard = action.card.render();\r\n        this._actionCard = renderedCard;\r\n        this._expandedAction = action;\r\n        this.refreshContainer();\r\n        raiseInlineCardExpandedEvent(action, true);\r\n    };\r\n    ActionCollection.prototype.actionClicked = function (actionButton) {\r\n        if (!(actionButton.action instanceof ShowCardAction)) {\r\n            for (var i = 0; i < this._actionButtons.length; i++) {\r\n                this._actionButtons[i].state = ActionButtonState.Normal;\r\n            }\r\n            this.hideStatusCard();\r\n            this.hideActionCard();\r\n            actionButton.action.execute();\r\n        }\r\n        else {\r\n            this.hideStatusCard();\r\n            if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\r\n                actionButton.action.execute();\r\n            }\r\n            else if (actionButton.action === this._expandedAction) {\r\n                for (var i = 0; i < this._actionButtons.length; i++) {\r\n                    this._actionButtons[i].state = ActionButtonState.Normal;\r\n                }\r\n                this.hideActionCard();\r\n            }\r\n            else {\r\n                for (var i = 0; i < this._actionButtons.length; i++) {\r\n                    if (this._actionButtons[i] !== actionButton) {\r\n                        this._actionButtons[i].state = ActionButtonState.Subdued;\r\n                    }\r\n                }\r\n                actionButton.state = ActionButtonState.Expanded;\r\n                this.showActionCard(actionButton.action, !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()));\r\n            }\r\n        }\r\n    };\r\n    ActionCollection.prototype.getActionById = function (id) {\r\n        var result = null;\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = this.items[i].getActionById(id);\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ActionCollection.prototype.validate = function () {\r\n        var result = [];\r\n        if (this._owner.hostConfig.actions.maxActions && this.items.length > this._owner.hostConfig.actions.maxActions) {\r\n            result.push({\r\n                error: Enums.ValidationError.TooManyActions,\r\n                message: \"A maximum of \" + this._owner.hostConfig.actions.maxActions + \" actions are allowed.\"\r\n            });\r\n        }\r\n        if (this.items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\r\n            result.push({\r\n                error: Enums.ValidationError.InteractivityNotAllowed,\r\n                message: \"Interactivity is not allowed.\"\r\n            });\r\n        }\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            if (!isActionAllowed(this.items[i], this._owner.getForbiddenActionTypes())) {\r\n                result.push({\r\n                    error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                    message: \"Actions of type \" + this.items[i].getJsonTypeName() + \" are not allowe.\"\r\n                });\r\n            }\r\n        }\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].validate());\r\n        }\r\n        return result;\r\n    };\r\n    ActionCollection.prototype.render = function (orientation) {\r\n        var _this = this;\r\n        if (!this._owner.hostConfig.supportsInteractivity) {\r\n            return null;\r\n        }\r\n        var element = document.createElement(\"div\");\r\n        this._actionCardContainer = document.createElement(\"div\");\r\n        this._renderedActionCount = 0;\r\n        var maxActions = this._owner.hostConfig.actions.maxActions ? Math.min(this._owner.hostConfig.actions.maxActions, this.items.length) : this.items.length;\r\n        var forbiddenActionTypes = this._owner.getForbiddenActionTypes();\r\n        if (AdaptiveCard.preExpandSingleShowCardAction && maxActions == 1 && this.items[0] instanceof ShowCardAction && isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n            this.showActionCard(this.items[0], true);\r\n            this._renderedActionCount = 1;\r\n        }\r\n        else {\r\n            var buttonStrip = document.createElement(\"div\");\r\n            buttonStrip.style.display = \"flex\";\r\n            if (orientation == Enums.Orientation.Horizontal) {\r\n                buttonStrip.style.flexDirection = \"row\";\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                buttonStrip.style.flexDirection = \"column\";\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Stretch:\r\n                            buttonStrip.style.alignItems = \"stretch\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            for (var i = 0; i < this.items.length; i++) {\r\n                if (isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n                    var actionButton = new ActionButton(this.items[i]);\r\n                    actionButton.element.style.overflow = \"hidden\";\r\n                    actionButton.element.style.overflow = \"table-cell\";\r\n                    actionButton.element.style.flex = this._owner.hostConfig.actions.actionAlignment === Enums.ActionAlignment.Stretch ? \"0 1 100%\" : \"0 1 auto\";\r\n                    actionButton.text = this.items[i].title;\r\n                    actionButton.onClick = function (ab) { _this.actionClicked(ab); };\r\n                    this._actionButtons.push(actionButton);\r\n                    buttonStrip.appendChild(actionButton.element);\r\n                    this._renderedActionCount++;\r\n                    if (this._renderedActionCount >= this._owner.hostConfig.actions.maxActions || i == this.items.length - 1) {\r\n                        break;\r\n                    }\r\n                    else if (this._owner.hostConfig.actions.buttonSpacing > 0) {\r\n                        var spacer = document.createElement(\"div\");\r\n                        if (orientation === Enums.Orientation.Horizontal) {\r\n                            spacer.style.flex = \"0 0 auto\";\r\n                            spacer.style.width = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        else {\r\n                            spacer.style.height = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        Utils.appendChild(buttonStrip, spacer);\r\n                    }\r\n                }\r\n            }\r\n            var buttonStripContainer = document.createElement(\"div\");\r\n            buttonStripContainer.style.overflow = \"hidden\";\r\n            buttonStripContainer.appendChild(buttonStrip);\r\n            Utils.appendChild(element, buttonStripContainer);\r\n        }\r\n        Utils.appendChild(element, this._actionCardContainer);\r\n        return this._renderedActionCount > 0 ? element : null;\r\n    };\r\n    ActionCollection.prototype.addAction = function (action) {\r\n        if (!action.parent) {\r\n            this.items.push(action);\r\n            action.setParent(this._owner);\r\n            invokeSetCollection(action, this);\r\n        }\r\n        else {\r\n            throw new Error(\"The action already belongs to another element.\");\r\n        }\r\n    };\r\n    ActionCollection.prototype.clear = function () {\r\n        this.items = [];\r\n    };\r\n    ActionCollection.prototype.getAllInputs = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            var action = this.items[i];\r\n            result = result.concat(action.getAllInputs());\r\n        }\r\n        return result;\r\n    };\r\n    return ActionCollection;\r\n}());\r\nvar ActionSet = /** @class */ (function (_super) {\r\n    __extends(ActionSet, _super);\r\n    function ActionSet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.orientation = null;\r\n        _this._actionCollection = new ActionCollection(_this);\r\n        _this._actionCollection.onHideActionCardPane = function () { _this.showBottomSpacer(_this); };\r\n        _this._actionCollection.onShowActionCardPane = function (action) { _this.hideBottomSpacer(_this); };\r\n        return _this;\r\n    }\r\n    ActionSet.prototype.internalRender = function () {\r\n        return this._actionCollection.render(this.orientation ? this.orientation : this.hostConfig.actions.actionsOrientation);\r\n    };\r\n    ActionSet.prototype.getJsonTypeName = function () {\r\n        return \"ActionSet\";\r\n    };\r\n    ActionSet.prototype.validate = function () {\r\n        return this._actionCollection.validate();\r\n    };\r\n    ActionSet.prototype.parse = function (json, itemsCollectionPropertyName) {\r\n        if (itemsCollectionPropertyName === void 0) { itemsCollectionPropertyName = \"items\"; }\r\n        _super.prototype.parse.call(this, json);\r\n        var jsonOrientation = json[\"orientation\"];\r\n        if (jsonOrientation) {\r\n            this.orientation = Utils.getEnumValueOrDefault(Enums.Orientation, jsonOrientation, Enums.Orientation.Horizontal);\r\n        }\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"];\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                this.addAction(createActionInstance(jsonActions[i]));\r\n            }\r\n        }\r\n    };\r\n    ActionSet.prototype.addAction = function (action) {\r\n        if (action != null) {\r\n            this._actionCollection.addAction(action);\r\n        }\r\n    };\r\n    ActionSet.prototype.getAllInputs = function () {\r\n        return this._actionCollection.getAllInputs();\r\n    };\r\n    ActionSet.prototype.renderSpeech = function () {\r\n        // TODO: What's the right thing to do here?\r\n        return \"\";\r\n    };\r\n    Object.defineProperty(ActionSet.prototype, \"isInteractive\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ActionSet;\r\n}(CardElement));\r\nexports.ActionSet = ActionSet;\r\nvar BackgroundImage = /** @class */ (function () {\r\n    function BackgroundImage() {\r\n        this.mode = Enums.BackgroundImageMode.Stretch;\r\n        this.horizontalAlignment = Enums.HorizontalAlignment.Left;\r\n        this.verticalAlignment = Enums.VerticalAlignment.Top;\r\n    }\r\n    BackgroundImage.prototype.parse = function (json) {\r\n        this.url = json[\"url\"];\r\n        this.mode = Utils.getEnumValueOrDefault(Enums.BackgroundImageMode, json[\"mode\"], this.mode);\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n        this.verticalAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalAlignment\"], this.verticalAlignment);\r\n    };\r\n    BackgroundImage.prototype.apply = function (element) {\r\n        if (this.url) {\r\n            element.style.backgroundImage = \"url('\" + this.url + \"')\";\r\n            switch (this.mode) {\r\n                case Enums.BackgroundImageMode.Repeat:\r\n                    element.style.backgroundRepeat = \"repeat\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatHorizontally:\r\n                    element.style.backgroundRepeat = \"repeat-x\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatVertically:\r\n                    element.style.backgroundRepeat = \"repeat-y\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.Stretch:\r\n                default:\r\n                    element.style.backgroundRepeat = \"no-repeat\";\r\n                    element.style.backgroundSize = \"cover\";\r\n                    break;\r\n            }\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.backgroundPositionX = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.backgroundPositionX = \"right\";\r\n                    break;\r\n            }\r\n            switch (this.verticalAlignment) {\r\n                case Enums.VerticalAlignment.Center:\r\n                    element.style.backgroundPositionY = \"center\";\r\n                    break;\r\n                case Enums.VerticalAlignment.Bottom:\r\n                    element.style.backgroundPositionY = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return BackgroundImage;\r\n}());\r\nexports.BackgroundImage = BackgroundImage;\r\nvar Container = /** @class */ (function (_super) {\r\n    __extends(Container, _super);\r\n    function Container() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._items = [];\r\n        _this._style = null;\r\n        _this.verticalContentAlignment = Enums.VerticalAlignment.Top;\r\n        return _this;\r\n    }\r\n    Container.prototype.isElementAllowed = function (element, forbiddenElementTypes) {\r\n        if (!this.hostConfig.supportsInteractivity && element.isInteractive) {\r\n            return false;\r\n        }\r\n        if (forbiddenElementTypes) {\r\n            for (var i = 0; i < forbiddenElementTypes.length; i++) {\r\n                if (element.getJsonTypeName() === forbiddenElementTypes[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Object.defineProperty(Container.prototype, \"hasExplicitStyle\", {\r\n        get: function () {\r\n            return this._style != null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Container.prototype.showBottomSpacer = function (requestingElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            this.applyPadding();\r\n            _super.prototype.showBottomSpacer.call(this, requestingElement);\r\n        }\r\n    };\r\n    Container.prototype.hideBottomSpacer = function (requestingElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            if (this.renderedElement) {\r\n                this.renderedElement.style.paddingBottom = \"0px\";\r\n            }\r\n            _super.prototype.hideBottomSpacer.call(this, requestingElement);\r\n        }\r\n    };\r\n    Container.prototype.applyPadding = function () {\r\n        if (this.padding) {\r\n            if (this.renderedElement) {\r\n                var physicalPadding = this.padding.toSpacingDefinition(this.hostConfig);\r\n                this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n                this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n                this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n            }\r\n        }\r\n        else if (this.hasBackground) {\r\n            var physicalMargin = new SpacingDefinition();\r\n            var physicalPadding = new SpacingDefinition();\r\n            var useAutoPadding = (this.parent ? this.parent.canContentBleed() : false) && AdaptiveCard.useAutomaticContainerBleeding;\r\n            if (useAutoPadding) {\r\n                var effectivePadding = this.getNonZeroPadding();\r\n                var effectiveMargin = new PaddingDefinition(effectivePadding.top, effectivePadding.right, effectivePadding.bottom, effectivePadding.left);\r\n                if (!this.isAtTheVeryTop()) {\r\n                    effectivePadding.top = Enums.Spacing.None;\r\n                    effectiveMargin.top = Enums.Spacing.None;\r\n                }\r\n                if (!this.isAtTheVeryBottom()) {\r\n                    effectivePadding.bottom = Enums.Spacing.None;\r\n                    effectiveMargin.bottom = Enums.Spacing.None;\r\n                }\r\n                if (!this.isAtTheVeryLeft()) {\r\n                    effectivePadding.left = Enums.Spacing.None;\r\n                    effectiveMargin.left = Enums.Spacing.None;\r\n                }\r\n                if (!this.isAtTheVeryRight()) {\r\n                    effectivePadding.right = Enums.Spacing.None;\r\n                    effectiveMargin.right = Enums.Spacing.None;\r\n                }\r\n                if (effectivePadding.left != Enums.Spacing.None || effectivePadding.right != Enums.Spacing.None) {\r\n                    if (effectivePadding.left == Enums.Spacing.None) {\r\n                        effectivePadding.left = effectivePadding.right;\r\n                    }\r\n                    if (effectivePadding.right == Enums.Spacing.None) {\r\n                        effectivePadding.right = effectivePadding.left;\r\n                    }\r\n                }\r\n                if (effectivePadding.top != Enums.Spacing.None || effectivePadding.bottom != Enums.Spacing.None) {\r\n                    if (effectivePadding.top == Enums.Spacing.None) {\r\n                        effectivePadding.top = effectivePadding.bottom;\r\n                    }\r\n                    if (effectivePadding.bottom == Enums.Spacing.None) {\r\n                        effectivePadding.bottom = effectivePadding.top;\r\n                    }\r\n                }\r\n                if (effectivePadding.top != Enums.Spacing.None\r\n                    || effectivePadding.right != Enums.Spacing.None\r\n                    || effectivePadding.bottom != Enums.Spacing.None\r\n                    || effectivePadding.left != Enums.Spacing.None) {\r\n                    if (effectivePadding.top == Enums.Spacing.None) {\r\n                        effectivePadding.top = Enums.Spacing.Default;\r\n                    }\r\n                    if (effectivePadding.right == Enums.Spacing.None) {\r\n                        effectivePadding.right = Enums.Spacing.Default;\r\n                    }\r\n                    if (effectivePadding.bottom == Enums.Spacing.None) {\r\n                        effectivePadding = Object.assign({}, effectivePadding, {\r\n                            bottom: Enums.Spacing.Default\r\n                        });\r\n                    }\r\n                    if (effectivePadding.left == Enums.Spacing.None) {\r\n                        effectivePadding = Object.assign({}, effectivePadding, {\r\n                            left: Enums.Spacing.Default\r\n                        });\r\n                    }\r\n                }\r\n                if (effectivePadding.top == Enums.Spacing.None &&\r\n                    effectivePadding.right == Enums.Spacing.None &&\r\n                    effectivePadding.bottom == Enums.Spacing.None &&\r\n                    effectivePadding.left == Enums.Spacing.None) {\r\n                    effectivePadding = new PaddingDefinition(Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding);\r\n                }\r\n                physicalMargin = effectiveMargin.toSpacingDefinition(this.hostConfig);\r\n                physicalPadding = effectivePadding.toSpacingDefinition(this.hostConfig);\r\n            }\r\n            else {\r\n                physicalPadding = new PaddingDefinition(Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding).toSpacingDefinition(this.hostConfig);\r\n            }\r\n            if (this.renderedElement) {\r\n                this.renderedElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n                this.renderedElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n                this.renderedElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n                this.renderedElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n                this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n                this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n                this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n            }\r\n            if (this.separatorElement) {\r\n                if (this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                    this.separatorElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n                    this.separatorElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n                }\r\n                else {\r\n                    this.separatorElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n                    this.separatorElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Container.prototype.internalRender = function () {\r\n        var _this = this;\r\n        var element = document.createElement(\"div\");\r\n        element.className = \"ac-container\";\r\n        element.style.display = \"flex\";\r\n        element.style.flexDirection = \"column\";\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Forces the container to be at least as tall as its content.\r\n            //\r\n            // Fixes a quirk in Chrome where, for nested flex elements, the\r\n            // inner element's height would never exceed the outer element's\r\n            // height. This caused overflow truncation to break -- containers\r\n            // would always be measured as not overflowing, since their heights\r\n            // were constrained by their parents as opposed to truly reflecting\r\n            // the height of their content.\r\n            //\r\n            // See the \"Browser Rendering Notes\" section of this answer:\r\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\r\n            element.style.minHeight = '-webkit-min-content';\r\n        }\r\n        switch (this.verticalContentAlignment) {\r\n            case Enums.VerticalAlignment.Center:\r\n                element.style.justifyContent = \"center\";\r\n                break;\r\n            case Enums.VerticalAlignment.Bottom:\r\n                element.style.justifyContent = \"flex-end\";\r\n                break;\r\n            default:\r\n                element.style.justifyContent = \"flex-start\";\r\n                break;\r\n        }\r\n        if (this.hasBackground) {\r\n            if (this.backgroundImage) {\r\n                this.backgroundImage.apply(element);\r\n            }\r\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.default);\r\n            if (!Utils.isNullOrEmpty(styleDefinition.backgroundColor)) {\r\n                element.style.backgroundColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\r\n            }\r\n        }\r\n        if (this.selectAction && this.hostConfig.supportsInteractivity) {\r\n            element.classList.add(\"ac-selectable\");\r\n            element.tabIndex = 0;\r\n            element.setAttribute(\"role\", \"button\");\r\n            element.setAttribute(\"aria-label\", this.selectAction.title);\r\n            element.onclick = function (e) {\r\n                if (_this.selectAction != null) {\r\n                    _this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            };\r\n            element.onkeypress = function (e) {\r\n                if (_this.selectAction != null) {\r\n                    // Enter or space pressed\r\n                    if (e.keyCode == 13 || e.keyCode == 32) {\r\n                        _this.selectAction.execute();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        if (this._items.length > 0) {\r\n            var renderedElementCount = 0;\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var renderedElement = this.isElementAllowed(this._items[i], this.getForbiddenElementTypes()) ? this._items[i].render() : null;\r\n                if (renderedElement) {\r\n                    if (renderedElementCount > 0 && this._items[i].separatorElement) {\r\n                        this._items[i].separatorElement.style.flex = \"0 0 auto\";\r\n                        Utils.appendChild(element, this._items[i].separatorElement);\r\n                    }\r\n                    Utils.appendChild(element, renderedElement);\r\n                    renderedElementCount++;\r\n                }\r\n            }\r\n        }\r\n        return element;\r\n    };\r\n    Container.prototype.truncateOverflow = function (maxHeight) {\r\n        // Add 1 to account for rounding differences between browsers\r\n        var boundary = this.renderedElement.offsetTop + maxHeight + 1;\r\n        var handleElement = function (cardElement) {\r\n            var elt = cardElement.renderedElement;\r\n            if (elt) {\r\n                switch (Utils.getFitStatus(elt, boundary)) {\r\n                    case Enums.ContainerFitStatus.FullyInContainer:\r\n                        var sizeChanged = cardElement['resetOverflow']();\r\n                        // If the element's size changed after resetting content,\r\n                        // we have to check if it still fits fully in the card\r\n                        if (sizeChanged) {\r\n                            handleElement(cardElement);\r\n                        }\r\n                        break;\r\n                    case Enums.ContainerFitStatus.Overflowing:\r\n                        var maxHeight_1 = boundary - elt.offsetTop;\r\n                        cardElement['handleOverflow'](maxHeight_1);\r\n                        break;\r\n                    case Enums.ContainerFitStatus.FullyOutOfContainer:\r\n                        cardElement['handleOverflow'](0);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\r\n            var item = _a[_i];\r\n            handleElement(item);\r\n        }\r\n        return true;\r\n    };\r\n    Container.prototype.undoOverflowTruncation = function () {\r\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\r\n            var item = _a[_i];\r\n            item['resetOverflow']();\r\n        }\r\n    };\r\n    Object.defineProperty(Container.prototype, \"hasBackground\", {\r\n        get: function () {\r\n            var parentContainer = this.getParentContainer();\r\n            return this.backgroundImage != undefined || (this.hasExplicitStyle && (parentContainer ? parentContainer.style != this.style : false));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"defaultStyle\", {\r\n        get: function () {\r\n            return Enums.ContainerStyle.Default;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"allowCustomStyle\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"style\", {\r\n        get: function () {\r\n            if (this.allowCustomStyle) {\r\n                return this._style && this.hostConfig.containerStyles.getStyleByName(this._style) ? this._style : this.defaultStyle;\r\n            }\r\n            else {\r\n                return this.defaultStyle;\r\n            }\r\n        },\r\n        set: function (value) {\r\n            this._style = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"padding\", {\r\n        get: function () {\r\n            return this.getPadding();\r\n        },\r\n        set: function (value) {\r\n            this.setPadding(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Container.prototype.getJsonTypeName = function () {\r\n        return \"Container\";\r\n    };\r\n    Container.prototype.isFirstElement = function (element) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Container.prototype.isLastElement = function (element) {\r\n        for (var i = this._items.length - 1; i >= 0; i--) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Container.prototype.validate = function () {\r\n        var result = [];\r\n        if (this._style) {\r\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this._style);\r\n            if (!styleDefinition) {\r\n                result.push({\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Unknown container style: \" + this._style\r\n                });\r\n            }\r\n        }\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (!this.hostConfig.supportsInteractivity && this._items[i].isInteractive) {\r\n                result.push({\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Interactivity is not allowed.\"\r\n                });\r\n            }\r\n            if (!this.isElementAllowed(this._items[i], this.getForbiddenElementTypes())) {\r\n                result.push({\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Elements of type \" + this._items[i].getJsonTypeName() + \" are not allowed in this container.\"\r\n                });\r\n            }\r\n            result = result.concat(this._items[i].validate());\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.parse = function (json, itemsCollectionPropertyName) {\r\n        if (itemsCollectionPropertyName === void 0) { itemsCollectionPropertyName = \"items\"; }\r\n        _super.prototype.parse.call(this, json);\r\n        var jsonBackgroundImage = json[\"backgroundImage\"];\r\n        if (jsonBackgroundImage) {\r\n            this.backgroundImage = new BackgroundImage();\r\n            if (typeof jsonBackgroundImage === \"string\") {\r\n                this.backgroundImage.url = jsonBackgroundImage;\r\n                this.backgroundImage.mode = Enums.BackgroundImageMode.Stretch;\r\n            }\r\n            else if (typeof jsonBackgroundImage === \"object\") {\r\n                this.backgroundImage = new BackgroundImage();\r\n                this.backgroundImage.parse(json[\"backgroundImage\"]);\r\n            }\r\n        }\r\n        this.verticalContentAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalContentAlignment\"], this.verticalContentAlignment);\r\n        this._style = json[\"style\"];\r\n        if (json[itemsCollectionPropertyName] != null) {\r\n            var items = json[itemsCollectionPropertyName];\r\n            this.clear();\r\n            for (var i = 0; i < items.length; i++) {\r\n                var elementType = items[i][\"type\"];\r\n                var element = AdaptiveCard.elementTypeRegistry.createInstance(elementType);\r\n                if (!element) {\r\n                    raiseParseError({\r\n                        error: Enums.ValidationError.UnknownElementType,\r\n                        message: \"Unknown element type: \" + elementType\r\n                    });\r\n                }\r\n                else {\r\n                    this.addItem(element);\r\n                    element.parse(items[i]);\r\n                }\r\n            }\r\n        }\r\n        var selectActionJson = json[\"selectAction\"];\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson);\r\n        }\r\n    };\r\n    Container.prototype.addItem = function (item) {\r\n        if (!item.parent) {\r\n            if (item.isStandalone) {\r\n                this._items.push(item);\r\n                item.setParent(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Elements of type \" + item.getJsonTypeName() + \" cannot be used as standalone elements.\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"The element already belongs to another container.\");\r\n        }\r\n    };\r\n    Container.prototype.clear = function () {\r\n        this._items = [];\r\n    };\r\n    Container.prototype.canContentBleed = function () {\r\n        return this.hasBackground ? false : _super.prototype.canContentBleed.call(this);\r\n    };\r\n    Container.prototype.getAllInputs = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            var item = this._items[i];\r\n            result = result.concat(item.getAllInputs());\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.getElementById = function (id) {\r\n        var result = _super.prototype.getElementById.call(this, id);\r\n        if (!result) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                result = this._items[i].getElementById(id);\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.getActionById = function (id) {\r\n        var result = _super.prototype.getActionById.call(this, id);\r\n        if (!result) {\r\n            if (this.selectAction) {\r\n                result = this.selectAction.getActionById(id);\r\n            }\r\n            if (!result) {\r\n                for (var i = 0; i < this._items.length; i++) {\r\n                    result = this._items[i].getActionById(id);\r\n                    if (result) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        // render each item\r\n        var speak = null;\r\n        if (this._items.length > 0) {\r\n            speak = '';\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var result = this._items[i].renderSpeech();\r\n                if (result) {\r\n                    speak += result;\r\n                }\r\n            }\r\n        }\r\n        return speak;\r\n    };\r\n    Container.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        this.applyPadding();\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                this._items[i].updateLayout();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Container.prototype, \"selectAction\", {\r\n        get: function () {\r\n            return this._selectAction;\r\n        },\r\n        set: function (value) {\r\n            this._selectAction = value;\r\n            if (this._selectAction) {\r\n                this._selectAction.setParent(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Container;\r\n}(CardElement));\r\nexports.Container = Container;\r\nvar Column = /** @class */ (function (_super) {\r\n    __extends(Column, _super);\r\n    function Column() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._computedWeight = 0;\r\n        _this.width = \"auto\";\r\n        _this.pixelWidth = 0;\r\n        return _this;\r\n    }\r\n    Column.prototype.adjustRenderedElementSize = function (renderedElement) {\r\n        renderedElement.style.minWidth = \"0\";\r\n        if (this.pixelWidth > 0) {\r\n            renderedElement.style.flex = \"0 0 \" + this.pixelWidth + \"px\";\r\n        }\r\n        else {\r\n            if (typeof this.width === \"number\") {\r\n                renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : this.width) + \"%\";\r\n            }\r\n            else if (this.width === \"auto\") {\r\n                renderedElement.style.flex = \"0 1 auto\";\r\n            }\r\n            else {\r\n                renderedElement.style.flex = \"1 1 50px\";\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Column.prototype, \"separatorOrientation\", {\r\n        get: function () {\r\n            return Enums.Orientation.Vertical;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Column.prototype.getJsonTypeName = function () {\r\n        return \"Column\";\r\n    };\r\n    Column.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        var jsonWidth = json[\"width\"];\r\n        if (jsonWidth === undefined) {\r\n            jsonWidth = json[\"size\"];\r\n            if (jsonWidth !== undefined) {\r\n                raiseParseError({\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The \\\"Column.size\\\" property is deprecated and will be removed. Use the \\\"Column.width\\\" property instead.\"\r\n                });\r\n            }\r\n        }\r\n        var invalidWidth = false;\r\n        if (typeof jsonWidth === \"number\") {\r\n            if (jsonWidth <= 0) {\r\n                invalidWidth = true;\r\n            }\r\n        }\r\n        else if (typeof jsonWidth === \"string\") {\r\n            if (jsonWidth != \"auto\" && jsonWidth != \"stretch\") {\r\n                var sizeAsNumber = parseInt(jsonWidth);\r\n                if (!isNaN(sizeAsNumber)) {\r\n                    jsonWidth = sizeAsNumber;\r\n                }\r\n                else {\r\n                    invalidWidth = true;\r\n                }\r\n            }\r\n        }\r\n        else if (jsonWidth) {\r\n            invalidWidth = true;\r\n        }\r\n        if (invalidWidth) {\r\n            raiseParseError({\r\n                error: Enums.ValidationError.InvalidPropertyValue,\r\n                message: \"Invalid column width: \" + jsonWidth\r\n            });\r\n        }\r\n        else {\r\n            this.width = jsonWidth;\r\n        }\r\n    };\r\n    Object.defineProperty(Column.prototype, \"isStandalone\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Column;\r\n}(Container));\r\nexports.Column = Column;\r\nvar ColumnSet = /** @class */ (function (_super) {\r\n    __extends(ColumnSet, _super);\r\n    function ColumnSet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._columns = [];\r\n        return _this;\r\n    }\r\n    ColumnSet.prototype.applyPadding = function () {\r\n        if (this.padding) {\r\n            if (this.renderedElement) {\r\n                var physicalPadding = this.padding.toSpacingDefinition(this.hostConfig);\r\n                this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n                this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n                this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n            }\r\n        }\r\n    };\r\n    ColumnSet.prototype.internalRender = function () {\r\n        var _this = this;\r\n        if (this._columns.length > 0) {\r\n            var element = document.createElement(\"div\");\r\n            element.className = \"ac-columnSet\";\r\n            element.style.display = \"flex\";\r\n            if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                // See comment in Container.internalRender()\r\n                element.style.minHeight = '-webkit-min-content';\r\n            }\r\n            if (this.selectAction && this.hostConfig.supportsInteractivity) {\r\n                element.classList.add(\"ac-selectable\");\r\n                element.onclick = function (e) {\r\n                    _this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                };\r\n            }\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n            var totalWeight = 0;\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                if (typeof this._columns[i].width === \"number\") {\r\n                    totalWeight += this._columns[i].width;\r\n                }\r\n            }\r\n            var renderedColumnCount = 0;\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                if (typeof this._columns[i].width === \"number\" && totalWeight > 0) {\r\n                    var computedWeight = 100 / totalWeight * this._columns[i].width;\r\n                    // Best way to emulate \"internal\" access I know of\r\n                    this._columns[i][\"_computedWeight\"] = computedWeight;\r\n                }\r\n                var renderedColumn = this._columns[i].render();\r\n                if (renderedColumn) {\r\n                    if (renderedColumnCount > 0 && this._columns[i].separatorElement) {\r\n                        this._columns[i].separatorElement.style.flex = \"0 0 auto\";\r\n                        Utils.appendChild(element, this._columns[i].separatorElement);\r\n                    }\r\n                    Utils.appendChild(element, renderedColumn);\r\n                    renderedColumnCount++;\r\n                }\r\n            }\r\n            return renderedColumnCount > 0 ? element : null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ColumnSet.prototype.truncateOverflow = function (maxHeight) {\r\n        for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\r\n            var column = _a[_i];\r\n            column['handleOverflow'](maxHeight);\r\n        }\r\n        return true;\r\n    };\r\n    ColumnSet.prototype.undoOverflowTruncation = function () {\r\n        for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\r\n            var column = _a[_i];\r\n            column['resetOverflow']();\r\n        }\r\n    };\r\n    Object.defineProperty(ColumnSet.prototype, \"padding\", {\r\n        get: function () {\r\n            return this.getPadding();\r\n        },\r\n        set: function (value) {\r\n            this.setPadding(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ColumnSet.prototype.getJsonTypeName = function () {\r\n        return \"ColumnSet\";\r\n    };\r\n    ColumnSet.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        var selectActionJson = json[\"selectAction\"];\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson);\r\n        }\r\n        if (json[\"columns\"] != null) {\r\n            var jsonColumns = json[\"columns\"];\r\n            this._columns = [];\r\n            for (var i = 0; i < jsonColumns.length; i++) {\r\n                var column = new Column();\r\n                column.parse(jsonColumns[i]);\r\n                this.addColumn(column);\r\n            }\r\n        }\r\n    };\r\n    ColumnSet.prototype.validate = function () {\r\n        var result = [];\r\n        var weightedColumns = 0;\r\n        var stretchedColumns = 0;\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (typeof this._columns[i].width === \"number\") {\r\n                weightedColumns++;\r\n            }\r\n            else if (this._columns[i].width === \"stretch\") {\r\n                stretchedColumns++;\r\n            }\r\n            result = result.concat(this._columns[i].validate());\r\n        }\r\n        if (weightedColumns > 0 && stretchedColumns > 0) {\r\n            result.push({\r\n                error: Enums.ValidationError.Hint,\r\n                message: \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        this.applyPadding();\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                this._columns[i].updateLayout();\r\n            }\r\n        }\r\n    };\r\n    ColumnSet.prototype.addColumn = function (column) {\r\n        if (!column.parent) {\r\n            this._columns.push(column);\r\n            column.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This column already belongs to another ColumnSet.\");\r\n        }\r\n    };\r\n    ColumnSet.prototype.isLeftMostElement = function (element) {\r\n        return this._columns.indexOf(element) == 0;\r\n    };\r\n    ColumnSet.prototype.isRightMostElement = function (element) {\r\n        return this._columns.indexOf(element) == this._columns.length - 1;\r\n    };\r\n    ColumnSet.prototype.getAllInputs = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = result.concat(this._columns[i].getAllInputs());\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.getElementById = function (id) {\r\n        var result = _super.prototype.getElementById.call(this, id);\r\n        if (!result) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                result = this._columns[i].getElementById(id);\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.getActionById = function (id) {\r\n        var result = null;\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = this._columns[i].getActionById(id);\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        // render each item\r\n        var speak = '';\r\n        if (this._columns.length > 0) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                speak += this._columns[i].renderSpeech();\r\n            }\r\n        }\r\n        return speak;\r\n    };\r\n    Object.defineProperty(ColumnSet.prototype, \"selectAction\", {\r\n        get: function () {\r\n            return this._selectAction;\r\n        },\r\n        set: function (value) {\r\n            this._selectAction = value;\r\n            if (this._selectAction) {\r\n                this._selectAction.setParent(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColumnSet;\r\n}(CardElement));\r\nexports.ColumnSet = ColumnSet;\r\nvar Version = /** @class */ (function () {\r\n    function Version(major, minor) {\r\n        if (major === void 0) { major = 1; }\r\n        if (minor === void 0) { minor = 1; }\r\n        this._isValid = true;\r\n        this._major = major;\r\n        this._minor = minor;\r\n    }\r\n    Version.parse = function (versionString) {\r\n        if (!versionString) {\r\n            return null;\r\n        }\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n        return result;\r\n    };\r\n    Version.prototype.toString = function () {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    };\r\n    Object.defineProperty(Version.prototype, \"major\", {\r\n        get: function () {\r\n            return this._major;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Version.prototype, \"minor\", {\r\n        get: function () {\r\n            return this._minor;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Version.prototype, \"isValid\", {\r\n        get: function () {\r\n            return this._isValid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Version;\r\n}());\r\nexports.Version = Version;\r\nfunction raiseAnchorClickedEvent(element, anchor) {\r\n    var card = element.getRootElement();\r\n    var onAnchorClickedHandler = (card && card.onAnchorClicked) ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\r\n    return onAnchorClickedHandler != null ? onAnchorClickedHandler(card, anchor) : false;\r\n}\r\nfunction raiseExecuteActionEvent(action) {\r\n    var card = action.parent.getRootElement();\r\n    var onExecuteActionHandler = (card && card.onExecuteAction) ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\r\n    if (onExecuteActionHandler) {\r\n        action.prepare(action.parent.getRootElement().getAllInputs());\r\n        onExecuteActionHandler(action);\r\n    }\r\n}\r\nfunction raiseInlineCardExpandedEvent(action, isExpanded) {\r\n    var card = action.parent.getRootElement();\r\n    var onInlineCardExpandedHandler = (card && card.onInlineCardExpanded) ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\r\n    if (onInlineCardExpandedHandler) {\r\n        onInlineCardExpandedHandler(action, isExpanded);\r\n    }\r\n}\r\nfunction raiseElementVisibilityChangedEvent(element, shouldUpdateLayout) {\r\n    if (shouldUpdateLayout === void 0) { shouldUpdateLayout = true; }\r\n    var rootElement = element.getRootElement();\r\n    if (shouldUpdateLayout) {\r\n        rootElement.updateLayout();\r\n    }\r\n    var card = rootElement;\r\n    var onElementVisibilityChangedHandler = (card && card.onElementVisibilityChanged) ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\r\n    if (onElementVisibilityChangedHandler != null) {\r\n        onElementVisibilityChangedHandler(element);\r\n    }\r\n}\r\nfunction raiseParseElementEvent(element, json) {\r\n    var card = element.getRootElement();\r\n    var onParseElementHandler = (card && card.onParseElement) ? card.onParseElement : AdaptiveCard.onParseElement;\r\n    if (onParseElementHandler != null) {\r\n        onParseElementHandler(element, json);\r\n    }\r\n}\r\nfunction raiseParseError(error) {\r\n    if (AdaptiveCard.onParseError != null) {\r\n        AdaptiveCard.onParseError(error);\r\n    }\r\n}\r\nvar ContainerWithActions = /** @class */ (function (_super) {\r\n    __extends(ContainerWithActions, _super);\r\n    function ContainerWithActions() {\r\n        var _this = _super.call(this) || this;\r\n        _this._actionCollection = new ActionCollection(_this);\r\n        _this._actionCollection.onHideActionCardPane = function () { _this.showBottomSpacer(null); };\r\n        _this._actionCollection.onShowActionCardPane = function (action) { _this.hideBottomSpacer(null); };\r\n        return _this;\r\n    }\r\n    ContainerWithActions.prototype.internalRender = function () {\r\n        var element = _super.prototype.internalRender.call(this);\r\n        var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation);\r\n        if (renderedActions) {\r\n            Utils.appendChild(element, Utils.renderSeparation({\r\n                spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing),\r\n                lineThickness: null,\r\n                lineColor: null\r\n            }, Enums.Orientation.Horizontal));\r\n            Utils.appendChild(element, renderedActions);\r\n        }\r\n        return element.children.length > 0 ? element : null;\r\n    };\r\n    ContainerWithActions.prototype.getActionById = function (id) {\r\n        var result = this._actionCollection.getActionById(id);\r\n        return result ? result : _super.prototype.getActionById.call(this, id);\r\n    };\r\n    ContainerWithActions.prototype.parse = function (json, itemsCollectionPropertyName) {\r\n        if (itemsCollectionPropertyName === void 0) { itemsCollectionPropertyName = \"items\"; }\r\n        _super.prototype.parse.call(this, json, itemsCollectionPropertyName);\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"];\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                var action = createActionInstance(jsonActions[i]);\r\n                if (action != null) {\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ContainerWithActions.prototype.validate = function () {\r\n        var result = _super.prototype.validate.call(this);\r\n        if (this._actionCollection) {\r\n            result = result.concat(this._actionCollection.validate());\r\n        }\r\n        return result;\r\n    };\r\n    ContainerWithActions.prototype.isLastElement = function (element) {\r\n        return _super.prototype.isLastElement.call(this, element) && this._actionCollection.items.length == 0;\r\n    };\r\n    ContainerWithActions.prototype.addAction = function (action) {\r\n        this._actionCollection.addAction(action);\r\n    };\r\n    ContainerWithActions.prototype.clear = function () {\r\n        _super.prototype.clear.call(this);\r\n        this._actionCollection.clear();\r\n    };\r\n    ContainerWithActions.prototype.getAllInputs = function () {\r\n        return _super.prototype.getAllInputs.call(this).concat(this._actionCollection.getAllInputs());\r\n    };\r\n    Object.defineProperty(ContainerWithActions.prototype, \"isStandalone\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContainerWithActions;\r\n}(Container));\r\nexports.ContainerWithActions = ContainerWithActions;\r\nvar TypeRegistry = /** @class */ (function () {\r\n    function TypeRegistry() {\r\n        this._items = [];\r\n        this.reset();\r\n    }\r\n    TypeRegistry.prototype.findTypeRegistration = function (typeName) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                return this._items[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    TypeRegistry.prototype.clear = function () {\r\n        this._items = [];\r\n    };\r\n    TypeRegistry.prototype.registerType = function (typeName, createInstance) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n        if (registrationInfo != null) {\r\n            registrationInfo.createInstance = createInstance;\r\n        }\r\n        else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                createInstance: createInstance\r\n            };\r\n            this._items.push(registrationInfo);\r\n        }\r\n    };\r\n    TypeRegistry.prototype.unregisterType = function (typeName) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                this._items.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    TypeRegistry.prototype.createInstance = function (typeName) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n        return registrationInfo ? registrationInfo.createInstance() : null;\r\n    };\r\n    return TypeRegistry;\r\n}());\r\nexports.TypeRegistry = TypeRegistry;\r\nvar ElementTypeRegistry = /** @class */ (function (_super) {\r\n    __extends(ElementTypeRegistry, _super);\r\n    function ElementTypeRegistry() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ElementTypeRegistry.prototype.reset = function () {\r\n        this.clear();\r\n        this.registerType(\"Container\", function () { return new Container(); });\r\n        this.registerType(\"TextBlock\", function () { return new TextBlock(); });\r\n        this.registerType(\"Image\", function () { return new Image(); });\r\n        this.registerType(\"ImageSet\", function () { return new ImageSet(); });\r\n        this.registerType(\"FactSet\", function () { return new FactSet(); });\r\n        this.registerType(\"ColumnSet\", function () { return new ColumnSet(); });\r\n        this.registerType(\"Input.Text\", function () { return new TextInput(); });\r\n        this.registerType(\"Input.Date\", function () { return new DateInput(); });\r\n        this.registerType(\"Input.Time\", function () { return new TimeInput(); });\r\n        this.registerType(\"Input.Number\", function () { return new NumberInput(); });\r\n        this.registerType(\"Input.ChoiceSet\", function () { return new ChoiceSetInput(); });\r\n        this.registerType(\"Input.Toggle\", function () { return new ToggleInput(); });\r\n    };\r\n    return ElementTypeRegistry;\r\n}(TypeRegistry));\r\nexports.ElementTypeRegistry = ElementTypeRegistry;\r\nvar ActionTypeRegistry = /** @class */ (function (_super) {\r\n    __extends(ActionTypeRegistry, _super);\r\n    function ActionTypeRegistry() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ActionTypeRegistry.prototype.reset = function () {\r\n        this.clear();\r\n        this.registerType(\"Action.OpenUrl\", function () { return new OpenUrlAction(); });\r\n        this.registerType(\"Action.Submit\", function () { return new SubmitAction(); });\r\n        this.registerType(\"Action.ShowCard\", function () { return new ShowCardAction(); });\r\n    };\r\n    return ActionTypeRegistry;\r\n}(TypeRegistry));\r\nexports.ActionTypeRegistry = ActionTypeRegistry;\r\nvar AdaptiveCard = /** @class */ (function (_super) {\r\n    __extends(AdaptiveCard, _super);\r\n    function AdaptiveCard() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._cardTypeName = \"AdaptiveCard\";\r\n        _this.onAnchorClicked = null;\r\n        _this.onExecuteAction = null;\r\n        _this.onElementVisibilityChanged = null;\r\n        _this.onInlineCardExpanded = null;\r\n        _this.onParseElement = null;\r\n        _this.version = new Version(1, 0);\r\n        return _this;\r\n    }\r\n    AdaptiveCard.prototype.isVersionSupported = function () {\r\n        if (this.bypassVersionCheck) {\r\n            return true;\r\n        }\r\n        else {\r\n            var unsupportedVersion = !this.version ||\r\n                (AdaptiveCard.currentVersion.major < this.version.major) ||\r\n                (AdaptiveCard.currentVersion.major == this.version.major && AdaptiveCard.currentVersion.minor < this.version.minor);\r\n            return !unsupportedVersion;\r\n        }\r\n    };\r\n    AdaptiveCard.prototype.showBottomSpacer = function (requestingElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            this.applyPadding();\r\n            // Do not walk up the tree from an AdaptiveCard instance\r\n        }\r\n    };\r\n    AdaptiveCard.prototype.hideBottomSpacer = function (requestingElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            if (this.renderedElement) {\r\n                this.renderedElement.style.paddingBottom = \"0px\";\r\n            }\r\n            // Do not walk up the tree from an AdaptiveCard instance\r\n        }\r\n    };\r\n    AdaptiveCard.prototype.applyPadding = function () {\r\n        var effectivePadding = this.padding ? this.padding.toSpacingDefinition(this.hostConfig) : this.internalPadding.toSpacingDefinition(this.hostConfig);\r\n        this.renderedElement.style.paddingTop = effectivePadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = effectivePadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = effectivePadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = effectivePadding.left + \"px\";\r\n    };\r\n    AdaptiveCard.prototype.internalRender = function () {\r\n        var renderedElement = _super.prototype.internalRender.call(this);\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Unlike containers, the root card element should be allowed to\r\n            // be shorter than its content (otherwise the overflow truncation\r\n            // logic would never get triggered)\r\n            renderedElement.style.minHeight = null;\r\n        }\r\n        return renderedElement;\r\n    };\r\n    Object.defineProperty(AdaptiveCard.prototype, \"bypassVersionCheck\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"defaultPadding\", {\r\n        get: function () {\r\n            return new PaddingDefinition(Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"allowCustomPadding\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"allowCustomStyle\", {\r\n        get: function () {\r\n            return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"hasBackground\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AdaptiveCard.prototype.getJsonTypeName = function () {\r\n        return \"AdaptiveCard\";\r\n    };\r\n    AdaptiveCard.prototype.validate = function () {\r\n        var result = [];\r\n        if (this._cardTypeName != \"AdaptiveCard\") {\r\n            result.push({\r\n                error: Enums.ValidationError.MissingCardType,\r\n                message: \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\"\r\n            });\r\n        }\r\n        if (!this.bypassVersionCheck && (!this.version || !this.version.isValid)) {\r\n            result.push({\r\n                error: Enums.ValidationError.PropertyCantBeNull,\r\n                message: !this.version ? \"The version property must be specified.\" : \"Invalid version: \" + this.version\r\n            });\r\n        }\r\n        else if (!this.isVersionSupported()) {\r\n            result.push({\r\n                error: Enums.ValidationError.UnsupportedCardVersion,\r\n                message: \"The specified card version (\" + this.version + \") is not supported. The maximum supported card version is \" + AdaptiveCard.currentVersion\r\n            });\r\n        }\r\n        return result.concat(_super.prototype.validate.call(this));\r\n    };\r\n    AdaptiveCard.prototype.parse = function (json) {\r\n        this._cardTypeName = json[\"type\"];\r\n        var langId = json[\"lang\"];\r\n        if (langId && typeof langId === \"string\") {\r\n            try {\r\n                this.lang = langId;\r\n            }\r\n            catch (e) {\r\n                raiseParseError({\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: e.message\r\n                });\r\n            }\r\n        }\r\n        this.version = Version.parse(json[\"version\"]);\r\n        this.fallbackText = json[\"fallbackText\"];\r\n        _super.prototype.parse.call(this, json, \"body\");\r\n    };\r\n    AdaptiveCard.prototype.render = function (target) {\r\n        var renderedCard;\r\n        if (!this.isVersionSupported()) {\r\n            renderedCard = document.createElement(\"div\");\r\n            renderedCard.innerHTML = this.fallbackText ? this.fallbackText : \"The specified card version is not supported.\";\r\n        }\r\n        else {\r\n            renderedCard = _super.prototype.render.call(this);\r\n            if (renderedCard) {\r\n                renderedCard.tabIndex = 0;\r\n                if (!Utils.isNullOrEmpty(this.speak)) {\r\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\r\n                }\r\n            }\r\n        }\r\n        if (target) {\r\n            target.appendChild(renderedCard);\r\n            this.updateLayout();\r\n        }\r\n        return renderedCard;\r\n    };\r\n    AdaptiveCard.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        _super.prototype.updateLayout.call(this, processChildren);\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && this.isRendered()) {\r\n            var card = this.renderedElement;\r\n            var padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\r\n            this['handleOverflow'](card.offsetHeight - padding);\r\n        }\r\n    };\r\n    AdaptiveCard.prototype.canContentBleed = function () {\r\n        return true;\r\n    };\r\n    AdaptiveCard.currentVersion = new Version(1, 0);\r\n    AdaptiveCard.useAutomaticContainerBleeding = false;\r\n    AdaptiveCard.preExpandSingleShowCardAction = false;\r\n    AdaptiveCard.useAdvancedTextBlockTruncation = true;\r\n    AdaptiveCard.useAdvancedCardBottomTruncation = false;\r\n    AdaptiveCard.useMarkdownInRadioButtonAndCheckbox = true;\r\n    AdaptiveCard.elementTypeRegistry = new ElementTypeRegistry();\r\n    AdaptiveCard.actionTypeRegistry = new ActionTypeRegistry();\r\n    AdaptiveCard.onAnchorClicked = null;\r\n    AdaptiveCard.onExecuteAction = null;\r\n    AdaptiveCard.onElementVisibilityChanged = null;\r\n    AdaptiveCard.onInlineCardExpanded = null;\r\n    AdaptiveCard.onParseElement = null;\r\n    AdaptiveCard.onParseError = null;\r\n    AdaptiveCard.processMarkdown = function (text) {\r\n        // Check for markdownit\r\n        if (window[\"markdownit\"]) {\r\n            return window[\"markdownit\"]().render(text);\r\n        }\r\n        return text;\r\n    };\r\n    return AdaptiveCard;\r\n}(ContainerWithActions));\r\nexports.AdaptiveCard = AdaptiveCard;\r\nvar InlineAdaptiveCard = /** @class */ (function (_super) {\r\n    __extends(InlineAdaptiveCard, _super);\r\n    function InlineAdaptiveCard() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.suppressStyle = false;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(InlineAdaptiveCard.prototype, \"bypassVersionCheck\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InlineAdaptiveCard.prototype, \"defaultPadding\", {\r\n        get: function () {\r\n            return new PaddingDefinition(this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding, Enums.Spacing.Padding, this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding, Enums.Spacing.Padding);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InlineAdaptiveCard.prototype, \"defaultStyle\", {\r\n        get: function () {\r\n            if (this.suppressStyle) {\r\n                return Enums.ContainerStyle.Default;\r\n            }\r\n            else {\r\n                return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    InlineAdaptiveCard.prototype.render = function (target) {\r\n        var renderedCard = _super.prototype.render.call(this, target);\r\n        renderedCard.setAttribute(\"aria-live\", \"polite\");\r\n        renderedCard.removeAttribute(\"tabindex\");\r\n        return renderedCard;\r\n    };\r\n    InlineAdaptiveCard.prototype.getForbiddenActionTypes = function () {\r\n        return [ShowCardAction];\r\n    };\r\n    return InlineAdaptiveCard;\r\n}(AdaptiveCard));\r\nvar defaultHostConfig = new HostConfig.HostConfig({\r\n    supportsInteractivity: true,\r\n    fontFamily: \"Segoe UI\",\r\n    spacing: {\r\n        small: 10,\r\n        default: 20,\r\n        medium: 30,\r\n        large: 40,\r\n        extraLarge: 50,\r\n        padding: 20\r\n    },\r\n    separator: {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    },\r\n    fontSizes: {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    },\r\n    fontWeights: {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    },\r\n    imageSizes: {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    },\r\n    containerStyles: {\r\n        default: {\r\n            backgroundColor: \"#FFFFFF\",\r\n            foregroundColors: {\r\n                default: {\r\n                    default: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                dark: {\r\n                    default: \"#000000\",\r\n                    subtle: \"#66000000\"\r\n                },\r\n                light: {\r\n                    default: \"#FFFFFF\",\r\n                    subtle: \"#33000000\"\r\n                },\r\n                accent: {\r\n                    default: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    default: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    default: \"#54a254\",\r\n                    subtle: \"#DD54a254\"\r\n                },\r\n                warning: {\r\n                    default: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        },\r\n        emphasis: {\r\n            backgroundColor: \"#08000000\",\r\n            foregroundColors: {\r\n                default: {\r\n                    default: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                dark: {\r\n                    default: \"#000000\",\r\n                    subtle: \"#66000000\"\r\n                },\r\n                light: {\r\n                    default: \"#FFFFFF\",\r\n                    subtle: \"#33000000\"\r\n                },\r\n                accent: {\r\n                    default: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    default: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    default: \"#54a254\",\r\n                    subtle: \"#DD54a254\"\r\n                },\r\n                warning: {\r\n                    default: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    actions: {\r\n        maxActions: 5,\r\n        spacing: Enums.Spacing.Default,\r\n        buttonSpacing: 10,\r\n        showCard: {\r\n            actionMode: Enums.ShowCardActionMode.Inline,\r\n            inlineTopMargin: 16\r\n        },\r\n        actionsOrientation: Enums.Orientation.Horizontal,\r\n        actionAlignment: Enums.ActionAlignment.Left\r\n    },\r\n    adaptiveCard: {\r\n        allowCustomStyle: false\r\n    },\r\n    imageSet: {\r\n        imageSize: Enums.Size.Medium,\r\n        maxImageHeight: 100\r\n    },\r\n    factSet: {\r\n        title: {\r\n            color: Enums.TextColor.Default,\r\n            size: Enums.TextSize.Default,\r\n            isSubtle: false,\r\n            weight: Enums.TextWeight.Bolder,\r\n            wrap: true,\r\n            maxWidth: 150,\r\n        },\r\n        value: {\r\n            color: Enums.TextColor.Default,\r\n            size: Enums.TextSize.Default,\r\n            isSubtle: false,\r\n            weight: Enums.TextWeight.Default,\r\n            wrap: true,\r\n        },\r\n        spacing: 10\r\n    }\r\n});\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AbstractTextFormatter = /** @class */ (function () {\r\n    function AbstractTextFormatter(regularExpression) {\r\n        this._regularExpression = regularExpression;\r\n    }\r\n    AbstractTextFormatter.prototype.format = function (lang, input) {\r\n        var matches;\r\n        var result = input;\r\n        while ((matches = this._regularExpression.exec(input)) != null) {\r\n            result = result.replace(matches[0], this.internalFormat(lang, matches));\r\n        }\r\n        ;\r\n        return result;\r\n    };\r\n    return AbstractTextFormatter;\r\n}());\r\nvar DateFormatter = /** @class */ (function (_super) {\r\n    __extends(DateFormatter, _super);\r\n    function DateFormatter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DateFormatter.prototype.internalFormat = function (lang, matches) {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        var format = matches[2] != undefined ? matches[2].toLowerCase() : \"compact\";\r\n        if (format != \"compact\") {\r\n            return date.toLocaleDateString(lang, { day: \"numeric\", weekday: format, month: format, year: \"numeric\" });\r\n        }\r\n        else {\r\n            return date.toLocaleDateString();\r\n        }\r\n    };\r\n    return DateFormatter;\r\n}(AbstractTextFormatter));\r\nvar TimeFormatter = /** @class */ (function (_super) {\r\n    __extends(TimeFormatter, _super);\r\n    function TimeFormatter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeFormatter.prototype.internalFormat = function (lang, matches) {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        return date.toLocaleTimeString(lang, { hour: 'numeric', minute: '2-digit' });\r\n    };\r\n    return TimeFormatter;\r\n}(AbstractTextFormatter));\r\nfunction formatText(lang, text) {\r\n    var formatters = [\r\n        new DateFormatter(/\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g),\r\n        new TimeFormatter(/\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g)\r\n    ];\r\n    var result = text;\r\n    for (var i = 0; i < formatters.length; i++) {\r\n        result = formatters[i].format(lang, result);\r\n    }\r\n    return result;\r\n}\r\nexports.formatText = formatText;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// adaptivecards.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 64e86f64d425f759044c","export enum Size {\r\n    Auto,\r\n    Stretch,\r\n    Small,\r\n    Medium,\r\n    Large\r\n}\r\n\r\nexport enum TextSize {\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge\r\n}\r\n\r\nexport enum Spacing {\r\n    None,\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge,\r\n    Padding\r\n}\r\n\r\nexport enum TextWeight {\r\n    Lighter,\r\n    Default,\r\n    Bolder\r\n}\r\n\r\nexport enum TextColor {\r\n    Default,\r\n    Dark,\r\n    Light,\r\n    Accent,\r\n    Good,\r\n    Warning,\r\n    Attention\r\n}\r\n\r\nexport enum HorizontalAlignment {\r\n    Left,\r\n    Center,\r\n    Right\r\n}\r\n\r\nexport enum VerticalAlignment {\r\n    Top,\r\n    Center,\r\n    Bottom\r\n}\r\n\r\nexport enum ActionAlignment {\r\n    Left,\r\n    Center,\r\n    Right,\r\n    Stretch\r\n}\r\n\r\nexport enum ImageStyle {\r\n    Default,\r\n    Person\r\n}\r\n\r\nexport enum ShowCardActionMode {\r\n    Inline,\r\n    Popup\r\n}\r\n\r\nexport enum Orientation {\r\n    Horizontal,\r\n    Vertical\r\n}\r\n\r\nexport enum BackgroundImageMode {\r\n    Stretch,\r\n    RepeatHorizontally,\r\n    RepeatVertically,\r\n    Repeat\r\n}\r\n\r\nexport enum ContainerStyle {\r\n    Default = \"default\",\r\n    Emphasis = \"emphasis\"\r\n}\r\n\r\nexport enum ValidationError {\r\n    Hint,\r\n    ActionTypeNotAllowed,\r\n    CollectionCantBeEmpty,\r\n    Deprecated,\r\n    ElementTypeNotAllowed,\r\n    InteractivityNotAllowed,\r\n    InvalidPropertyValue,\r\n    MissingCardType,\r\n    PropertyCantBeNull,\r\n    TooManyActions,\r\n    UnknownActionType,\r\n    UnknownElementType,\r\n    UnsupportedCardVersion\r\n}\r\n\r\nexport enum ContainerFitStatus {\r\n    FullyInContainer,\r\n    Overflowing,\r\n    FullyOutOfContainer\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/enums.ts","import * as Enums from \"./enums\";\r\nimport * as HostConfig from \"./host-config\";\r\n\r\nexport const ContentTypes = {\r\n    applicationJson : \"application/json\",\r\n    applicationXWwwFormUrlencoded : \"application/x-www-form-urlencoded\"\r\n}\r\n\r\nexport interface ISeparationDefinition {\r\n    spacing: number,\r\n    lineThickness?: number,\r\n    lineColor?: string\r\n}\r\n\r\nexport interface IInput {\r\n    id: string;\r\n    value: string;\r\n}\r\n\r\nexport function getValueOrDefault<T>(obj: any, defaultValue: T): T {\r\n    return obj ? <T>obj : defaultValue;\r\n}\r\n\r\nexport function isNullOrEmpty(value: string): boolean {\r\n    return value === undefined || value === null || value === \"\";\r\n}\r\n\r\nexport function appendChild(node: Node, child: Node) {\r\n    if (child != null && child != undefined) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\n\r\nexport function getEnumValueOrDefault(targetEnum: { [s: number]: string }, name: string, defaultValue: number): number {\r\n    if (isNullOrEmpty(name)) {\r\n        return defaultValue;\r\n    }\r\n\r\n    for (var key in targetEnum) {\r\n        let isValueProperty = parseInt(key, 10) >= 0\r\n\r\n        if (isValueProperty) {\r\n            let value = targetEnum[key];\r\n\r\n            if (value && typeof value === \"string\") {\r\n                if (value.toLowerCase() === name.toLowerCase()) {\r\n                    return parseInt(key, 10);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function parseHostConfigEnum(targetEnum: { [s: number]: string }, value: string | number, defaultValue: any): any {\r\n    if (typeof value === \"string\") {\r\n        return getEnumValueOrDefault(targetEnum, value, defaultValue);\r\n    } else if (typeof value === \"number\") {\r\n        return getValueOrDefault<typeof targetEnum>(value, defaultValue);\r\n    } else {\r\n        return defaultValue;\r\n    }\r\n}\r\n\r\nexport function renderSeparation(separationDefinition: ISeparationDefinition, orientation: Enums.Orientation): HTMLElement {\r\n    if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\r\n        var separator = document.createElement(\"div\");\r\n\r\n        if (orientation == Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderTop = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderLeft = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n\r\n        separator.style.overflow = \"hidden\";\r\n\r\n        return separator;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function stringToCssColor(color: string): string {\r\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n\r\n    var matches = regEx.exec(color);\r\n\r\n    if (matches && matches[4]) {\r\n        var a = parseInt(matches[1], 16) / 255;\r\n        var r = parseInt(matches[2], 16);\r\n        var g = parseInt(matches[3], 16);\r\n        var b = parseInt(matches[4], 16);\r\n\r\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport class StringWithSubstitutions {\r\n    private _isProcessed: boolean = false;\r\n    private _original: string = null;\r\n    private _processed: string = null;\r\n\r\n    substituteInputValues(inputs: Array<IInput>, contentType: string) {\r\n        this._processed = this._original;\r\n\r\n        var regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n        var matches;\r\n\r\n        while ((matches = regEx.exec(this._original)) != null) {\r\n            var matchedInput: IInput = null;\r\n\r\n            for (var i = 0; i < inputs.length; i++) {\r\n                if (inputs[i].id.toLowerCase() == matches[1].toLowerCase()) {\r\n                    matchedInput = inputs[i];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (matchedInput) {\r\n                var valueForReplace = \"\";\r\n\r\n                if (matchedInput.value) {\r\n                    valueForReplace = matchedInput.value;\r\n                }\r\n\r\n                if (contentType === ContentTypes.applicationJson) {\r\n                    valueForReplace = JSON.stringify(valueForReplace);\r\n                    valueForReplace = valueForReplace.slice(1, -1);\r\n                }\r\n                else if (contentType === ContentTypes.applicationXWwwFormUrlencoded) {\r\n                    valueForReplace = encodeURIComponent(valueForReplace);\r\n                }\r\n\r\n                this._processed = this._processed.replace(matches[0], valueForReplace);\r\n            }\r\n        };\r\n\r\n        this._isProcessed = true;\r\n    }\r\n\r\n    get(): string {\r\n        if (!this._isProcessed) {\r\n            return this._original;\r\n        }\r\n        else {\r\n            return this._processed;\r\n        }\r\n    }\r\n\r\n    set(value: string) {\r\n        this._original = value;\r\n        this._isProcessed = false;\r\n    }\r\n}\r\n\r\nexport function truncate(element: HTMLElement,\r\n                         maxHeight: number,\r\n                         lineHeight?: number) {\r\n    var fits = () => {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n\r\n    if (fits()) return;\r\n\r\n    var fullText = element.innerHTML;\r\n    var truncateAt = (idx) => {\r\n        element.innerHTML = fullText.substring(0, idx) + '...';\r\n    }\r\n\r\n    var breakableIndices = findBreakableIndices(fullText);\r\n    var lo = 0;\r\n    var hi = breakableIndices.length;\r\n    var bestBreakIdx = 0;\r\n\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        var mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(breakableIndices[mid]);\r\n\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        }\r\n        else {\r\n            hi = mid;\r\n        }\r\n    }\r\n\r\n    truncateAt(bestBreakIdx);\r\n\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        let idx = findNextCharacter(fullText, bestBreakIdx);\r\n\r\n        while (idx < fullText.length) {\r\n            truncateAt(idx);\r\n\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        truncateAt(bestBreakIdx);\r\n    }\r\n}\r\n\r\nfunction findBreakableIndices(html: string): Array<number> {\r\n    var results: Array<number> = [];\r\n    var idx = findNextCharacter(html, -1);\r\n\r\n    while (idx < html.length) {\r\n        if (html[idx] == ' ') {\r\n            results.push(idx);\r\n        }\r\n\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\nfunction findNextCharacter(html: string, currIdx: number): number {\r\n    currIdx += 1;\r\n\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] == '<') {\r\n        while (currIdx < html.length && html[currIdx++] != '>');\r\n    }\r\n\r\n    return currIdx;\r\n}\r\n\r\nexport function getFitStatus(element: HTMLElement, containerEnd: number): Enums.ContainerFitStatus {\r\n    var start = element.offsetTop;\r\n    var end = start + element.clientHeight;\r\n\r\n    if (end <= containerEnd) {\r\n        return Enums.ContainerFitStatus.FullyInContainer;\r\n    }\r\n    else if (start < containerEnd) {\r\n        return Enums.ContainerFitStatus.Overflowing;\r\n    }\r\n    else {\r\n        return Enums.ContainerFitStatus.FullyOutOfContainer;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.ts","import * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport { TextColor } from \"./adaptivecards\";\r\n\r\nexport class TextColorDefinition {\r\n    default: string = \"#000000\";\r\n    subtle: string = \"#666666\";\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.default = obj[\"default\"] || this.default;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class AdaptiveCardConfig {\r\n    allowCustomStyle: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSetConfig {\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n    maxImageHeight: number = 100;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.getValueOrDefault<number>(obj[\"maxImageHeight\"], 100);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTextDefinition {\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;;\r\n    isSubtle: boolean = false;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    wrap: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\r\n            this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\r\n            this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\r\n            this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Default);\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n\r\n    toJSON(): any {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight],\r\n            warp: this.wrap\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTitleDefinition extends FactTextDefinition {\r\n    maxWidth?: number = 150;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Bolder;\r\n\r\n    constructor(obj?: any) {\r\n        super(obj);\r\n\r\n        if (obj) {\r\n            this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : this.maxWidth;\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactSetConfig {\r\n    readonly title: FactTitleDefinition = new FactTitleDefinition();\r\n    readonly value: FactTextDefinition = new FactTextDefinition();\r\n    spacing: number = 10;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ShowCardActionConfig {\r\n    actionMode: Enums.ShowCardActionMode = Enums.ShowCardActionMode.Inline;\r\n    inlineTopMargin: number = 16;\r\n    style?: string = Enums.ContainerStyle.Emphasis;\r\n    \r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\r\n            this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style = obj[\"style\"] && typeof obj[\"style\"] === \"string\" ? obj[\"style\"] : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: this.style\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionsConfig {\r\n    maxActions: number = 5;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    buttonSpacing: number = 20;\r\n    readonly showCard: ShowCardActionConfig = new ShowCardActionConfig();\r\n    preExpandSingleShowCardAction?: boolean = false;\r\n    actionsOrientation: Enums.Orientation = Enums.Orientation.Horizontal;\r\n    actionAlignment: Enums.ActionAlignment = Enums.ActionAlignment.Left;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\r\n            this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.getValueOrDefault<boolean>(obj[\"preExpandSingleShowCardAction\"], false);\r\n            this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\r\n            this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        }\r\n    }\r\n}\r\n\r\nexport class ContainerStyleDefinition {\r\n    private getTextColorDefinitionOrDefault(obj: any, defaultValue: { default: string, subtle: string }) {\r\n        return new TextColorDefinition(obj ? obj : defaultValue);\r\n    }\r\n\r\n    backgroundColor?: string;\r\n\r\n    readonly foregroundColors = {\r\n        default: new TextColorDefinition(),\r\n        dark: new TextColorDefinition(),\r\n        light: new TextColorDefinition(),\r\n        accent: new TextColorDefinition(),\r\n        good: new TextColorDefinition(),\r\n        warning: new TextColorDefinition(),\r\n        attention: new TextColorDefinition()\r\n    };\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n\r\n            if (obj.foregroundColors) {\r\n                this.foregroundColors.default = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"default\"], { default: \"#333333\", subtle: \"#EE333333\" });\r\n                this.foregroundColors.dark = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"dark\"], { default: \"#000000\", subtle: \"#66000000\" });\r\n                this.foregroundColors.light = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"light\"], { default: \"#FFFFFF\", subtle: \"#33000000\" });\r\n                this.foregroundColors.accent = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"accent\"], { default: \"#2E89FC\", subtle: \"#882E89FC\" });\r\n                this.foregroundColors.good = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"good\"], { default: \"#54A254\", subtle: \"#DD54A254\" });\r\n                this.foregroundColors.warning = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"warning\"], { default: \"#E69500\", subtle: \"#DDE69500\" });\r\n                this.foregroundColors.attention = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"attention\"], { default: \"#CC3300\", subtle: \"#DDCC3300\" });\r\n            }\r\n        }        \r\n    }\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n    \r\n    get isBuiltIn(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass BuiltInContainerStyleDefinition extends ContainerStyleDefinition {\r\n    get isBuiltIn(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class ContainerStyleSet {\r\n    private _allStyles: object = {};\r\n\r\n    constructor(obj?: any) {\r\n        this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\r\n\r\n        if (obj) {\r\n            this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\r\n            this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]);\r\n\r\n            const customStyleArray = obj[\"customStyles\"];\r\n\r\n            if (customStyleArray && Array.isArray(customStyleArray)) {\r\n                for (var customStyle of customStyleArray) {\r\n                    if (customStyle) {\r\n                        var styleName = customStyle[\"name\"];\r\n\r\n                        if (styleName && typeof styleName === \"string\") {\r\n                            if (this._allStyles.hasOwnProperty(styleName)) {\r\n                                this._allStyles[styleName].parse(customStyle[\"style\"]);\r\n                            }\r\n                            else {\r\n                                this._allStyles[styleName] = new ContainerStyleDefinition(customStyle[\"style\"]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        var customStyleArray: Array<any> = [];\r\n\r\n        Object.keys(this._allStyles).forEach(\r\n            (key) => {\r\n                if (!this._allStyles[key].isBuiltIn) {\r\n                    customStyleArray.push({\r\n                        name: key,\r\n                        style: this._allStyles[key]\r\n                    });\r\n                }\r\n            });\r\n\r\n        var result: any = {\r\n            default: this.default,\r\n            emphasis: this.emphasis\r\n        }\r\n\r\n        if (customStyleArray.length > 0) {\r\n            result.customStyles = customStyleArray;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getStyleByName(name: string, defaultValue: ContainerStyleDefinition = null): ContainerStyleDefinition {\r\n        return this._allStyles.hasOwnProperty(name) ? this._allStyles[name] : defaultValue;\r\n    }\r\n\r\n    get default(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Default];\r\n    }\r\n\r\n    get emphasis(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Emphasis];\r\n    }\r\n}\r\n\r\nexport class HostConfig {\r\n    choiceSetInputValueSeparator: string = \",\";\r\n    supportsInteractivity: boolean = true;\r\n\r\n    fontFamily?: string = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n    \r\n    readonly spacing = {\r\n        small: 3,\r\n        default: 8,\r\n        medium: 20,\r\n        large: 30,\r\n        extraLarge: 40,\r\n        padding: 15\r\n    };\r\n\r\n    readonly separator = {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    };\r\n\r\n    readonly fontSizes = {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    };\r\n    readonly fontWeights = {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    };\r\n    readonly imageSizes = {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    };\r\n\r\n    readonly containerStyles: ContainerStyleSet = new ContainerStyleSet();\r\n    readonly actions: ActionsConfig = new ActionsConfig();\r\n    readonly adaptiveCard: AdaptiveCardConfig = new AdaptiveCardConfig();\r\n    readonly imageSet: ImageSetConfig = new ImageSetConfig();\r\n    readonly factSet: FactSetConfig = new FactSetConfig();\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj as string);\r\n            }\r\n\r\n            this.choiceSetInputValueSeparator = (obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\") ? obj[\"choiceSetInputValueSeparator\"] : this.choiceSetInputValueSeparator;\r\n            this.supportsInteractivity = (obj && typeof obj[\"supportsInteractivity\"] === \"boolean\") ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\r\n            this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n            this.fontSizes = {\r\n                small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\r\n                default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\r\n                medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\r\n                large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\r\n                extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\r\n            };\r\n\r\n            this.fontWeights = {\r\n                lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\r\n                default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\r\n                bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\r\n            };\r\n\r\n            this.imageSizes = {\r\n                small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\r\n                medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\r\n                large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large,\r\n            };\r\n\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\r\n                default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\r\n                medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\r\n                large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\r\n                extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\r\n                padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\r\n            };\r\n\r\n            this.separator = {\r\n                lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\r\n                lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\r\n            }\r\n\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"])\r\n        }\r\n    }\r\n\r\n    getEffectiveSpacing(spacing: Enums.Spacing): number {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/host-config.ts","export * from \"./card-elements\";\r\nexport * from \"./enums\";\r\nexport * from \"./host-config\";\r\nexport { getEnumValueOrDefault } from \"./utils\";\r\nexport { IAdaptiveCard, ICardElement } from \"./schema\";\n\n\n// WEBPACK FOOTER //\n// ./src/adaptivecards.ts","import * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport * as HostConfig from \"./host-config\";\r\nimport * as TextFormatters from \"./text-formatters\";\r\nimport { IAdaptiveCard } from \"./schema\";\r\n\r\nfunction invokeSetCollection(action: Action, collection: ActionCollection) {\r\n    if (action) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        action[\"setCollection\"](collection);\r\n    }\r\n}\r\n\r\nfunction isActionAllowed(action: Action, forbiddenActionTypes: Array<string>): boolean {\r\n    if (forbiddenActionTypes) {\r\n        for (var i = 0; i < forbiddenActionTypes.length; i++) {\r\n            if (action.getJsonTypeName() === forbiddenActionTypes[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function createActionInstance(json: any): Action {\r\n    var actionType = json[\"type\"];\r\n\r\n    var result = AdaptiveCard.actionTypeRegistry.createInstance(actionType);\r\n\r\n    if (result) {\r\n        result.parse(json);\r\n    }\r\n    else {\r\n        raiseParseError(\r\n            {\r\n                error: Enums.ValidationError.UnknownActionType,\r\n                message: \"Unknown action type: \" + actionType\r\n            });\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport class SpacingDefinition {\r\n    left: number = 0;\r\n    top: number = 0;\r\n    right: number = 0;\r\n    bottom: number = 0;\r\n\r\n    constructor(top: number = 0,\r\n                right: number = 0,\r\n                bottom: number = 0,\r\n                left: number = 0) {\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n    }\r\n}\r\n\r\nexport class PaddingDefinition {\r\n    top: Enums.Spacing = Enums.Spacing.None;\r\n    right: Enums.Spacing = Enums.Spacing.None;\r\n    bottom: Enums.Spacing = Enums.Spacing.None;\r\n    left: Enums.Spacing = Enums.Spacing.None;\r\n\r\n    constructor(top: Enums.Spacing = Enums.Spacing.None,\r\n                right: Enums.Spacing = Enums.Spacing.None,\r\n                bottom: Enums.Spacing = Enums.Spacing.None,\r\n                left: Enums.Spacing = Enums.Spacing.None) {\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n    }\r\n\r\n    toSpacingDefinition(hostConfig: HostConfig.HostConfig): SpacingDefinition {\r\n        return new SpacingDefinition(\r\n            hostConfig.getEffectiveSpacing(this.top),\r\n            hostConfig.getEffectiveSpacing(this.right),\r\n            hostConfig.getEffectiveSpacing(this.bottom),\r\n            hostConfig.getEffectiveSpacing(this.left));\r\n    }\r\n}\r\n\r\nexport interface IValidationError {\r\n    error: Enums.ValidationError,\r\n    message: string;\r\n}\r\n\r\nexport abstract class CardElement {\r\n    private _lang: string = undefined;\r\n    private _hostConfig?: HostConfig.HostConfig = null;\r\n    private _internalPadding: PaddingDefinition = null;\r\n    private _parent: CardElement = null;\r\n    private _renderedElement: HTMLElement = null;\r\n    private _separatorElement: HTMLElement = null;\r\n    private _rootCard: AdaptiveCard;\r\n    private _isVisible: boolean = true;\r\n    private _truncatedDueToOverflow: boolean = false;\r\n    private _defaultRenderedElementDisplayMode: string = null;\r\n    private _padding: PaddingDefinition = null;\r\n\r\n    private internalRenderSeparator(): HTMLElement {\r\n        return Utils.renderSeparation(\r\n            {\r\n                spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\r\n                lineThickness: this.separator ? this.hostConfig.separator.lineThickness : null,\r\n                lineColor: this.separator ? this.hostConfig.separator.lineColor : null\r\n            },\r\n            this.separatorOrientation);\r\n    }\r\n\r\n    private updateRenderedElementVisibility() {\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.display = this._isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n        }\r\n\r\n        if (this._separatorElement) {\r\n            this._separatorElement.style.display = this._isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n        }\r\n    }\r\n\r\n    private hideElementDueToOverflow() {\r\n        if (this._renderedElement && this._isVisible) {\r\n            this._renderedElement.style.visibility = 'hidden';\r\n            this._isVisible = false;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    private showElementHiddenDueToOverflow() {\r\n        if (this._renderedElement && !this._isVisible) {\r\n            this._renderedElement.style.visibility = null;\r\n            this._isVisible = true;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private handleOverflow(maxHeight: number) {\r\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\r\n            var handled = this.truncateOverflow(maxHeight);\r\n\r\n            // Even if we were unable to truncate the element to fit this time,\r\n            // it still could have been previously truncated\r\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\r\n\r\n            if (!handled) {\r\n                this.hideElementDueToOverflow();\r\n            }\r\n            else if (handled && !this._isVisible) {\r\n                this.showElementHiddenDueToOverflow();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private resetOverflow(): boolean {\r\n        var sizeChanged = false;\r\n\r\n        if (this._truncatedDueToOverflow) {\r\n            this.undoOverflowTruncation();\r\n            this._truncatedDueToOverflow = false;\r\n            sizeChanged = true;\r\n        }\r\n\r\n        if (this.isHiddenDueToOverflow) {\r\n            this.showElementHiddenDueToOverflow();\r\n        }\r\n\r\n        return sizeChanged;\r\n    }\r\n\r\n    protected internalGetNonZeroPadding(padding: PaddingDefinition,\r\n                                        processTop: boolean = true,\r\n                                        processRight: boolean = true,\r\n                                        processBottom: boolean = true,\r\n                                        processLeft: boolean = true) {\r\n        if (processTop) {\r\n            if (padding.top == Enums.Spacing.None) {\r\n                padding.top = this.internalPadding.top;\r\n            }\r\n        }\r\n\r\n        if (processRight) {\r\n            if (padding.right == Enums.Spacing.None) {\r\n                padding.right = this.internalPadding.right;\r\n            }\r\n        }\r\n\r\n        if (processBottom) {\r\n            if (padding.bottom == Enums.Spacing.None) {\r\n                padding.bottom = this.internalPadding.bottom;\r\n            }\r\n        }\r\n\r\n        if (processLeft) {\r\n            if (padding.left == Enums.Spacing.None) {\r\n                padding.left = this.internalPadding.left;\r\n            }\r\n        }\r\n\r\n        if (this.parent) {\r\n            this.parent.internalGetNonZeroPadding(\r\n                padding,\r\n                processTop && this.isAtTheVeryTop(),\r\n                processRight && this.isAtTheVeryRight(),\r\n                processBottom && this.isAtTheVeryBottom(),\r\n                processLeft && this.isAtTheVeryLeft());\r\n        }\r\n    }\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        if (this.height === \"auto\") {\r\n            renderedElement.style.flex = \"0 0 auto\";\r\n        }\r\n        else {\r\n            renderedElement.style.flex = \"1 1 100%\";\r\n        }\r\n    }\r\n\r\n    protected showBottomSpacer(requestingElement: CardElement) {\r\n        if (this.parent) {\r\n            this.parent.showBottomSpacer(requestingElement);\r\n        }\r\n    }\r\n\r\n    protected hideBottomSpacer(requestingElement: CardElement) {\r\n        if (this.parent) {\r\n            this.parent.hideBottomSpacer(requestingElement);\r\n        }\r\n    }\r\n\r\n    protected abstract internalRender(): HTMLElement;\r\n\r\n    /*\r\n     * Called when this element overflows the bottom of the card.\r\n     * maxHeight will be the amount of space still available on the card (0 if\r\n     * the element is fully off the card).\r\n     */\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Child implementations should return true if the element handled\r\n        // the truncation request such that its content fits within maxHeight,\r\n        // false if the element should fall back to being hidden\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     * This should reverse any changes performed in truncateOverflow().\r\n     */\r\n    protected undoOverflowTruncation() { }\r\n\r\n    protected get useDefaultSizing(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get allowCustomPadding(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get defaultPadding(): PaddingDefinition {\r\n        return new PaddingDefinition();\r\n    }\r\n\r\n    protected get internalPadding(): PaddingDefinition {\r\n        if (this._padding) {\r\n            return this._padding;\r\n        }\r\n        else {\r\n            return (this._internalPadding && this.allowCustomPadding) ? this._internalPadding : this.defaultPadding;\r\n        }\r\n    }\r\n\r\n    protected set internalPadding(value: PaddingDefinition) {\r\n        this._internalPadding = value;\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Horizontal;\r\n    }\r\n\r\n    protected getPadding(): PaddingDefinition {\r\n        return this._padding;\r\n    }\r\n\r\n    protected setPadding(value: PaddingDefinition) {\r\n        this._padding = value;\r\n\r\n        if (this._padding) {\r\n            AdaptiveCard.useAutomaticContainerBleeding = false;\r\n        }\r\n    }\r\n\r\n    id: string;\r\n    speak: string;\r\n    horizontalAlignment?: Enums.HorizontalAlignment = null;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    separator: boolean = false;\r\n    height: \"auto\" | \"stretch\" = \"auto\";\r\n\r\n    abstract getJsonTypeName(): string;\r\n    abstract renderSpeech(): string;\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    getNonZeroPadding(): PaddingDefinition {\r\n        var padding: PaddingDefinition = new PaddingDefinition();\r\n\r\n        this.internalGetNonZeroPadding(padding);\r\n\r\n        return padding;\r\n    }\r\n\r\n    getForbiddenElementTypes(): Array<string> {\r\n        return null;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return null;\r\n    }\r\n\r\n    parse(json: any) {\r\n        raiseParseElementEvent(this, json);\r\n\r\n        this.id = json[\"id\"];\r\n        this.speak = json[\"speak\"];\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], null);\r\n\r\n        this.spacing = Utils.getEnumValueOrDefault(Enums.Spacing, json[\"spacing\"], Enums.Spacing.Default);\r\n        this.separator = json[\"separator\"];\r\n\r\n        var jsonSeparation = json[\"separation\"];\r\n\r\n        if (jsonSeparation !== undefined) {\r\n            if (jsonSeparation === \"none\") {\r\n                this.spacing = Enums.Spacing.None;\r\n                this.separator = false;\r\n            }\r\n            else if (jsonSeparation === \"strong\") {\r\n                this.spacing = Enums.Spacing.Large;\r\n                this.separator = true;\r\n            }\r\n            else if (jsonSeparation === \"default\") {\r\n                this.spacing = Enums.Spacing.Default;\r\n                this.separator = false;\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The \\\"separation\\\" property is deprecated and will be removed. Use the \\\"spacing\\\" and \\\"separator\\\" properties instead.\"\r\n                });\r\n        }\r\n\r\n        var jsonHeight = json[\"height\"];\r\n\r\n        if (jsonHeight === \"auto\" || jsonHeight === \"stretch\") {\r\n            this.height = jsonHeight;\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return [];\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        this._renderedElement = this.internalRender();\r\n        this._separatorElement = this.internalRenderSeparator();\r\n\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.boxSizing = \"border-box\";\r\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display;\r\n\r\n            this.adjustRenderedElementSize(this._renderedElement);\r\n            this.updateLayout(false);\r\n            this.updateRenderedElementVisibility();\r\n        }\r\n\r\n        return this._renderedElement;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        // Does nothing in base implementation\r\n    }\r\n\r\n    isRendered(): boolean {\r\n        return this._renderedElement && this._renderedElement.offsetHeight > 0;\r\n    }\r\n\r\n    isAtTheVeryTop(): boolean {\r\n        return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryBottom(): boolean {\r\n        return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryLeft(): boolean {\r\n        return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryRight(): boolean {\r\n        return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isHiddenDueToOverflow(): boolean {\r\n        return this._renderedElement && this._renderedElement.style.visibility == 'hidden';\r\n    }\r\n\r\n    canContentBleed(): boolean {\r\n        return this.parent ? this.parent.canContentBleed() : true;\r\n    }\r\n\r\n    getRootElement(): CardElement {\r\n        var rootElement: CardElement = this;\r\n\r\n        while (rootElement.parent) {\r\n            rootElement = rootElement.parent;\r\n        }\r\n\r\n        return rootElement;\r\n    }\r\n\r\n    getParentContainer(): Container {\r\n        var currentElement: CardElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            if (currentElement instanceof Container) {\r\n                return <Container>currentElement;\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        return this.id === id ? this : null;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        return null;\r\n    }\r\n\r\n    get lang(): string {\r\n        if (this._lang) {\r\n            return this._lang;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.lang;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    set lang(value: string) {\r\n        if (value && value != \"\") {\r\n            var regEx = /^[a-z]{2,3}$/ig;\r\n\r\n            var matches = regEx.exec(value);\r\n\r\n            if (!matches) {\r\n                throw new Error(\"Invalid language identifier: \" + value);\r\n            }\r\n        }\r\n\r\n        this._lang = value;\r\n    }\r\n\r\n    get hostConfig(): HostConfig.HostConfig {\r\n        if (this._hostConfig) {\r\n            return this._hostConfig;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.hostConfig;\r\n            }\r\n            else {\r\n                return defaultHostConfig;\r\n            }\r\n        }\r\n    }\r\n\r\n    set hostConfig(value: HostConfig.HostConfig) {\r\n        this._hostConfig = value;\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get isVisible(): boolean {\r\n        return this._isVisible;\r\n    }\r\n\r\n    set isVisible(value: boolean) {\r\n        // If the element is going to be hidden, reset any changes that were due\r\n        // to overflow truncation (this ensures that if the element is later\r\n        // un-hidden it has the right content)\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && !value) {\r\n            this.undoOverflowTruncation();\r\n        }\r\n\r\n        if (this._isVisible != value) {\r\n            this._isVisible = value;\r\n\r\n            this.updateRenderedElementVisibility();\r\n\r\n            if (this._renderedElement) {\r\n                raiseElementVisibilityChangedEvent(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n\r\n    get separatorElement(): HTMLElement {\r\n        return this._separatorElement;\r\n    }\r\n}\r\n\r\nexport class TextBlock extends CardElement {\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;\r\n    text: string;\r\n    isSubtle: boolean = false;\r\n    wrap: boolean = false;\r\n    maxLines: number;\r\n    useMarkdown: boolean = true;\r\n\r\n    private _computedLineHeight: number;\r\n    private _originalInnerHtml: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            var element = document.createElement(\"div\");\r\n            element.style.overflow = \"hidden\";\r\n\r\n            if (this.hostConfig.fontFamily) {\r\n                element.style.fontFamily = this.hostConfig.fontFamily;\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.textAlign = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.textAlign = \"right\";\r\n                    break;\r\n                default:\r\n                    element.style.textAlign = \"left\";\r\n                    break;\r\n            }\r\n\r\n            var cssStyle = \"text \";\r\n            var fontSize: number;\r\n\r\n            switch (this.size) {\r\n                case Enums.TextSize.Small:\r\n                    fontSize = this.hostConfig.fontSizes.small;\r\n                    break;\r\n                case Enums.TextSize.Medium:\r\n                    fontSize = this.hostConfig.fontSizes.medium;\r\n                    break;\r\n                case Enums.TextSize.Large:\r\n                    fontSize = this.hostConfig.fontSizes.large;\r\n                    break;\r\n                case Enums.TextSize.ExtraLarge:\r\n                    fontSize = this.hostConfig.fontSizes.extraLarge;\r\n                    break;\r\n                default:\r\n                    fontSize = this.hostConfig.fontSizes.default;\r\n                    break;\r\n            }\r\n\r\n            // Looks like 1.33 is the magic number to compute line-height\r\n            // from font size.\r\n            this._computedLineHeight = fontSize * 1.33;\r\n\r\n            element.style.fontSize = fontSize + \"px\";\r\n            element.style.lineHeight = this._computedLineHeight + \"px\";\r\n\r\n            var parentContainer = this.getParentContainer();\r\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(parentContainer ? parentContainer.style : Enums.ContainerStyle.Default, this.hostConfig.containerStyles.default);\r\n\r\n            var actualTextColor = this.color ? this.color : Enums.TextColor.Default;\r\n            var colorDefinition: HostConfig.TextColorDefinition;\r\n\r\n            switch (actualTextColor) {\r\n                case Enums.TextColor.Accent:\r\n                    colorDefinition = styleDefinition.foregroundColors.accent;\r\n                    break;\r\n                case Enums.TextColor.Dark:\r\n                    colorDefinition = styleDefinition.foregroundColors.dark;\r\n                    break;\r\n                case Enums.TextColor.Light:\r\n                    colorDefinition = styleDefinition.foregroundColors.light;\r\n                    break;\r\n                case Enums.TextColor.Good:\r\n                    colorDefinition = styleDefinition.foregroundColors.good;\r\n                    break;\r\n                case Enums.TextColor.Warning:\r\n                    colorDefinition = styleDefinition.foregroundColors.warning;\r\n                    break;\r\n                case Enums.TextColor.Attention:\r\n                    colorDefinition = styleDefinition.foregroundColors.attention;\r\n                    break;\r\n                default:\r\n                    colorDefinition = styleDefinition.foregroundColors.default;\r\n                    break;\r\n            }\r\n\r\n            element.style.color = Utils.stringToCssColor(this.isSubtle ? colorDefinition.subtle : colorDefinition.default);\r\n\r\n            var fontWeight: number;\r\n\r\n            switch (this.weight) {\r\n                case Enums.TextWeight.Lighter:\r\n                    fontWeight = this.hostConfig.fontWeights.lighter;\r\n                    break;\r\n                case Enums.TextWeight.Bolder:\r\n                    fontWeight = this.hostConfig.fontWeights.bolder;\r\n                    break;\r\n                default:\r\n                    fontWeight = this.hostConfig.fontWeights.default;\r\n                    break;\r\n            }\r\n\r\n            element.style.fontWeight = fontWeight.toString();\r\n\r\n            var formattedText = TextFormatters.formatText(this.lang, this.text);\r\n\r\n            element.innerHTML = this.useMarkdown ? AdaptiveCard.processMarkdown(formattedText) : formattedText;\r\n\r\n            if (element.firstElementChild instanceof HTMLElement) {\r\n                var firstElementChild = <HTMLElement>element.firstElementChild;\r\n                firstElementChild.style.marginTop = \"0px\";\r\n                firstElementChild.style.width = \"100%\";\r\n\r\n                if (!this.wrap) {\r\n                    firstElementChild.style.overflow = \"hidden\";\r\n                    firstElementChild.style.textOverflow = \"ellipsis\";\r\n                }\r\n            }\r\n\r\n            if (element.lastElementChild instanceof HTMLElement) {\r\n                (<HTMLElement>element.lastElementChild).style.marginBottom = \"0px\";\r\n            }\r\n\r\n            var anchors = element.getElementsByTagName(\"a\");\r\n\r\n            for (var i = 0; i < anchors.length; i++) {\r\n                var anchor = <HTMLAnchorElement>anchors[i];\r\n                anchor.classList.add(\"ac-anchor\");\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    if (raiseAnchorClickedEvent(this, e.target as HTMLAnchorElement)) {\r\n                        e.preventDefault();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.wrap) {\r\n                element.style.wordWrap = \"break-word\";\r\n\r\n                if (this.maxLines > 0) {\r\n                    element.style.maxHeight = (this._computedLineHeight * this.maxLines) + \"px\";\r\n                    element.style.overflow = \"hidden\";\r\n                }\r\n            }\r\n            else {\r\n                element.style.whiteSpace = \"nowrap\";\r\n                element.style.textOverflow = \"ellipsis\";\r\n            }\r\n\r\n            if (AdaptiveCard.useAdvancedTextBlockTruncation\r\n                || AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                this._originalInnerHtml = element.innerHTML;\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.text = json[\"text\"];\r\n\r\n        var sizeString = json[\"size\"];\r\n\r\n        if (sizeString && typeof sizeString === \"string\" && sizeString.toLowerCase() === \"normal\") {\r\n            this.size = Enums.TextSize.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.size value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                });\r\n        }\r\n        else {\r\n            this.size = Utils.getEnumValueOrDefault(Enums.TextSize, sizeString, this.size);\r\n        }\r\n\r\n        var weightString = json[\"weight\"];\r\n\r\n        if (weightString && typeof weightString === \"string\" && weightString.toLowerCase() === \"normal\") {\r\n            this.weight = Enums.TextWeight.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.weight value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                });\r\n        }\r\n        else {\r\n            this.weight = Utils.getEnumValueOrDefault(Enums.TextWeight, weightString, this.weight);\r\n        }\r\n\r\n        this.color = Utils.getEnumValueOrDefault(Enums.TextColor, json[\"color\"], this.color);\r\n        this.isSubtle = json[\"isSubtle\"];\r\n        this.wrap = json[\"wrap\"] === undefined ? false : json[\"wrap\"];\r\n        this.maxLines = json[\"maxLines\"];\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextBlock\";\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null)\r\n            return this.speak + '\\n';\r\n\r\n        if (this.text)\r\n            return '<s>' + this.text + '</s>\\n';\r\n\r\n        return null;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = false) {\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines && this.isRendered()) {\r\n            // Reset the element's innerHTML in case the available room for\r\n            // content has increased\r\n            this.restoreOriginalContent();\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        if (maxHeight >= this._computedLineHeight) {\r\n            return this.truncateIfSupported(maxHeight);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        this.restoreOriginalContent();\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines) {\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    }\r\n\r\n    private restoreOriginalContent() {\r\n        var maxHeight = this.maxLines\r\n            ? (this._computedLineHeight * this.maxLines) + 'px'\r\n            : null;\r\n\r\n        this.renderedElement.style.maxHeight = maxHeight;\r\n        this.renderedElement.innerHTML = this._originalInnerHtml;\r\n    }\r\n\r\n    private truncateIfSupported(maxHeight: number): boolean {\r\n        // For now, only truncate TextBlocks that contain just a single\r\n        // paragraph -- since the maxLines calculation doesn't take into\r\n        // account Markdown lists\r\n        var children = this.renderedElement.children;\r\n        var isTextOnly = !children.length;\r\n\r\n        var truncationSupported = isTextOnly || children.length == 1\r\n            && (<HTMLElement>children[0]).tagName.toLowerCase() == 'p';\r\n\r\n        if (truncationSupported) {\r\n            var element = isTextOnly\r\n                ? this.renderedElement\r\n                : <HTMLElement>children[0];\r\n\r\n            Utils.truncate(element, maxHeight, this._computedLineHeight);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class Fact {\r\n    name: string;\r\n    value: string;\r\n    speak: string;\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n\r\n        return '<s>' + this.name + ' ' + this.value + '</s>\\n';\r\n    }\r\n}\r\n\r\nexport class FactSet extends CardElement {\r\n    protected get useDefaultSizing(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n\r\n        if (this.facts.length > 0) {\r\n            element = document.createElement(\"table\");\r\n            element.style.borderWidth = \"0px\";\r\n            element.style.borderSpacing = \"0px\";\r\n            element.style.borderStyle = \"none\";\r\n            element.style.borderCollapse = \"collapse\";\r\n            element.style.display = \"block\";\r\n            element.style.overflow = \"hidden\";\r\n\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                var trElement = document.createElement(\"tr\");\r\n\r\n                if (i > 0) {\r\n                    trElement.style.marginTop = this.hostConfig.factSet.spacing + \"px\";\r\n                }\r\n\r\n                var tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n\r\n                if (this.hostConfig.factSet.title.maxWidth) {\r\n                    tdElement.style.maxWidth = this.hostConfig.factSet.title.maxWidth + \"px\";\r\n                }\r\n\r\n                tdElement.style.verticalAlign = \"top\";\r\n\r\n                var textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = this.facts[i].name;\r\n                textBlock.size = this.hostConfig.factSet.title.size;\r\n                textBlock.color = this.hostConfig.factSet.title.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.title.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.title.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.title.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0px 0px 0px 10px\";\r\n                tdElement.style.verticalAlign = \"top\";\r\n\r\n                textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = this.facts[i].value;\r\n                textBlock.size = this.hostConfig.factSet.value.size;\r\n                textBlock.color = this.hostConfig.factSet.value.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.value.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.value.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.value.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                Utils.appendChild(element, trElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    facts: Array<Fact> = [];\r\n\r\n    getJsonTypeName(): string {\r\n        return \"FactSet\";\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        if (json[\"facts\"] != null) {\r\n            var jsonFacts = json[\"facts\"] as Array<any>;\r\n            this.facts = [];\r\n            for (var i = 0; i < jsonFacts.length; i++) {\r\n                let fact = new Fact();\r\n\r\n                fact.name = jsonFacts[i][\"title\"];\r\n                fact.value = jsonFacts[i][\"value\"];\r\n                fact.speak = jsonFacts[i][\"speak\"];\r\n\r\n                this.facts.push(fact);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n\r\n        // render each fact\r\n        let speak = null;\r\n\r\n        if (this.facts.length > 0) {\r\n            speak = '';\r\n\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                let speech = this.facts[i].renderSpeech();\r\n\r\n                if (speech) {\r\n                    speak += speech;\r\n                }\r\n            }\r\n        }\r\n\r\n        return '<p>' + speak + '\\n</p>\\n';\r\n    }\r\n}\r\n\r\nexport class Image extends CardElement {\r\n    private _selectAction: Action;\r\n\r\n    protected get useDefaultSizing() {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element: HTMLElement = null;\r\n\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            element = document.createElement(\"div\");\r\n            element.classList.add(\"ac-image\");\r\n            element.style.display = \"flex\";\r\n            element.style.alignItems = \"flex-start\";\r\n\r\n            if (this.selectAction != null && this.hostConfig.supportsInteractivity) {\r\n                element.tabIndex = 0\r\n                element.setAttribute(\"role\", \"button\");\r\n                element.setAttribute(\"aria-label\", this.selectAction.title);\r\n                element.classList.add(\"ac-selectable\");\r\n            }\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this.selectAction) {\r\n                    if (e.keyCode == 13 || e.keyCode == 32) { // enter or space pressed\r\n                        this.selectAction.execute();\r\n                    }\r\n                }\r\n            }\r\n\r\n            element.onclick = (e) => {\r\n                if (this.selectAction) {\r\n                    this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            var imageElement = document.createElement(\"img\");\r\n            imageElement.style.maxHeight = \"100%\";\r\n            imageElement.style.minWidth = \"0\";\r\n\r\n            if (this.pixelWidth || this.pixelHeight) {\r\n                if (this.pixelWidth) {\r\n                    imageElement.style.width = this.pixelWidth + \"px\";\r\n                }\r\n\r\n                if (this.pixelHeight) {\r\n                    imageElement.style.height = this.pixelHeight + \"px\";\r\n                }\r\n            }\r\n            else {\r\n                switch (this.size) {\r\n                    case Enums.Size.Stretch:\r\n                        imageElement.style.width = \"100%\";\r\n                        break;\r\n                    case Enums.Size.Auto:\r\n                        imageElement.style.maxWidth = \"100%\";\r\n                        break;\r\n                    case Enums.Size.Small:\r\n                        imageElement.style.width = this.hostConfig.imageSizes.small + \"px\";\r\n                        break;\r\n                    case Enums.Size.Large:\r\n                        imageElement.style.width = this.hostConfig.imageSizes.large + \"px\";\r\n                        break;\r\n                    case Enums.Size.Medium:\r\n                        imageElement.style.width = this.hostConfig.imageSizes.medium + \"px\";\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (this.style === Enums.ImageStyle.Person) {\r\n                imageElement.style.borderRadius = \"50%\";\r\n                imageElement.style.backgroundPosition = \"50% 50%\";\r\n                imageElement.style.backgroundRepeat = \"no-repeat\";\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.backgroundColor)) {\r\n                imageElement.style.backgroundColor = Utils.stringToCssColor(this.backgroundColor);\r\n            }\r\n\r\n            imageElement.src = this.url;\r\n            imageElement.alt = this.altText;\r\n\r\n            element.appendChild(imageElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    style: Enums.ImageStyle = Enums.ImageStyle.Default;\r\n    backgroundColor: string;\r\n    url: string;\r\n    size: Enums.Size = Enums.Size.Auto;\r\n    pixelWidth?: number = null;\r\n    pixelHeight?: number = null;\r\n    altText: string = \"\";\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Image\";\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result && this.selectAction) {\r\n            result = this.selectAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.url = json[\"url\"];\r\n\r\n        var styleString = json[\"style\"];\r\n\r\n        if (styleString && typeof styleString === \"string\" && styleString.toLowerCase() === \"normal\") {\r\n            this.style = Enums.ImageStyle.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The Image.style value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                });\r\n        }\r\n        else {\r\n            this.style = Utils.getEnumValueOrDefault(Enums.ImageStyle, styleString, this.style);\r\n        }\r\n\r\n        this.size = Utils.getEnumValueOrDefault(Enums.Size, json[\"size\"], this.size);\r\n        this.altText = json[\"altText\"];\r\n\r\n        var selectActionJson = json[\"selectAction\"];\r\n\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson);\r\n        }\r\n\r\n        if (json[\"pixelWidth\"] && typeof json[\"pixelWidth\"] === \"number\") {\r\n            this.pixelWidth = json[\"pixelWidth\"];\r\n        }\r\n\r\n        if (json[\"pixelHeight\"] && typeof json[\"pixelHeight\"] === \"number\") {\r\n            this.pixelHeight = json[\"pixelHeight\"];\r\n        }\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSet extends CardElement {\r\n    private _images: Array<Image> = [];\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n\r\n        if (this._images.length > 0) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.flexWrap = \"wrap\";\r\n\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                let renderedImage = this._images[i].render();\r\n\r\n                renderedImage.style.display = \"inline-flex\";\r\n                renderedImage.style.margin = \"0px\";\r\n                renderedImage.style.marginRight = \"10px\";\r\n                renderedImage.style.maxHeight = this.hostConfig.imageSet.maxImageHeight + \"px\";\r\n\r\n                Utils.appendChild(element, renderedImage);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ImageSet\";\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        //this.imageSize = Utils.getValueOrDefault<Enums.Size>(json[\"imageSize\"], Enums.Size.medium);\r\n        this.imageSize = Utils.getEnumValueOrDefault(Enums.Size, json[\"imageSize\"], Enums.Size.Medium);\r\n\r\n        if (json[\"images\"] != null) {\r\n            let jsonImages = json[\"images\"] as Array<any>;\r\n            this._images = [];\r\n            for (let i = 0; i < jsonImages.length; i++) {\r\n                var image = new Image();\r\n                image.parse(jsonImages[i]);\r\n                image.size = this.imageSize;\r\n\r\n                this.addImage(image);\r\n            }\r\n        }\r\n    }\r\n\r\n    addImage(image: Image) {\r\n        if (!image.parent) {\r\n            this._images.push(image);\r\n\r\n            image.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This image already belongs to another ImageSet\");\r\n        }\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        var speak = null;\r\n\r\n        if (this._images.length > 0) {\r\n            speak = '';\r\n\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                speak += this._images[i].renderSpeech();\r\n            }\r\n        }\r\n\r\n        return speak;\r\n    }\r\n}\r\n\r\nexport abstract class Input extends CardElement implements Utils.IInput {\r\n    id: string;\r\n    title: string;\r\n    defaultValue: string;\r\n\r\n    abstract get value(): string;\r\n\r\n    validate(): Array<IValidationError> {\r\n        if (!this.id) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All inputs must have a unique Id\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.id = json[\"id\"];\r\n        this.defaultValue = json[\"value\"];\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        if (this.title) {\r\n            return '<s>' + this.title + '</s>\\n';\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [this];\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class TextInput extends Input {\r\n    private _textareaElement: HTMLTextAreaElement;\r\n    private _inputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this.isMultiline) {\r\n            this._textareaElement = document.createElement(\"textarea\");\r\n            this._textareaElement.className = \"ac-input ac-textInput ac-multiline\";\r\n            this._textareaElement.style.width = \"100%\";\r\n            this._textareaElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._textareaElement.placeholder = this.placeholder;\r\n                this._textareaElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._textareaElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength > 0) {\r\n                this._textareaElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            return this._textareaElement;\r\n        }\r\n        else {\r\n            this._inputElement = document.createElement(\"input\");\r\n            this._inputElement.type = \"text\";\r\n            this._inputElement.className = \"ac-input ac-textInput\";\r\n            this._inputElement.style.width = \"100%\";\r\n            this._inputElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._inputElement.placeholder = this.placeholder;\r\n                this._inputElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._inputElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength > 0) {\r\n                this._inputElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            return this._inputElement;\r\n        }\r\n    }\r\n\r\n    maxLength: number;\r\n    isMultiline: boolean;\r\n    placeholder: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Text\";\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.maxLength = json[\"maxLength\"];\r\n        this.isMultiline = json[\"isMultiline\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n    }\r\n\r\n    get value(): string {\r\n        if (this.isMultiline) {\r\n            return this._textareaElement ? this._textareaElement.value : null;\r\n        }\r\n        else {\r\n            return this._inputElement ? this._inputElement.value : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ToggleInput extends Input {\r\n    private _checkboxInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = document.createElement(\"div\");\r\n        element.className = \"ac-input\";\r\n        element.style.width = \"100%\";\r\n        element.style.display = \"flex\";\r\n\r\n        this._checkboxInputElement = document.createElement(\"input\");\r\n        this._checkboxInputElement.type = \"checkbox\";\r\n        this._checkboxInputElement.style.display = \"inline-block\";\r\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\r\n        this._checkboxInputElement.style.margin = \"0\";\r\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\r\n        this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\r\n        this._checkboxInputElement.tabIndex = 0;\r\n\r\n        if (this.defaultValue == this.valueOn) {\r\n            this._checkboxInputElement.checked = true;\r\n        }\r\n\r\n        var label = new TextBlock();\r\n        label.hostConfig = this.hostConfig;\r\n        label.text = this.title;\r\n        label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n\r\n        var labelElement = label.render();\r\n        labelElement.style.display = \"inline-block\";\r\n        labelElement.style.marginLeft = \"6px\";\r\n        labelElement.style.verticalAlign = \"middle\";\r\n\r\n        var compoundInput = document.createElement(\"div\");\r\n\r\n        Utils.appendChild(element, this._checkboxInputElement);\r\n        Utils.appendChild(element, labelElement);\r\n\r\n        return element;\r\n    }\r\n\r\n    title: string;\r\n    valueOn: string = \"true\";\r\n    valueOff: string = \"false\";\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Toggle\";\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.title = json[\"title\"];\r\n\r\n        this.valueOn = Utils.getValueOrDefault<string>(json[\"valueOn\"], this.valueOn);\r\n        this.valueOff = Utils.getValueOrDefault<string>(json[\"valueOff\"], this.valueOff);\r\n    }\r\n\r\n    get value(): string {\r\n        if (this._checkboxInputElement) {\r\n            return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Choice {\r\n    title: string;\r\n    value: string;\r\n}\r\n\r\nexport class ChoiceSetInput extends Input {\r\n    private _selectElement: HTMLSelectElement;\r\n    private _toggleInputs: Array<HTMLInputElement>;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                // Render as a combo box\r\n                this._selectElement = document.createElement(\"select\");\r\n                this._selectElement.className = \"ac-input ac-multichoiceInput\";\r\n                this._selectElement.style.width = \"100%\";\r\n\r\n                var option = document.createElement(\"option\");\r\n                option.selected = true;\r\n                option.disabled = true;\r\n                option.hidden = true;\r\n\r\n                if (this.placeholder) {\r\n                    option.text = this.placeholder;\r\n                }\r\n\r\n                Utils.appendChild(this._selectElement, option);\r\n\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var option = document.createElement(\"option\");\r\n                    option.value = this.choices[i].value;\r\n                    option.text = this.choices[i].title;\r\n                    option.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        option.selected = true;\r\n                    }\r\n\r\n                    Utils.appendChild(this._selectElement, option);\r\n                }\r\n\r\n                return this._selectElement;\r\n            }\r\n            else {\r\n                // Render as a series of radio buttons\r\n                var element = document.createElement(\"div\");\r\n                element.className = \"ac-input\";\r\n                element.style.width = \"100%\";\r\n\r\n                this._toggleInputs = [];\r\n\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var radioInput = document.createElement(\"input\");\r\n                    radioInput.type = \"radio\";\r\n                    radioInput.style.margin = \"0\";\r\n                    radioInput.style.display = \"inline-block\";\r\n                    radioInput.style.verticalAlign = \"middle\";\r\n                    radioInput.name = this.id;\r\n                    radioInput.value = this.choices[i].value;\r\n                    radioInput.style.flex = \"0 0 auto\";\r\n                    radioInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        radioInput.checked = true;\r\n                    }\r\n\r\n                    this._toggleInputs.push(radioInput);\r\n\r\n                    var label = new TextBlock();\r\n                    label.hostConfig = this.hostConfig;\r\n                    label.text = this.choices[i].title;\r\n                    label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n\r\n                    var labelElement = label.render();\r\n                    labelElement.style.display = \"inline-block\";\r\n                    labelElement.style.marginLeft = \"6px\";\r\n                    labelElement.style.verticalAlign = \"middle\";\r\n\r\n                    var compoundInput = document.createElement(\"div\");\r\n                    compoundInput.style.display = \"flex\";\r\n\r\n                    Utils.appendChild(compoundInput, radioInput);\r\n                    Utils.appendChild(compoundInput, labelElement);\r\n\r\n                    Utils.appendChild(element, compoundInput);\r\n                }\r\n\r\n                return element;\r\n            }\r\n        }\r\n        else {\r\n            // Render as a list of toggle inputs\r\n            var defaultValues = this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : null;\r\n\r\n            var element = document.createElement(\"div\");\r\n            element.className = \"ac-input\";\r\n            element.style.width = \"100%\";\r\n\r\n            this._toggleInputs = [];\r\n\r\n            for (var i = 0; i < this.choices.length; i++) {\r\n                var checkboxInput = document.createElement(\"input\");\r\n                checkboxInput.type = \"checkbox\";\r\n                checkboxInput.style.margin = \"0\";\r\n                checkboxInput.style.display = \"inline-block\";\r\n                checkboxInput.style.verticalAlign = \"middle\";\r\n                checkboxInput.value = this.choices[i].value;\r\n                checkboxInput.style.flex = \"0 0 auto\";\r\n                checkboxInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                if (defaultValues) {\r\n                    if (defaultValues.indexOf(this.choices[i].value) >= 0) {\r\n                        checkboxInput.checked = true;\r\n                    }\r\n                }\r\n\r\n                this._toggleInputs.push(checkboxInput);\r\n\r\n                var label = new TextBlock();\r\n                label.hostConfig = this.hostConfig;\r\n                label.text = this.choices[i].title;\r\n                label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n\r\n                var labelElement = label.render();\r\n                labelElement.style.display = \"inline-block\";\r\n                labelElement.style.marginLeft = \"6px\";\r\n                labelElement.style.verticalAlign = \"middle\";\r\n\r\n                var compoundInput = document.createElement(\"div\");\r\n                compoundInput.style.display = \"flex\";\r\n\r\n                Utils.appendChild(compoundInput, checkboxInput);\r\n                Utils.appendChild(compoundInput, labelElement);\r\n\r\n                Utils.appendChild(element, compoundInput);\r\n            }\r\n\r\n            return element;\r\n        }\r\n    }\r\n\r\n    choices: Array<Choice> = [];\r\n    isCompact: boolean;\r\n    isMultiSelect: boolean;\r\n    placeholder: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.ChoiceSet\";\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this.choices.length == 0) {\r\n            result = [{ error: Enums.ValidationError.CollectionCantBeEmpty, message: \"An Input.ChoiceSet must have at least one choice defined.\" }];\r\n        }\r\n\r\n        for (var i = 0; i < this.choices.length; i++) {\r\n            if (!this.choices[i].title || !this.choices[i].value) {\r\n                result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All choices in an Input.ChoiceSet must have their title and value properties set.\" }])\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.isCompact = !(json[\"style\"] === \"expanded\");\r\n        this.isMultiSelect = json[\"isMultiSelect\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n\r\n        if (json[\"choices\"] != undefined) {\r\n            var choiceArray = json[\"choices\"] as Array<any>;\r\n            this.choices = [];\r\n\r\n            for (var i = 0; i < choiceArray.length; i++) {\r\n                var choice = new Choice();\r\n\r\n                choice.title = choiceArray[i][\"title\"];\r\n                choice.value = choiceArray[i][\"value\"];\r\n\r\n                this.choices.push(choice);\r\n            }\r\n        }\r\n    }\r\n\r\n    get value(): string {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                return this._selectElement ? this._selectElement.value : null;\r\n            }\r\n            else {\r\n                if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                    return null;\r\n                }\r\n\r\n                for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                    if (this._toggleInputs[i].checked) {\r\n                        return this._toggleInputs[i].value;\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                return null;\r\n            }\r\n\r\n            var result: string = \"\";\r\n\r\n            for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                if (this._toggleInputs[i].checked) {\r\n                    if (result != \"\") {\r\n                        result += this.hostConfig.choiceSetInputValueSeparator;\r\n                    }\r\n\r\n                    result += this._toggleInputs[i].value;\r\n                }\r\n            }\r\n\r\n            return result == \"\" ? null : result;\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberInput extends Input {\r\n    private _numberInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._numberInputElement = document.createElement(\"input\");\r\n        this._numberInputElement.setAttribute(\"type\", \"number\");\r\n        this._numberInputElement.className = \"ac-input ac-numberInput\";\r\n        this._numberInputElement.setAttribute(\"min\", this.min);\r\n        this._numberInputElement.setAttribute(\"max\", this.max);\r\n        this._numberInputElement.style.width = \"100%\";\r\n        this._numberInputElement.tabIndex = 0;\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._numberInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n            this._numberInputElement.placeholder = this.placeholder;\r\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n\r\n        return this._numberInputElement;\r\n    }\r\n\r\n    min: string;\r\n    max: string;\r\n    placeholder: string;\r\n\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Number\";\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.placeholder = json[\"placeholder\"];\r\n        this.min = json[\"min\"];\r\n        this.max = json[\"max\"];\r\n    }\r\n\r\n    get value(): string {\r\n        return this._numberInputElement ? this._numberInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class DateInput extends Input {\r\n    private _dateInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._dateInputElement = document.createElement(\"input\");\r\n        this._dateInputElement.setAttribute(\"type\", \"date\");\r\n        this._dateInputElement.className = \"ac-input ac-dateInput\";\r\n        this._dateInputElement.style.width = \"100%\";\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._dateInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._dateInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Date\";\r\n    }\r\n\r\n    get value(): string {\r\n        return this._dateInputElement ? this._dateInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class TimeInput extends Input {\r\n    private _timeInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._timeInputElement = document.createElement(\"input\");\r\n        this._timeInputElement.setAttribute(\"type\", \"time\");\r\n        this._timeInputElement.className = \"ac-input ac-timeInput\";\r\n        this._timeInputElement.style.width = \"100%\";\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._timeInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._timeInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Time\";\r\n    }\r\n\r\n    get value(): string {\r\n        return this._timeInputElement ? this._timeInputElement.value : null;\r\n    }\r\n}\r\n\r\nenum ActionButtonState {\r\n    Normal,\r\n    Expanded,\r\n    Subdued\r\n}\r\n\r\nclass ActionButton {\r\n    private _action: Action;\r\n    private _element: HTMLButtonElement = null;\r\n    private _state: ActionButtonState = ActionButtonState.Normal;\r\n    private _text: string;\r\n\r\n    private click() {\r\n        if (this.onClick != null) {\r\n            this.onClick(this);\r\n        }\r\n    }\r\n\r\n    private updateCssStyle() {\r\n        this._element.className = \"ac-pushButton\";\r\n\r\n        if (this._action instanceof ShowCardAction) {\r\n            this._element.classList.add(\"expandable\");\r\n        }\r\n\r\n        switch (this._state) {\r\n            case ActionButtonState.Expanded:\r\n                this._element.classList.add(\"expanded\");\r\n                break;\r\n            case ActionButtonState.Subdued:\r\n                this._element.classList.add(\"subdued\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    constructor(action: Action) {\r\n        this._action = action;\r\n\r\n        this._element = document.createElement(\"button\");\r\n        this._element.type = \"button\";\r\n\r\n        this._element.style.overflow = \"hidden\";\r\n        this._element.style.whiteSpace = \"nowrap\";\r\n        this._element.style.textOverflow = \"ellipsis\";\r\n        this._element.onclick = (e) => { this.click(); };\r\n\r\n        this.updateCssStyle();\r\n    }\r\n\r\n    onClick: (actionButton: ActionButton) => void = null;\r\n\r\n    get action() {\r\n        return this._action;\r\n    }\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this._text = value;\r\n        this._element.innerText = this._text;\r\n        this._element.setAttribute(\"aria-label\", this._text);\r\n    }\r\n\r\n    get element(): HTMLElement {\r\n        return this._element;\r\n    }\r\n\r\n    get state(): ActionButtonState {\r\n        return this._state;\r\n    }\r\n\r\n    set state(value: ActionButtonState) {\r\n        this._state = value;\r\n\r\n        this.updateCssStyle();\r\n    }\r\n}\r\n\r\nexport abstract class Action {\r\n    private _parent: CardElement = null;\r\n    private _actionCollection: ActionCollection = null; // hold the reference to its action collection\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    execute() {\r\n        raiseExecuteActionEvent(this);\r\n    }\r\n\r\n    private setCollection(actionCollection: ActionCollection) {\r\n        this._actionCollection = actionCollection;\r\n    }\r\n\r\n    // Expand the action card pane with a inline status card\r\n    // Null status will clear the status bar\r\n    setStatus(status: any) {\r\n        if (this._actionCollection == null) {\r\n            return;\r\n        }\r\n\r\n        if (status) {\r\n            let statusCard = new InlineAdaptiveCard();\r\n            statusCard.parse(status);\r\n            this._actionCollection.showStatusCard(statusCard);\r\n        }\r\n        else {\r\n            this._actionCollection.hideStatusCard();\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return [];\r\n    }\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        // Do nothing in base implementation\r\n    };\r\n\r\n    parse(json: any) {\r\n        this.id = json[\"id\"];\r\n        this.title = json[\"title\"];\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        if (this.id == id) {\r\n            return this;\r\n        }\r\n    }\r\n\r\n    id: string;\r\n    title: string;\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n}\r\n\r\nexport class SubmitAction extends Action {\r\n    private _isPrepared: boolean = false;\r\n    private _originalData: Object;\r\n    private _processedData: Object;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.Submit\";\r\n    }\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        if (this._originalData) {\r\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\r\n        }\r\n        else {\r\n            this._processedData = {};\r\n        }\r\n\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            var inputValue = inputs[i].value;\r\n\r\n            if (inputValue != null) {\r\n                this._processedData[inputs[i].id] = inputs[i].value;\r\n            }\r\n        }\r\n\r\n        this._isPrepared = true;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.data = json[\"data\"];\r\n    }\r\n\r\n    get data(): Object {\r\n        return this._isPrepared ? this._processedData : this._originalData;\r\n    }\r\n\r\n    set data(value: Object) {\r\n        this._originalData = value;\r\n        this._isPrepared = false;\r\n    }\r\n}\r\n\r\nexport class OpenUrlAction extends Action {\r\n    url: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.OpenUrl\";\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        if (!this.url) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.OpenUrl must have its url property set.\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.url = json[\"url\"];\r\n    }\r\n}\r\n\r\nexport class HttpHeader {\r\n    private _value = new Utils.StringWithSubstitutions();\r\n\r\n    name: string;\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        this._value.substituteInputValues(inputs, Utils.ContentTypes.applicationXWwwFormUrlencoded);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._value.get();\r\n    }\r\n\r\n    set value(newValue: string) {\r\n        this._value.set(newValue);\r\n    }\r\n}\r\n\r\nexport class HttpAction extends Action {\r\n    private _url = new Utils.StringWithSubstitutions();\r\n    private _body = new Utils.StringWithSubstitutions();\r\n    private _headers: Array<HttpHeader> = [];\r\n\r\n    method: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.Http\";\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (!this.url) {\r\n            result = [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.Http must have its url property set.\" }];\r\n        }\r\n\r\n        if (this.headers.length > 0) {\r\n            for (var i = 0; i < this.headers.length; i++) {\r\n                if (!this.headers[i].name || !this.headers[i].value) {\r\n                    result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All headers of an Action.Http must have their name and value properties set.\" }]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        this._url.substituteInputValues(inputs, Utils.ContentTypes.applicationXWwwFormUrlencoded);\r\n\r\n        let contentType = Utils.ContentTypes.applicationJson;\r\n\r\n        for (var i = 0; i < this._headers.length; i++) {\r\n            this._headers[i].prepare(inputs);\r\n\r\n            if (this._headers[i].name && this._headers[i].name.toLowerCase() == \"content-type\") {\r\n                contentType = this._headers[i].value;\r\n            }\r\n        }\r\n\r\n        this._body.substituteInputValues(inputs, contentType);\r\n    };\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.url = json[\"url\"];\r\n        this.method = json[\"method\"];\r\n        this.body = json[\"body\"];\r\n\r\n        if (json[\"headers\"] != null) {\r\n            var jsonHeaders = json[\"headers\"] as Array<any>;\r\n            this._headers = [];\r\n            for (var i = 0; i < jsonHeaders.length; i++) {\r\n                let httpHeader = new HttpHeader();\r\n\r\n                httpHeader.name = jsonHeaders[i][\"name\"];\r\n                httpHeader.value = jsonHeaders[i][\"value\"];\r\n\r\n                this.headers.push(httpHeader);\r\n            }\r\n        }\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url.get();\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url.set(value);\r\n    }\r\n\r\n    get body(): string {\r\n        return this._body.get();\r\n    }\r\n\r\n    set body(value: string) {\r\n        this._body.set(value);\r\n    }\r\n\r\n    get headers(): Array<HttpHeader> {\r\n        return this._headers;\r\n    }\r\n}\r\n\r\nexport class ShowCardAction extends Action {\r\n    readonly card: AdaptiveCard = new InlineAdaptiveCard();\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.ShowCard\";\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return this.card.validate();\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.card.parse(json[\"card\"]);\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        super.setParent(value);\r\n\r\n        this.card.setParent(value);\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this.card.getAllInputs();\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            result = this.card.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass ActionCollection {\r\n    private _owner: CardElement;\r\n    private _actionButtons: Array<ActionButton> = [];\r\n    private _actionCardContainer: HTMLDivElement;\r\n    private _expandedAction: ShowCardAction = null;\r\n    private _renderedActionCount: number = 0;\r\n    private _statusCard: HTMLElement = null;\r\n    private _actionCard: HTMLElement = null;\r\n\r\n    showStatusCard(status: AdaptiveCard) {\r\n        status.setParent(this._owner);\r\n\r\n        this._statusCard = status.render();\r\n\r\n        this.refreshContainer();\r\n    }\r\n\r\n    hideStatusCard() {\r\n        this._statusCard = null;\r\n\r\n        this.refreshContainer();\r\n    }\r\n\r\n    private refreshContainer() {\r\n        this._actionCardContainer.innerHTML = \"\";\r\n\r\n        if (this._actionCard === null && this._statusCard === null) {\r\n            this._actionCardContainer.style.padding = \"0px\";\r\n            this._actionCardContainer.style.marginTop = \"0px\";\r\n\r\n            if (this.onHideActionCardPane) {\r\n                this.onHideActionCardPane();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (this.onShowActionCardPane) {\r\n            this.onShowActionCardPane(null);\r\n        }\r\n\r\n        this._actionCardContainer.style.marginTop = this._renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\r\n\r\n        var padding = this._owner.getNonZeroPadding().toSpacingDefinition(this._owner.hostConfig);\r\n\r\n        if (this._actionCard !== null) {\r\n            this._actionCard.style.paddingLeft = padding.left + \"px\";\r\n            this._actionCard.style.paddingRight = padding.right + \"px\";\r\n\r\n            this._actionCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._actionCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n\r\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\r\n        }\r\n\r\n        if (this._statusCard !== null) {\r\n            this._statusCard.style.paddingLeft = padding.left + \"px\";\r\n            this._statusCard.style.paddingRight = padding.right + \"px\";\r\n\r\n            this._statusCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._statusCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n\r\n            Utils.appendChild(this._actionCardContainer, this._statusCard);\r\n        }\r\n    }\r\n\r\n    private hideActionCard() {\r\n        if (this._expandedAction) {\r\n            raiseInlineCardExpandedEvent(this._expandedAction, false);\r\n        }\r\n\r\n        this._expandedAction = null;\r\n        this._actionCard = null;\r\n\r\n        this.refreshContainer();\r\n    }\r\n\r\n    private showActionCard(action: ShowCardAction, suppressStyle: boolean = false) {\r\n        if (action.card == null) {\r\n            return;\r\n        }\r\n\r\n        (<InlineAdaptiveCard>action.card).suppressStyle = suppressStyle;\r\n\r\n        var renderedCard = action.card.render();\r\n\r\n        this._actionCard = renderedCard;\r\n        this._expandedAction = action;\r\n\r\n        this.refreshContainer();\r\n\r\n        raiseInlineCardExpandedEvent(action, true);\r\n    }\r\n\r\n    private actionClicked(actionButton: ActionButton) {\r\n        if (!(actionButton.action instanceof ShowCardAction)) {\r\n            for (var i = 0; i < this._actionButtons.length; i++) {\r\n                this._actionButtons[i].state = ActionButtonState.Normal;\r\n            }\r\n\r\n            this.hideStatusCard();\r\n            this.hideActionCard();\r\n\r\n            actionButton.action.execute();\r\n        }\r\n        else {\r\n            this.hideStatusCard();\r\n\r\n            if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\r\n                actionButton.action.execute();\r\n            }\r\n            else if (actionButton.action === this._expandedAction) {\r\n                for (var i = 0; i < this._actionButtons.length; i++) {\r\n                    this._actionButtons[i].state = ActionButtonState.Normal;\r\n                }\r\n\r\n                this.hideActionCard();\r\n            }\r\n            else {\r\n                for (var i = 0; i < this._actionButtons.length; i++) {\r\n                    if (this._actionButtons[i] !== actionButton) {\r\n                        this._actionButtons[i].state = ActionButtonState.Subdued;\r\n                    }\r\n                }\r\n\r\n                actionButton.state = ActionButtonState.Expanded;\r\n\r\n                this.showActionCard(actionButton.action, !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()));\r\n            }\r\n        }\r\n    }\r\n\r\n    items: Array<Action> = [];\r\n    onHideActionCardPane: () => void = null;\r\n    onShowActionCardPane: (action: ShowCardAction) => void = null;\r\n\r\n    constructor(owner: CardElement) {\r\n        this._owner = owner;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = this.items[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this._owner.hostConfig.actions.maxActions && this.items.length > this._owner.hostConfig.actions.maxActions) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.TooManyActions,\r\n                    message: \"A maximum of \" + this._owner.hostConfig.actions.maxActions + \" actions are allowed.\"\r\n                });\r\n        }\r\n\r\n        if (this.items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Interactivity is not allowed.\"\r\n                });\r\n        }\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            if (!isActionAllowed(this.items[i], this._owner.getForbiddenActionTypes())) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                        message: \"Actions of type \" + this.items[i].getJsonTypeName() + \" are not allowe.\"\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].validate());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render(orientation: Enums.Orientation): HTMLElement {\r\n        if (!this._owner.hostConfig.supportsInteractivity) {\r\n            return null;\r\n        }\r\n\r\n        var element = document.createElement(\"div\");\r\n\r\n        this._actionCardContainer = document.createElement(\"div\");\r\n\r\n        this._renderedActionCount = 0;\r\n\r\n        var maxActions = this._owner.hostConfig.actions.maxActions ? Math.min(this._owner.hostConfig.actions.maxActions, this.items.length) : this.items.length;\r\n\r\n        var forbiddenActionTypes = this._owner.getForbiddenActionTypes();\r\n\r\n        if (AdaptiveCard.preExpandSingleShowCardAction && maxActions == 1 && this.items[0] instanceof ShowCardAction && isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n            this.showActionCard(<ShowCardAction>this.items[0], true);\r\n            this._renderedActionCount = 1;\r\n        }\r\n        else {\r\n            var buttonStrip = document.createElement(\"div\");\r\n            buttonStrip.style.display = \"flex\";\r\n\r\n            if (orientation == Enums.Orientation.Horizontal) {\r\n                buttonStrip.style.flexDirection = \"row\";\r\n\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                buttonStrip.style.flexDirection = \"column\";\r\n\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Stretch:\r\n                            buttonStrip.style.alignItems = \"stretch\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (var i = 0; i < this.items.length; i++) {\r\n                if (isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n                    var actionButton = new ActionButton(this.items[i]);\r\n                    actionButton.element.style.overflow = \"hidden\";\r\n                    actionButton.element.style.overflow = \"table-cell\";\r\n                    actionButton.element.style.flex = this._owner.hostConfig.actions.actionAlignment === Enums.ActionAlignment.Stretch ? \"0 1 100%\" : \"0 1 auto\";\r\n                    actionButton.text = this.items[i].title;\r\n                    actionButton.onClick = (ab) => { this.actionClicked(ab); };\r\n\r\n                    this._actionButtons.push(actionButton);\r\n\r\n                    buttonStrip.appendChild(actionButton.element);\r\n\r\n                    this._renderedActionCount++;\r\n\r\n                    if (this._renderedActionCount >= this._owner.hostConfig.actions.maxActions || i == this.items.length - 1) {\r\n                        break;\r\n                    }\r\n                    else if (this._owner.hostConfig.actions.buttonSpacing > 0) {\r\n                        var spacer = document.createElement(\"div\");\r\n\r\n                        if (orientation === Enums.Orientation.Horizontal) {\r\n                            spacer.style.flex = \"0 0 auto\";\r\n                            spacer.style.width = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        else {\r\n                            spacer.style.height = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n\r\n                        Utils.appendChild(buttonStrip, spacer);\r\n                    }\r\n                }\r\n            }\r\n\r\n            var buttonStripContainer = document.createElement(\"div\");\r\n            buttonStripContainer.style.overflow = \"hidden\";\r\n            buttonStripContainer.appendChild(buttonStrip);\r\n\r\n            Utils.appendChild(element, buttonStripContainer);\r\n        }\r\n\r\n        Utils.appendChild(element, this._actionCardContainer);\r\n\r\n        return this._renderedActionCount > 0 ? element : null;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if (!action.parent) {\r\n            this.items.push(action);\r\n\r\n            action.setParent(this._owner);\r\n\r\n            invokeSetCollection(action, this);\r\n        }\r\n        else {\r\n            throw new Error(\"The action already belongs to another element.\")\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.items = [];\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            var action = this.items[i];\r\n\r\n            result = result.concat(action.getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class ActionSet extends CardElement {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        return this._actionCollection.render(this.orientation ? this.orientation : this.hostConfig.actions.actionsOrientation);\r\n    }\r\n\r\n    orientation?: Enums.Orientation = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n        this._actionCollection.onHideActionCardPane = () => { this.showBottomSpacer(this); };\r\n        this._actionCollection.onShowActionCardPane = (action: ShowCardAction) => { this.hideBottomSpacer(this); };\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ActionSet\";\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return this._actionCollection.validate();\r\n    }\r\n\r\n    parse(json: any, itemsCollectionPropertyName: string = \"items\") {\r\n        super.parse(json);\r\n\r\n        var jsonOrientation = json[\"orientation\"];\r\n\r\n        if (jsonOrientation) {\r\n            this.orientation = Utils.getEnumValueOrDefault(Enums.Orientation, jsonOrientation, Enums.Orientation.Horizontal);\r\n        }\r\n\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"] as Array<any>;\r\n\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                this.addAction(createActionInstance(jsonActions[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if (action != null) {\r\n            this._actionCollection.addAction(action);\r\n        }\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this._actionCollection.getAllInputs();\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        // TODO: What's the right thing to do here?\r\n        return \"\";\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class BackgroundImage {\r\n    url: string;\r\n    mode: Enums.BackgroundImageMode = Enums.BackgroundImageMode.Stretch;\r\n    horizontalAlignment: Enums.HorizontalAlignment = Enums.HorizontalAlignment.Left;\r\n    verticalAlignment: Enums.VerticalAlignment = Enums.VerticalAlignment.Top;\r\n\r\n    parse(json: any) {\r\n        this.url = json[\"url\"];\r\n        this.mode = Utils.getEnumValueOrDefault(Enums.BackgroundImageMode, json[\"mode\"], this.mode);\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n        this.verticalAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalAlignment\"], this.verticalAlignment);\r\n    }\r\n\r\n    apply(element: HTMLElement) {\r\n        if (this.url) {\r\n            element.style.backgroundImage = \"url('\" + this.url + \"')\";\r\n\r\n            switch (this.mode) {\r\n                case Enums.BackgroundImageMode.Repeat:\r\n                    element.style.backgroundRepeat = \"repeat\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatHorizontally:\r\n                    element.style.backgroundRepeat = \"repeat-x\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatVertically:\r\n                    element.style.backgroundRepeat = \"repeat-y\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.Stretch:\r\n                default:\r\n                    element.style.backgroundRepeat = \"no-repeat\";\r\n                    element.style.backgroundSize = \"cover\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.backgroundPositionX = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.backgroundPositionX = \"right\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.verticalAlignment) {\r\n                case Enums.VerticalAlignment.Center:\r\n                    element.style.backgroundPositionY = \"center\";\r\n                    break;\r\n                case Enums.VerticalAlignment.Bottom:\r\n                    element.style.backgroundPositionY = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class Container extends CardElement {\r\n    private _selectAction: Action;\r\n    private _items: Array<CardElement> = [];\r\n    private _style?: string = null;\r\n\r\n    private isElementAllowed(element: CardElement, forbiddenElementTypes: Array<string>) {\r\n        if (!this.hostConfig.supportsInteractivity && element.isInteractive) {\r\n            return false;\r\n        }\r\n\r\n        if (forbiddenElementTypes) {\r\n            for (var i = 0; i < forbiddenElementTypes.length; i++) {\r\n                if (element.getJsonTypeName() === forbiddenElementTypes[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private get hasExplicitStyle(): boolean {\r\n        return this._style != null;\r\n    }\r\n\r\n    protected showBottomSpacer(requestingElement: CardElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            this.applyPadding();\r\n\r\n            super.showBottomSpacer(requestingElement);\r\n        }\r\n    }\r\n\r\n    protected hideBottomSpacer(requestingElement: CardElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            if (this.renderedElement) {\r\n                this.renderedElement.style.paddingBottom = \"0px\";\r\n            }\r\n\r\n            super.hideBottomSpacer(requestingElement);\r\n        }\r\n    }\r\n\r\n    protected applyPadding() {\r\n        if (this.padding) {\r\n            if (this.renderedElement) {\r\n                var physicalPadding = this.padding.toSpacingDefinition(this.hostConfig);\r\n\r\n                this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n                this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n                this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n            }\r\n        }\r\n        else if (this.hasBackground) {\r\n            var physicalMargin: SpacingDefinition = new SpacingDefinition();\r\n            var physicalPadding: SpacingDefinition = new SpacingDefinition();\r\n\r\n            var useAutoPadding = (this.parent ? this.parent.canContentBleed() : false) && AdaptiveCard.useAutomaticContainerBleeding;\r\n\r\n            if (useAutoPadding) {\r\n                var effectivePadding = this.getNonZeroPadding();\r\n                var effectiveMargin: PaddingDefinition = new PaddingDefinition(\r\n                    effectivePadding.top,\r\n                    effectivePadding.right,\r\n                    effectivePadding.bottom,\r\n                    effectivePadding.left);\r\n\r\n                if (!this.isAtTheVeryTop()) {\r\n                    effectivePadding.top = Enums.Spacing.None;\r\n                    effectiveMargin.top = Enums.Spacing.None;\r\n                }\r\n\r\n                if (!this.isAtTheVeryBottom()) {\r\n                    effectivePadding.bottom = Enums.Spacing.None;\r\n                    effectiveMargin.bottom = Enums.Spacing.None;\r\n                }\r\n\r\n                if (!this.isAtTheVeryLeft()) {\r\n                    effectivePadding.left = Enums.Spacing.None;\r\n                    effectiveMargin.left = Enums.Spacing.None;\r\n                }\r\n\r\n                if (!this.isAtTheVeryRight()) {\r\n                    effectivePadding.right = Enums.Spacing.None;\r\n                    effectiveMargin.right = Enums.Spacing.None;\r\n                }\r\n\r\n                if (effectivePadding.left != Enums.Spacing.None || effectivePadding.right != Enums.Spacing.None) {\r\n                    if (effectivePadding.left == Enums.Spacing.None) {\r\n                        effectivePadding.left = effectivePadding.right;\r\n                    }\r\n\r\n                    if (effectivePadding.right == Enums.Spacing.None) {\r\n                        effectivePadding.right = effectivePadding.left;\r\n                    }\r\n                }\r\n\r\n                if (effectivePadding.top != Enums.Spacing.None || effectivePadding.bottom != Enums.Spacing.None) {\r\n                    if (effectivePadding.top == Enums.Spacing.None) {\r\n                        effectivePadding.top = effectivePadding.bottom;\r\n                    }\r\n\r\n                    if (effectivePadding.bottom == Enums.Spacing.None) {\r\n                        effectivePadding.bottom = effectivePadding.top;\r\n                    }\r\n                }\r\n\r\n                if (effectivePadding.top != Enums.Spacing.None\r\n                    || effectivePadding.right != Enums.Spacing.None\r\n                    || effectivePadding.bottom != Enums.Spacing.None\r\n                    || effectivePadding.left != Enums.Spacing.None) {\r\n                    if (effectivePadding.top == Enums.Spacing.None) {\r\n                        effectivePadding.top = Enums.Spacing.Default;\r\n                    }\r\n\r\n                    if (effectivePadding.right == Enums.Spacing.None) {\r\n                        effectivePadding.right = Enums.Spacing.Default;\r\n                    }\r\n\r\n                    if (effectivePadding.bottom == Enums.Spacing.None) {\r\n                        effectivePadding = Object.assign({}, effectivePadding, {\r\n                            bottom: Enums.Spacing.Default\r\n                        })\r\n                    }\r\n\r\n                    if (effectivePadding.left == Enums.Spacing.None) {\r\n                        effectivePadding = Object.assign({}, effectivePadding, {\r\n                            left: Enums.Spacing.Default\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                if (effectivePadding.top == Enums.Spacing.None &&\r\n                    effectivePadding.right == Enums.Spacing.None &&\r\n                    effectivePadding.bottom == Enums.Spacing.None &&\r\n                    effectivePadding.left == Enums.Spacing.None) {\r\n                    effectivePadding = new PaddingDefinition(\r\n                        Enums.Spacing.Padding,\r\n                        Enums.Spacing.Padding,\r\n                        Enums.Spacing.Padding,\r\n                        Enums.Spacing.Padding);\r\n                }\r\n\r\n                physicalMargin = effectiveMargin.toSpacingDefinition(this.hostConfig);\r\n                physicalPadding = effectivePadding.toSpacingDefinition(this.hostConfig);\r\n            }\r\n            else {\r\n                physicalPadding = new PaddingDefinition(\r\n                    Enums.Spacing.Padding,\r\n                    Enums.Spacing.Padding,\r\n                    Enums.Spacing.Padding,\r\n                    Enums.Spacing.Padding\r\n                ).toSpacingDefinition(this.hostConfig);\r\n            }\r\n\r\n            if (this.renderedElement) {\r\n                this.renderedElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n                this.renderedElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n                this.renderedElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n                this.renderedElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n\r\n                this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n                this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n                this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n            }\r\n\r\n            if (this.separatorElement) {\r\n                if (this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                    this.separatorElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n                    this.separatorElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n                }\r\n                else {\r\n                    this.separatorElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n                    this.separatorElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = document.createElement(\"div\");\r\n        element.className = \"ac-container\";\r\n        element.style.display = \"flex\";\r\n        element.style.flexDirection = \"column\";\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Forces the container to be at least as tall as its content.\r\n            //\r\n            // Fixes a quirk in Chrome where, for nested flex elements, the\r\n            // inner element's height would never exceed the outer element's\r\n            // height. This caused overflow truncation to break -- containers\r\n            // would always be measured as not overflowing, since their heights\r\n            // were constrained by their parents as opposed to truly reflecting\r\n            // the height of their content.\r\n            //\r\n            // See the \"Browser Rendering Notes\" section of this answer:\r\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\r\n            element.style.minHeight = '-webkit-min-content';\r\n        }\r\n\r\n        switch (this.verticalContentAlignment) {\r\n            case Enums.VerticalAlignment.Center:\r\n                element.style.justifyContent = \"center\";\r\n                break;\r\n            case Enums.VerticalAlignment.Bottom:\r\n                element.style.justifyContent = \"flex-end\";\r\n                break;\r\n            default:\r\n                element.style.justifyContent = \"flex-start\";\r\n                break;\r\n        }\r\n\r\n        if (this.hasBackground) {\r\n            if (this.backgroundImage) {\r\n                this.backgroundImage.apply(element);\r\n            }\r\n\r\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.default);\r\n\r\n            if (!Utils.isNullOrEmpty(styleDefinition.backgroundColor)) {\r\n                element.style.backgroundColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\r\n            }\r\n        }\r\n\r\n        if (this.selectAction && this.hostConfig.supportsInteractivity) {\r\n            element.classList.add(\"ac-selectable\");\r\n            element.tabIndex = 0;\r\n            element.setAttribute(\"role\", \"button\");\r\n            element.setAttribute(\"aria-label\", this.selectAction.title);\r\n\r\n            element.onclick = (e) => {\r\n                if (this.selectAction != null) {\r\n                    this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            }\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this.selectAction != null) {\r\n                    // Enter or space pressed\r\n                    if (e.keyCode == 13 || e.keyCode == 32) {\r\n                        this.selectAction.execute();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._items.length > 0) {\r\n            var renderedElementCount: number = 0;\r\n\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var renderedElement = this.isElementAllowed(this._items[i], this.getForbiddenElementTypes()) ? this._items[i].render() : null;\r\n\r\n                if (renderedElement) {\r\n                    if (renderedElementCount > 0 && this._items[i].separatorElement) {\r\n                        this._items[i].separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, this._items[i].separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedElement);\r\n\r\n                    renderedElementCount++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Add 1 to account for rounding differences between browsers\r\n        var boundary = this.renderedElement.offsetTop + maxHeight + 1;\r\n\r\n        var handleElement = (cardElement: CardElement) => {\r\n            let elt = cardElement.renderedElement;\r\n\r\n            if (elt) {\r\n                switch (Utils.getFitStatus(elt, boundary)) {\r\n                    case Enums.ContainerFitStatus.FullyInContainer:\r\n                        let sizeChanged = cardElement['resetOverflow']();\r\n                        // If the element's size changed after resetting content,\r\n                        // we have to check if it still fits fully in the card\r\n                        if (sizeChanged) {\r\n                            handleElement(cardElement);\r\n                        }\r\n                        break;\r\n                    case Enums.ContainerFitStatus.Overflowing:\r\n                        let maxHeight = boundary - elt.offsetTop;\r\n                        cardElement['handleOverflow'](maxHeight);\r\n                        break;\r\n                    case Enums.ContainerFitStatus.FullyOutOfContainer:\r\n                        cardElement['handleOverflow'](0);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n\r\n        for (let item of this._items) {\r\n            handleElement(item);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let item of this._items) {\r\n            item['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    protected get hasBackground(): boolean {\r\n        var parentContainer = this.getParentContainer();\r\n\r\n        return this.backgroundImage != undefined || (this.hasExplicitStyle && (parentContainer ? parentContainer.style != this.style : false));\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        return Enums.ContainerStyle.Default;\r\n    }\r\n\r\n    protected get allowCustomStyle(): boolean {\r\n        return true;\r\n    }\r\n\r\n    backgroundImage: BackgroundImage;\r\n    verticalContentAlignment: Enums.VerticalAlignment = Enums.VerticalAlignment.Top;\r\n\r\n    get style(): string {\r\n        if (this.allowCustomStyle) {\r\n            return this._style && this.hostConfig.containerStyles.getStyleByName(this._style) ? this._style : this.defaultStyle;\r\n        }\r\n        else {\r\n            return this.defaultStyle;\r\n        }\r\n    }\r\n\r\n    set style(value: string) {\r\n        this._style = value;\r\n    }\r\n\r\n    get padding(): PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Container\";\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        for (var i = this._items.length - 1; i >= 0; i--) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this._style) {\r\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this._style);\r\n\r\n            if (!styleDefinition) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: \"Unknown container style: \" + this._style\r\n                    });\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (!this.hostConfig.supportsInteractivity && this._items[i].isInteractive) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Interactivity is not allowed.\"\r\n                    });\r\n            }\r\n\r\n            if (!this.isElementAllowed(this._items[i], this.getForbiddenElementTypes())) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Elements of type \" + this._items[i].getJsonTypeName() + \" are not allowed in this container.\"\r\n                    });\r\n            }\r\n\r\n            result = result.concat(this._items[i].validate());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, itemsCollectionPropertyName: string = \"items\") {\r\n        super.parse(json);\r\n\r\n        var jsonBackgroundImage = json[\"backgroundImage\"];\r\n\r\n        if (jsonBackgroundImage) {\r\n            this.backgroundImage = new BackgroundImage();\r\n\r\n            if (typeof jsonBackgroundImage === \"string\") {\r\n                this.backgroundImage.url = jsonBackgroundImage;\r\n                this.backgroundImage.mode = Enums.BackgroundImageMode.Stretch;\r\n            }\r\n            else if (typeof jsonBackgroundImage === \"object\") {\r\n                this.backgroundImage = new BackgroundImage();\r\n                this.backgroundImage.parse(json[\"backgroundImage\"]);\r\n            }\r\n        }\r\n\r\n        this.verticalContentAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalContentAlignment\"], this.verticalContentAlignment);\r\n\r\n        this._style = json[\"style\"];\r\n\r\n        if (json[itemsCollectionPropertyName] != null) {\r\n            var items = json[itemsCollectionPropertyName] as Array<any>;\r\n            this.clear();\r\n            for (var i = 0; i < items.length; i++) {\r\n                var elementType = items[i][\"type\"];\r\n\r\n                var element = AdaptiveCard.elementTypeRegistry.createInstance(elementType);\r\n\r\n                if (!element) {\r\n                    raiseParseError(\r\n                        {\r\n                            error: Enums.ValidationError.UnknownElementType,\r\n                            message: \"Unknown element type: \" + elementType\r\n                        });\r\n                }\r\n                else {\r\n                    this.addItem(element);\r\n\r\n                    element.parse(items[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        var selectActionJson = json[\"selectAction\"];\r\n\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson);\r\n        }\r\n    }\r\n\r\n    addItem(item: CardElement) {\r\n        if (!item.parent) {\r\n            if (item.isStandalone) {\r\n                this._items.push(item);\r\n\r\n                item.setParent(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Elements of type \" + item.getJsonTypeName() + \" cannot be used as standalone elements.\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"The element already belongs to another container.\")\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    canContentBleed(): boolean {\r\n        return this.hasBackground ? false : super.canContentBleed();\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            var item: CardElement = this._items[i];\r\n\r\n            result = result.concat(item.getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        var result: CardElement = super.getElementById(id);\r\n\r\n        if (!result) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                result = this._items[i].getElementById(id);\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            if (this.selectAction) {\r\n                result = this.selectAction.getActionById(id);\r\n            }\r\n\r\n            if (!result) {\r\n                for (var i = 0; i < this._items.length; i++) {\r\n                    result = this._items[i].getActionById(id);\r\n\r\n                    if (result) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        // render each item\r\n        let speak = null;\r\n\r\n        if (this._items.length > 0) {\r\n            speak = '';\r\n\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var result = this._items[i].renderSpeech();\r\n\r\n                if (result) {\r\n                    speak += result;\r\n                }\r\n            }\r\n        }\r\n\r\n        return speak;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        this.applyPadding();\r\n\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                this._items[i].updateLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Column extends Container {\r\n    private _computedWeight: number = 0;\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        renderedElement.style.minWidth = \"0\";\r\n\r\n        if (this.pixelWidth > 0) {\r\n            renderedElement.style.flex = \"0 0 \" + this.pixelWidth + \"px\";\r\n        }\r\n        else {\r\n            if (typeof this.width === \"number\") {\r\n                renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : this.width) + \"%\";\r\n            }\r\n            else if (this.width === \"auto\") {\r\n                renderedElement.style.flex = \"0 1 auto\";\r\n            }\r\n            else {\r\n                renderedElement.style.flex = \"1 1 50px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Vertical;\r\n    }\r\n\r\n    width: number | \"auto\" | \"stretch\" = \"auto\";\r\n    pixelWidth: number = 0;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Column\";\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        var jsonWidth = json[\"width\"];\r\n\r\n        if (jsonWidth === undefined) {\r\n            jsonWidth = json[\"size\"];\r\n\r\n            if (jsonWidth !== undefined) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.Deprecated,\r\n                        message: \"The \\\"Column.size\\\" property is deprecated and will be removed. Use the \\\"Column.width\\\" property instead.\"\r\n                    });\r\n            }\r\n        }\r\n\r\n        var invalidWidth = false;\r\n\r\n        if (typeof jsonWidth === \"number\") {\r\n            if (jsonWidth <= 0) {\r\n                invalidWidth = true;\r\n            }\r\n        }\r\n        else if (typeof jsonWidth === \"string\") {\r\n            if (jsonWidth != \"auto\" && jsonWidth != \"stretch\") {\r\n                var sizeAsNumber = parseInt(jsonWidth);\r\n\r\n                if (!isNaN(sizeAsNumber)) {\r\n                    jsonWidth = sizeAsNumber;\r\n                }\r\n                else {\r\n                    invalidWidth = true;\r\n                }\r\n            }\r\n        }\r\n        else if (jsonWidth) {\r\n            invalidWidth = true;\r\n        }\r\n\r\n        if (invalidWidth) {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid column width: \" + jsonWidth\r\n                });\r\n        }\r\n        else {\r\n            this.width = jsonWidth;\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class ColumnSet extends CardElement {\r\n    private _columns: Array<Column> = [];\r\n    private _selectAction: Action;\r\n\r\n    protected applyPadding() {\r\n        if (this.padding) {\r\n            if (this.renderedElement) {\r\n                var physicalPadding = this.padding.toSpacingDefinition(this.hostConfig);\r\n\r\n                this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n                this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n                this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this._columns.length > 0) {\r\n            var element = document.createElement(\"div\");\r\n            element.className = \"ac-columnSet\";\r\n            element.style.display = \"flex\";\r\n\r\n            if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                // See comment in Container.internalRender()\r\n                element.style.minHeight = '-webkit-min-content';\r\n            }\r\n\r\n            if (this.selectAction && this.hostConfig.supportsInteractivity) {\r\n                element.classList.add(\"ac-selectable\");\r\n\r\n                element.onclick = (e) => {\r\n                    this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            var totalWeight: number = 0;\r\n\r\n            for (let i = 0; i < this._columns.length; i++) {\r\n                if (typeof this._columns[i].width === \"number\") {\r\n                    totalWeight += <number>this._columns[i].width;\r\n                }\r\n            }\r\n\r\n            var renderedColumnCount: number = 0;\r\n\r\n            for (let i = 0; i < this._columns.length; i++) {\r\n                if (typeof this._columns[i].width === \"number\" && totalWeight > 0) {\r\n                    var computedWeight = 100 / totalWeight * <number>this._columns[i].width;\r\n\r\n                    // Best way to emulate \"internal\" access I know of\r\n                    this._columns[i][\"_computedWeight\"] = computedWeight;\r\n                }\r\n\r\n                var renderedColumn = this._columns[i].render();\r\n\r\n                if (renderedColumn) {\r\n                    if (renderedColumnCount > 0 && this._columns[i].separatorElement) {\r\n                        this._columns[i].separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, this._columns[i].separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedColumn);\r\n\r\n                    renderedColumnCount++;\r\n                }\r\n            }\r\n\r\n            return renderedColumnCount > 0 ? element : null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        for (let column of this._columns) {\r\n            column['handleOverflow'](maxHeight);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let column of this._columns) {\r\n            column['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    get padding(): PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ColumnSet\";\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        var selectActionJson = json[\"selectAction\"];\r\n\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson);\r\n        }\r\n\r\n        if (json[\"columns\"] != null) {\r\n            let jsonColumns = json[\"columns\"] as Array<any>;\r\n            this._columns = [];\r\n            for (let i = 0; i < jsonColumns.length; i++) {\r\n                var column = new Column();\r\n\r\n                column.parse(jsonColumns[i]);\r\n\r\n                this.addColumn(column);\r\n            }\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n        var weightedColumns: number = 0;\r\n        var stretchedColumns: number = 0;\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (typeof this._columns[i].width === \"number\") {\r\n                weightedColumns++;\r\n            }\r\n            else if (this._columns[i].width === \"stretch\") {\r\n                stretchedColumns++;\r\n            }\r\n\r\n            result = result.concat(this._columns[i].validate());\r\n        }\r\n\r\n        if (weightedColumns > 0 && stretchedColumns > 0) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.Hint,\r\n                    message: \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\r\n                });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        this.applyPadding();\r\n        \r\n        if (processChildren) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                this._columns[i].updateLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    addColumn(column: Column) {\r\n        if (!column.parent) {\r\n            this._columns.push(column);\r\n\r\n            column.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This column already belongs to another ColumnSet.\");\r\n        }\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == 0;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == this._columns.length - 1;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = result.concat(this._columns[i].getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        var result: CardElement = super.getElementById(id);\r\n\r\n        if (!result) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                result = this._columns[i].getElementById(id);\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = this._columns[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        // render each item\r\n        let speak = '';\r\n\r\n        if (this._columns.length > 0) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                speak += this._columns[i].renderSpeech();\r\n            }\r\n        }\r\n\r\n        return speak;\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Version {\r\n    private _versionString: string;\r\n    private _major: number;\r\n    private _minor: number;\r\n    private _isValid: boolean = true;\r\n\r\n    constructor(major: number = 1, minor: number = 1) {\r\n        this._major = major;\r\n        this._minor = minor;\r\n    }\r\n\r\n    static parse(versionString: string): Version {\r\n        if (!versionString) {\r\n            return null;\r\n        }\r\n\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toString(): string {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    }\r\n\r\n    get major(): number {\r\n        return this._major;\r\n    }\r\n\r\n    get minor(): number {\r\n        return this._minor;\r\n    }\r\n\r\n    get isValid(): boolean {\r\n        return this._isValid;\r\n    }\r\n}\r\n\r\nfunction raiseAnchorClickedEvent(element: CardElement, anchor: HTMLAnchorElement): boolean {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onAnchorClickedHandler = (card && card.onAnchorClicked) ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\r\n\r\n    return onAnchorClickedHandler != null ? onAnchorClickedHandler(card, anchor) : false;\r\n}\r\n\r\nfunction raiseExecuteActionEvent(action: Action) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onExecuteActionHandler = (card && card.onExecuteAction) ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\r\n\r\n    if (onExecuteActionHandler) {\r\n        action.prepare(action.parent.getRootElement().getAllInputs());\r\n\r\n        onExecuteActionHandler(action);\r\n    }\r\n}\r\n\r\nfunction raiseInlineCardExpandedEvent(action: ShowCardAction, isExpanded: boolean) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onInlineCardExpandedHandler = (card && card.onInlineCardExpanded) ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\r\n\r\n    if (onInlineCardExpandedHandler) {\r\n        onInlineCardExpandedHandler(action, isExpanded);\r\n    }\r\n}\r\n\r\nfunction raiseElementVisibilityChangedEvent(element: CardElement,\r\n    shouldUpdateLayout: boolean = true) {\r\n    let rootElement = element.getRootElement();\r\n\r\n    if (shouldUpdateLayout) {\r\n        rootElement.updateLayout();\r\n    }\r\n\r\n    let card = rootElement as AdaptiveCard;\r\n    let onElementVisibilityChangedHandler = (card && card.onElementVisibilityChanged) ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\r\n\r\n    if (onElementVisibilityChangedHandler != null) {\r\n        onElementVisibilityChangedHandler(element);\r\n    }\r\n}\r\n\r\nfunction raiseParseElementEvent(element: CardElement, json: any) {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onParseElementHandler = (card && card.onParseElement) ? card.onParseElement : AdaptiveCard.onParseElement;\r\n\r\n    if (onParseElementHandler != null) {\r\n        onParseElementHandler(element, json);\r\n    }\r\n}\r\n\r\nfunction raiseParseError(error: IValidationError) {\r\n    if (AdaptiveCard.onParseError != null) {\r\n        AdaptiveCard.onParseError(error);\r\n    }\r\n}\r\n\r\ninterface ITypeRegistration<T> {\r\n    typeName: string,\r\n    createInstance: () => T;\r\n}\r\n\r\nexport abstract class ContainerWithActions extends Container {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = super.internalRender();\r\n\r\n        var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation);\r\n\r\n        if (renderedActions) {\r\n            Utils.appendChild(\r\n                element,\r\n                Utils.renderSeparation(\r\n                    {\r\n                        spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing),\r\n                        lineThickness: null,\r\n                        lineColor: null\r\n                    },\r\n                    Enums.Orientation.Horizontal));\r\n            Utils.appendChild(element, renderedActions);\r\n        }\r\n\r\n        return element.children.length > 0 ? element : null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n        this._actionCollection.onHideActionCardPane = () => { this.showBottomSpacer(null) };\r\n        this._actionCollection.onShowActionCardPane = (action: ShowCardAction) => { this.hideBottomSpacer(null) };\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = this._actionCollection.getActionById(id);\r\n\r\n        return result ? result : super.getActionById(id);\r\n    }\r\n\r\n    parse(json: any, itemsCollectionPropertyName: string = \"items\") {\r\n        super.parse(json, itemsCollectionPropertyName);\r\n\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"] as Array<any>;\r\n\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                var action = createActionInstance(jsonActions[i]);\r\n\r\n                if (action != null) {\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result = super.validate();\r\n\r\n        if (this._actionCollection) {\r\n            result = result.concat(this._actionCollection.validate());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return super.isLastElement(element) && this._actionCollection.items.length == 0;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        this._actionCollection.addAction(action);\r\n    }\r\n\r\n    clear() {\r\n        super.clear();\r\n\r\n        this._actionCollection.clear();\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return super.getAllInputs().concat(this._actionCollection.getAllInputs());\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport abstract class TypeRegistry<T> {\r\n    private _items: Array<ITypeRegistration<T>> = [];\r\n\r\n    private findTypeRegistration(typeName: string): ITypeRegistration<T> {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                return this._items[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    abstract reset();\r\n\r\n    registerType(typeName: string, createInstance: () => T) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        if (registrationInfo != null) {\r\n            registrationInfo.createInstance = createInstance;\r\n        }\r\n        else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                createInstance: createInstance\r\n            }\r\n\r\n            this._items.push(registrationInfo);\r\n        }\r\n    }\r\n\r\n    unregisterType(typeName: string) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                this._items.splice(i, 1);\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    createInstance(typeName: string): T {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        return registrationInfo ? registrationInfo.createInstance() : null;\r\n    }\r\n}\r\n\r\nexport class ElementTypeRegistry extends TypeRegistry<CardElement> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(\"Container\", () => { return new Container(); });\r\n        this.registerType(\"TextBlock\", () => { return new TextBlock(); });\r\n        this.registerType(\"Image\", () => { return new Image(); });\r\n        this.registerType(\"ImageSet\", () => { return new ImageSet(); });\r\n        this.registerType(\"FactSet\", () => { return new FactSet(); });\r\n        this.registerType(\"ColumnSet\", () => { return new ColumnSet(); });\r\n        this.registerType(\"Input.Text\", () => { return new TextInput(); });\r\n        this.registerType(\"Input.Date\", () => { return new DateInput(); });\r\n        this.registerType(\"Input.Time\", () => { return new TimeInput(); });\r\n        this.registerType(\"Input.Number\", () => { return new NumberInput(); });\r\n        this.registerType(\"Input.ChoiceSet\", () => { return new ChoiceSetInput(); });\r\n        this.registerType(\"Input.Toggle\", () => { return new ToggleInput(); });\r\n    }\r\n}\r\n\r\nexport class ActionTypeRegistry extends TypeRegistry<Action> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(\"Action.OpenUrl\", () => { return new OpenUrlAction(); });\r\n        this.registerType(\"Action.Submit\", () => { return new SubmitAction(); });\r\n        this.registerType(\"Action.ShowCard\", () => { return new ShowCardAction(); });\r\n    }\r\n}\r\n\r\nexport class AdaptiveCard extends ContainerWithActions {\r\n    private static currentVersion: Version = new Version(1, 0);\r\n\r\n    static useAutomaticContainerBleeding: boolean = false;\r\n    static preExpandSingleShowCardAction: boolean = false;\r\n    static useAdvancedTextBlockTruncation: boolean = true;\r\n    static useAdvancedCardBottomTruncation: boolean = false;\r\n    static useMarkdownInRadioButtonAndCheckbox: boolean = true;\r\n\r\n    static readonly elementTypeRegistry = new ElementTypeRegistry();\r\n    static readonly actionTypeRegistry = new ActionTypeRegistry();\r\n\r\n    static onAnchorClicked: (rootCard: AdaptiveCard, anchor: HTMLAnchorElement) => boolean = null;\r\n    static onExecuteAction: (action: Action) => void = null;\r\n    static onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    static onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    static onParseElement: (element: CardElement, json: any) => void = null;\r\n    static onParseError: (error: IValidationError) => void = null;\r\n\r\n    static processMarkdown = function (text: string): string {\r\n        // Check for markdownit\r\n        if (window[\"markdownit\"]) {\r\n            return window[\"markdownit\"]().render(text);\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    private isVersionSupported(): boolean {\r\n        if (this.bypassVersionCheck) {\r\n            return true;\r\n        }\r\n        else {\r\n            var unsupportedVersion: boolean =\r\n                !this.version ||\r\n                (AdaptiveCard.currentVersion.major < this.version.major) ||\r\n                (AdaptiveCard.currentVersion.major == this.version.major && AdaptiveCard.currentVersion.minor < this.version.minor);\r\n\r\n            return !unsupportedVersion;\r\n        }\r\n    }\r\n\r\n    private _cardTypeName?: string = \"AdaptiveCard\";\r\n\r\n    protected showBottomSpacer(requestingElement: CardElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            this.applyPadding();\r\n\r\n            // Do not walk up the tree from an AdaptiveCard instance\r\n        }\r\n    }\r\n\r\n    protected hideBottomSpacer(requestingElement: CardElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            if (this.renderedElement) {\r\n                this.renderedElement.style.paddingBottom = \"0px\";\r\n            }\r\n\r\n            // Do not walk up the tree from an AdaptiveCard instance\r\n        }\r\n    }\r\n\r\n    protected applyPadding() {\r\n        var effectivePadding = this.padding ? this.padding.toSpacingDefinition(this.hostConfig) : this.internalPadding.toSpacingDefinition(this.hostConfig);\r\n\r\n        this.renderedElement.style.paddingTop = effectivePadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = effectivePadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = effectivePadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = effectivePadding.left + \"px\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var renderedElement = super.internalRender();\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Unlike containers, the root card element should be allowed to\r\n            // be shorter than its content (otherwise the overflow truncation\r\n            // logic would never get triggered)\r\n            renderedElement.style.minHeight = null;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get defaultPadding(): PaddingDefinition {\r\n        return new PaddingDefinition(\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get allowCustomPadding(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get allowCustomStyle() {\r\n        return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\r\n    }\r\n\r\n    protected get hasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    onAnchorClicked: (rootCard: AdaptiveCard, anchor: HTMLAnchorElement) => boolean = null;\r\n    onExecuteAction: (action: Action) => void = null;\r\n    onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    onParseElement: (element: CardElement, json: any) => void = null;\r\n\r\n    version?: Version = new Version(1, 0);\r\n    fallbackText: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"AdaptiveCard\";\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this._cardTypeName != \"AdaptiveCard\") {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.MissingCardType,\r\n                    message: \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\"\r\n                });\r\n        }\r\n\r\n        if (!this.bypassVersionCheck && (!this.version || !this.version.isValid)) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: !this.version ? \"The version property must be specified.\" : \"Invalid version: \" + this.version\r\n                });\r\n        }\r\n        else if (!this.isVersionSupported()) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.UnsupportedCardVersion,\r\n                    message: \"The specified card version (\" + this.version + \") is not supported. The maximum supported card version is \" + AdaptiveCard.currentVersion\r\n                });\r\n        }\r\n\r\n        return result.concat(super.validate());\r\n    }\r\n\r\n    parse(json: any) {\r\n        this._cardTypeName = json[\"type\"];\r\n\r\n        var langId = json[\"lang\"];\r\n\r\n        if (langId && typeof langId === \"string\") {\r\n            try {\r\n                this.lang = langId;\r\n            }\r\n            catch (e) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: e.message\r\n                    });                        \r\n            }\r\n        }\r\n\r\n        this.version = Version.parse(json[\"version\"]);\r\n\r\n        this.fallbackText = json[\"fallbackText\"];\r\n\r\n        super.parse(json, \"body\");\r\n    }\r\n\r\n    render(target?: HTMLElement): HTMLElement {\r\n        var renderedCard: HTMLElement;\r\n\r\n        if (!this.isVersionSupported()) {\r\n            renderedCard = document.createElement(\"div\");\r\n            renderedCard.innerHTML = this.fallbackText ? this.fallbackText : \"The specified card version is not supported.\";\r\n        }\r\n        else {\r\n            renderedCard = super.render();\r\n\r\n            if (renderedCard) {\r\n                renderedCard.tabIndex = 0;\r\n\r\n                if (!Utils.isNullOrEmpty(this.speak)) {\r\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (target) {\r\n            target.appendChild(renderedCard);\r\n            this.updateLayout();\r\n        }\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && this.isRendered()) {\r\n            var card = this.renderedElement;\r\n            var padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\r\n\r\n            this['handleOverflow'](card.offsetHeight - padding);\r\n        }\r\n    }\r\n\r\n    canContentBleed(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nclass InlineAdaptiveCard extends AdaptiveCard {\r\n    protected get bypassVersionCheck(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get defaultPadding(): PaddingDefinition {\r\n        return new PaddingDefinition(\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        if (this.suppressStyle) {\r\n            return Enums.ContainerStyle.Default;\r\n        }\r\n        else {\r\n            return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    suppressStyle: boolean = false;\r\n\r\n    render(target?: HTMLElement) {\r\n        var renderedCard = super.render(target);\r\n        renderedCard.setAttribute(\"aria-live\", \"polite\");\r\n        renderedCard.removeAttribute(\"tabindex\");\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return [ShowCardAction];\r\n    }\r\n}\r\n\r\nconst defaultHostConfig: HostConfig.HostConfig = new HostConfig.HostConfig(\r\n    {\r\n        supportsInteractivity: true,\r\n        fontFamily: \"Segoe UI\",\r\n        spacing: {\r\n            small: 10,\r\n            default: 20,\r\n            medium: 30,\r\n            large: 40,\r\n            extraLarge: 50,\r\n            padding: 20\r\n        },\r\n        separator: {\r\n            lineThickness: 1,\r\n            lineColor: \"#EEEEEE\"\r\n        },\r\n        fontSizes: {\r\n            small: 12,\r\n            default: 14,\r\n            medium: 17,\r\n            large: 21,\r\n            extraLarge: 26\r\n        },\r\n        fontWeights: {\r\n            lighter: 200,\r\n            default: 400,\r\n            bolder: 600\r\n        },\r\n        imageSizes: {\r\n            small: 40,\r\n            medium: 80,\r\n            large: 160\r\n        },\r\n        containerStyles: {\r\n            default: {\r\n                backgroundColor: \"#FFFFFF\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            emphasis: {\r\n                backgroundColor: \"#08000000\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        actions: {\r\n            maxActions: 5,\r\n            spacing: Enums.Spacing.Default,\r\n            buttonSpacing: 10,\r\n            showCard: {\r\n                actionMode: Enums.ShowCardActionMode.Inline,\r\n                inlineTopMargin: 16\r\n            },\r\n            actionsOrientation: Enums.Orientation.Horizontal,\r\n            actionAlignment: Enums.ActionAlignment.Left\r\n        },\r\n        adaptiveCard: {\r\n            allowCustomStyle: false\r\n        },\r\n        imageSet: {\r\n            imageSize: Enums.Size.Medium,\r\n            maxImageHeight: 100\r\n        },\r\n        factSet: {\r\n            title: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Bolder,\r\n                wrap: true,\r\n                maxWidth: 150,\r\n            },\r\n            value: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Default,\r\n                wrap: true,\r\n            },\r\n            spacing: 10\r\n        }\r\n    });\n\n\n// WEBPACK FOOTER //\n// ./src/card-elements.ts","abstract class AbstractTextFormatter {\r\n    private _regularExpression: RegExp;\r\n\r\n    protected abstract internalFormat(lang: string, matches: RegExpExecArray): string;\r\n\r\n    constructor(regularExpression: RegExp) {\r\n        this._regularExpression = regularExpression;\r\n    }\r\n\r\n    format(lang: string, input: string): string {\r\n        var matches;\r\n        var result = input;\r\n\r\n        while ((matches = this._regularExpression.exec(input)) != null) {\r\n            result = result.replace(matches[0], this.internalFormat(lang, matches));\r\n        };\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass DateFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        var format = matches[2] != undefined ? matches[2].toLowerCase() : \"compact\";\r\n\r\n        if (format != \"compact\") {\r\n            return date.toLocaleDateString(lang, { day: \"numeric\", weekday: format, month: format, year: \"numeric\" });\r\n        }\r\n        else {\r\n            return date.toLocaleDateString();\r\n        }\r\n    }\r\n}\r\n\r\nclass TimeFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n\r\n        return date.toLocaleTimeString(lang, { hour: 'numeric', minute: '2-digit' });\r\n    }\r\n}\r\n\r\nexport function formatText(lang: string, text: string): string {\r\n    const formatters: Array<AbstractTextFormatter> = [\r\n        new DateFormatter(/\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g),\r\n        new TimeFormatter(/\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g)\r\n    ];\r\n\r\n    var result = text;\r\n\r\n    for (var i = 0; i < formatters.length; i++) {\r\n        result = formatters[i].format(lang, result);\r\n    }\r\n\r\n    return result;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/text-formatters.ts"],"sourceRoot":""}